### YamlMime:UniversalReference
items:
  - uid: azure-batch.Schedule
    name: Schedule
    fullName: Schedule
    children:
      - azure-batch.Schedule.doNotRunAfter
      - azure-batch.Schedule.doNotRunUntil
      - azure-batch.Schedule.recurrenceInterval
      - azure-batch.Schedule.startWindow
    langs:
      - typeScript
    type: interface
    summary: ''
    package: azure-batch
  - uid: azure-batch.Schedule.doNotRunAfter
    name: doNotRunAfter
    fullName: doNotRunAfter
    children: []
    langs:
      - typeScript
    type: property
    summary: DoNotRunAfter 時刻を指定しないと、定期的なジョブ スケジュールを作成しての場合は、明示的に終了するまで、ジョブ スケジュールがアクティブな残ります。
    optional: true
    syntax:
      content: 'doNotRunAfter?: Date'
      return:
        type:
          - Date
    package: azure-batch
  - uid: azure-batch.Schedule.doNotRunUntil
    name: doNotRunUntil
    fullName: doNotRunUntil
    children: []
    langs:
      - typeScript
    type: property
    summary: DoNotRunUntil 時間を指定しない場合、スケジュールがジョブをすぐに作成する準備ができてになります。
    optional: true
    syntax:
      content: 'doNotRunUntil?: Date'
      return:
        type:
          - Date
    package: azure-batch
  - uid: azure-batch.Schedule.recurrenceInterval
    name: recurrenceInterval
    fullName: recurrenceInterval
    children: []
    langs:
      - typeScript
    type: property
    summary: 'ジョブのスケジュールを持てないため最大でその下にある 1 つのアクティブなジョブ、特定の時点はジョブのスケジュールでは、新しいジョブの作成に時間が前のジョブが実行中の場合は、前のジョブが完了するまで、Batch サービスはしない新しいジョブを作成は。 前のジョブが新しい recurrenceInterval の startWindow 期間内で完了しなかった場合は、新しいジョブがその間隔でスケジュールいません。 定期的なジョブの場合は、通常、jobSpecification で、jobManagerTask を指定してください。 JobManagerTask を使用しない場合、外部プロセス ジョブが作成されると、監視する必要がありますがタスクをジョブに追加し、ジョブの次回の試行の準備を終了します。 既定値は、スケジュールが再発しない: doNotRunUntil 時間の後の startWindow 内で 1 つのジョブが作成され、そのジョブが完了するとすぐには、スケジュールが完了します。 最小値は、1 分です。 下限値を指定する場合、Batch サービスはエラー; でスケジュールを拒否します。REST API を直接呼び出す、HTTP 状態コードは 400 (Bad Request) です。'
    optional: true
    syntax:
      content: 'recurrenceInterval?: Duration'
      return:
        type:
          - Duration
    package: azure-batch
  - uid: azure-batch.Schedule.startWindow
    name: startWindow
    fullName: startWindow
    children: []
    langs:
      - typeScript
    type: property
    summary: ジョブは、startWindow 間隔内で作成されていない場合、'機会' は失われます。次の繰り返しのスケジュールまでジョブは作成されません。 スケジュールは定期的に実行、startWindow が繰り返し間隔よりも長い場合は、し、これと同じです、無限の startWindow に次の定期的な間隔の 1 つ recurrenceInterval で ' 期限' ジョブはフォワード実行されないためです。 既定値は有限ではありません。 最小値は、1 分です。 下限値を指定する場合、Batch サービスはエラー; でスケジュールを拒否します。REST API を直接呼び出す、HTTP 状態コードは 400 (Bad Request) です。
    optional: true
    syntax:
      content: 'startWindow?: Duration'
      return:
        type:
          - Duration
    package: azure-batch