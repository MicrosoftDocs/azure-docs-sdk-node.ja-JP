### YamlMime:UniversalReference
items:
  - uid: azure-batch.StartTask
    name: StartTask
    fullName: StartTask
    children:
      - azure-batch.StartTask.commandLine
      - azure-batch.StartTask.containerSettings
      - azure-batch.StartTask.environmentSettings
      - azure-batch.StartTask.maxTaskRetryCount
      - azure-batch.StartTask.resourceFiles
      - azure-batch.StartTask.userIdentity
      - azure-batch.StartTask.waitForSuccess
    langs:
      - typeScript
    type: interface
    summary: ノードに回復操作がトリガーされたときに、batch はタスクを再試行します。 回復操作の例が含まれます (ただしこれらに限定されません)、異常なノードが再起動またはホスト エラーにより、コンピューティング ノードが表示されなくなったとします。 操作は依存しないと、maxTaskRetryCount 照らし合わせてカウントされることはありません、回復を再試行します。 MaxTaskRetryCount が 0 の場合でも、復旧操作のための内部の再試行が発生します。 このため、すべてのタスクにべき等であることがあります。 つまり、タスクが許容されているが中断され、任意の破損またはデータの重複を発生させることがなく再起動する必要があります。 最適な練習を何らかの形式のチェックポイント処理を使用するには時間の長いタスクを実行します。 場合によっては、開始タスク可能性がありますを再実行場合でも、コンピューティング ノードが再起動されません。 特別な注意してください離脱を作成するタスクの処理を回避または開始タスクの作業ディレクトリからサービスをインストールまたは起動するようにこれは、バッチが開始タスクを再実行することからブロックされます。
    package: azure-batch
  - uid: azure-batch.StartTask.commandLine
    name: commandLine
    fullName: commandLine
    children: []
    langs:
      - typeScript
    type: property
    summary: 'コマンド ライン シェルで動作しないためことはできません活用してください環境変数の拡張などのシェルの機能。 このような機能を活用する場合を呼び出す必要があります、コマンドラインでシェル例 "cmd/c MyCommand"を使用して Windows でまたは"//bin/sh-c MyCommand"linux。 コマンドラインは、ファイルのパスを参照している場合、(タスク作業ディレクトリを基準)、相対パスを使うか、バッチの指定された環境変数を使用して (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables)します。'
    syntax:
      content: 'commandLine: string'
      return:
        type:
          - string
    package: azure-batch
  - uid: azure-batch.StartTask.containerSettings
    name: containerSettings
    fullName: containerSettings
    children: []
    langs:
      - typeScript
    type: property
    summary: これは、指定した場合、AZ_BATCH_NODE_ROOT_DIR (ノード上の Azure Batch ディレクトリのルート) の下のすべてのディレクトリに再帰的には、コンテナーにマップする、すべてのタスクの環境変数は、コンテナーにマップしてタスクのコマンドラインは、コンテナー内で実行します。 AZ_BATCH_NODE_ROOT_DIR の外部でのコンテナーで生成されたファイルをバッチ ファイルの Api はこれらのファイルにアクセスできないできなくは、ホストのディスクに反映されません可能性があります。
    optional: true
    syntax:
      content: 'containerSettings?: TaskContainerSettings'
      return:
        type:
          - azure-batch.TaskContainerSettings
    package: azure-batch
  - uid: azure-batch.StartTask.environmentSettings
    name: environmentSettings
    fullName: environmentSettings
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'environmentSettings?: EnvironmentSetting[]'
      return:
        type:
          - 'azure-batch.EnvironmentSetting[]'
    package: azure-batch
  - uid: azure-batch.StartTask.maxTaskRetryCount
    name: maxTaskRetryCount
    fullName: maxTaskRetryCount
    children: []
    langs:
      - typeScript
    type: property
    summary: Batch サービスは、その終了コードが 0 以外の場合、タスクを再試行します。 この値によって再試行の回数が限定されますのでご注意ください。 Batch サービスでは、タスクを 1 回、試すし、この上限に達するまで再試行できます。 たとえば、最大再試行回数が最大 3、Batch がタスクが場合 4 が (初回試行 1 回と再試行 3 回) タイムアウトします。 最大再試行回数が 0 の場合、Batch サービスは、タスクを再試行しません。 最大再試行回数が-1 の場合、Batch サービスは制限がないタスクを再試行します。
    optional: true
    syntax:
      content: 'maxTaskRetryCount?: number'
      return:
        type:
          - number
    package: azure-batch
  - uid: azure-batch.StartTask.resourceFiles
    name: resourceFiles
    fullName: resourceFiles
    children: []
    langs:
      - typeScript
    type: property
    summary: この要素の下に示されているファイルは、タスクの作業ディレクトリ内にあります。
    optional: true
    syntax:
      content: 'resourceFiles?: ResourceFile[]'
      return:
        type:
          - 'azure-batch.ResourceFile[]'
    package: azure-batch
  - uid: azure-batch.StartTask.userIdentity
    name: userIdentity
    fullName: userIdentity
    children: []
    langs:
      - typeScript
    type: property
    summary: 省略した場合、タスクは、タスクに一意の非管理者ユーザーとして実行されます。
    optional: true
    syntax:
      content: 'userIdentity?: UserIdentity'
      return:
        type:
          - azure-batch.UserIdentity
    package: azure-batch
  - uid: azure-batch.StartTask.waitForSuccess
    name: waitForSuccess
    fullName: waitForSuccess
    children: []
    langs:
      - typeScript
    type: property
    summary: True および開始タスクは、ノードで失敗した場合、Batch サービスは、その最大再試行回数 (maxTaskRetryCount) まで開始タスクを再試行します。 タスクが、まだ not はすべての再試行し、Batch サービス マーク使用できなくなり、ノードの後に正常に完了しにタスクをスケジュールしません。 この条件は、コンピューティング ノードの状態とエラー情報の詳細を使用して検出できます。 False の場合、Batch サービスは開始タスクが完了するは待機しません。 この場合、その他のタスクがタスクがまだ実行中の開始中にコンピューティング ノードでの実行を開始することができます。され、開始タスクが失敗した場合でも新しいタスクがコンピューティング ノードにあるスケジュール続行されます。 既定値は false です。
    optional: true
    syntax:
      content: 'waitForSuccess?: boolean'
      return:
        type:
          - boolean
    package: azure-batch
references:
  - uid: azure-batch.TaskContainerSettings
    name: TaskContainerSettings
    spec.typeScript:
      - name: TaskContainerSettings
        fullName: TaskContainerSettings
        uid: azure-batch.TaskContainerSettings
  - uid: 'azure-batch.EnvironmentSetting[]'
    name: 'EnvironmentSetting[]'
    spec.typeScript:
      - name: EnvironmentSetting
        fullName: EnvironmentSetting
        uid: azure-batch.EnvironmentSetting
      - name: '[]'
        fullName: '[]'
  - uid: 'azure-batch.ResourceFile[]'
    name: 'ResourceFile[]'
    spec.typeScript:
      - name: ResourceFile
        fullName: ResourceFile
        uid: azure-batch.ResourceFile
      - name: '[]'
        fullName: '[]'
  - uid: azure-batch.UserIdentity
    name: UserIdentity
    spec.typeScript:
      - name: UserIdentity
        fullName: UserIdentity
        uid: azure-batch.UserIdentity