### YamlMime:UniversalReference
items:
  - uid: azure-batch.CloudJobListResult
    name: CloudJobListResult
    fullName: CloudJobListResult
    children:
      - azure-batch.CloudJobListResult.Array
      - azure-batch.CloudJobListResult.concat
      - azure-batch.CloudJobListResult.concat_1
      - azure-batch.CloudJobListResult.every
      - azure-batch.CloudJobListResult.filter_1
      - azure-batch.CloudJobListResult.filter
      - azure-batch.CloudJobListResult.forEach
      - azure-batch.CloudJobListResult.indexOf
      - azure-batch.CloudJobListResult.join
      - azure-batch.CloudJobListResult.lastIndexOf
      - azure-batch.CloudJobListResult.length
      - azure-batch.CloudJobListResult.map
      - azure-batch.CloudJobListResult.odatanextLink
      - azure-batch.CloudJobListResult.pop
      - azure-batch.CloudJobListResult.push
      - azure-batch.CloudJobListResult.reduce
      - azure-batch.CloudJobListResult.reduce_1
      - azure-batch.CloudJobListResult.reduce_2
      - azure-batch.CloudJobListResult.reduceRight
      - azure-batch.CloudJobListResult.reduceRight_1
      - azure-batch.CloudJobListResult.reduceRight_2
      - azure-batch.CloudJobListResult.reverse
      - azure-batch.CloudJobListResult.shift
      - azure-batch.CloudJobListResult.slice
      - azure-batch.CloudJobListResult.some
      - azure-batch.CloudJobListResult.sort
      - azure-batch.CloudJobListResult.splice
      - azure-batch.CloudJobListResult.splice_1
      - azure-batch.CloudJobListResult.toLocaleString
      - azure-batch.CloudJobListResult.toString
      - azure-batch.CloudJobListResult.unshift
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: Array<azure-batch.CloudJob>
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.Array
    name: Array
    fullName: Array
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Array: ArrayConstructor'
      return:
        type:
          - ArrayConstructor
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.concat
    name: 'concat(ConcatArray<CloudJob>[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: 2 つ以上の配列を結合します。
    syntax:
      content: 'function concat(items: ConcatArray<CloudJob>[])'
      parameters:
        - id: items
          type:
            - 'ConcatArray<azure-batch.CloudJob>[]'
          description: |
            配列 1 の末尾に追加する項目。
      return:
        type:
          - 'azure-batch.CloudJob[]'
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.concat_1
    name: 'concat(T | ConcatArray<T>[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: 2 つ以上の配列を結合します。
    syntax:
      content: 'function concat(items: T | ConcatArray<T>[])'
      parameters:
        - id: items
          type:
            - 'T | ConcatArray<T>[]'
          description: |
            配列 1 の末尾に追加する項目。
      return:
        type:
          - 'azure-batch.CloudJob[]'
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.every
    name: 'every((value: CloudJob, index: number, array: CloudJob[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 配列のすべてのメンバーが指定されたテストを満たすかどうかを判断します。
    syntax:
      content: 'function every(callbackfn: (value: CloudJob, index: number, array: CloudJob[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: CloudJob, index: number, array: CloudJob[]) => boolean'
          description: 最大 3 つの引数を受け取る関数。 各メソッドは、配列の末尾まで、または、callbackfn が false を返すまで配列 1 の各要素に対して callbackfn 関数を呼び出します。
        - id: thisArg
          type:
            - any
          description: |
            オブジェクトをこのキーワードは callbackfn 関数で参照できます。 ThisArg を省略すると、次のように定義されていないこのとして提供される値。
          optional: true
      return:
        type:
          - boolean
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.filter_1
    name: 'filter((value: CloudJob, index: number, array: CloudJob[]) => any, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: コールバック関数で指定された条件を満たす、配列の要素を返します。
    syntax:
      content: 'function filter(callbackfn: (value: CloudJob, index: number, array: CloudJob[]) => any, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: CloudJob, index: number, array: CloudJob[]) => any'
          description: 最大 3 つの引数を受け取る関数。 フィルター メソッドは、配列内の各要素に対して 1 回の callbackfn 関数を呼び出します。
        - id: thisArg
          type:
            - any
          description: |
            オブジェクトをこのキーワードは callbackfn 関数で参照できます。 ThisArg を省略すると、次のように定義されていないこのとして提供される値。
          optional: true
      return:
        type:
          - 'azure-batch.CloudJob[]'
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.filter
    name: 'filter((value: CloudJob, index: number, array: CloudJob[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: コールバック関数で指定された条件を満たす、配列の要素を返します。
    syntax:
      content: 'function filter<S>(callbackfn: (value: CloudJob, index: number, array: CloudJob[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: CloudJob, index: number, array: CloudJob[]) => boolean'
          description: 最大 3 つの引数を受け取る関数。 フィルター メソッドは、配列内の各要素に対して 1 回の callbackfn 関数を呼び出します。
        - id: thisArg
          type:
            - any
          description: |
            オブジェクトをこのキーワードは callbackfn 関数で参照できます。 ThisArg を省略すると、次のように定義されていないこのとして提供される値。
          optional: true
      return:
        type:
          - 'S[]'
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.forEach
    name: 'forEach((value: CloudJob, index: number, array: CloudJob[]) => void, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 配列内の各要素の指定したアクションを実行します。
    syntax:
      content: 'function forEach(callbackfn: (value: CloudJob, index: number, array: CloudJob[]) => void, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: CloudJob, index: number, array: CloudJob[]) => void'
          description: 最大 3 つの引数を受け取る関数。 forEach は、配列内の各要素に対して 1 回の callbackfn 関数を呼び出します。
        - id: thisArg
          type:
            - any
          description: |
            オブジェクトをこのキーワードは callbackfn 関数で参照できます。 ThisArg を省略すると、次のように定義されていないこのとして提供される値。
          optional: true
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.indexOf
    name: 'indexOf(CloudJob, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 配列内の値を最初に見つかった位置のインデックスを返します。
    syntax:
      content: 'function indexOf(searchElement: CloudJob, fromIndex?: number)'
      parameters:
        - id: searchElement
          type:
            - azure-batch.CloudJob
          description: 配列内で検索する値。
        - id: fromIndex
          type:
            - number
          description: |
            検索の開始位置を示す配列インデックス。 FromIndex を省略すると、インデックス 0 位置にある検索を開始します。
          optional: true
      return:
        type:
          - number
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.join
    name: join(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: 指定した区切り記号文字列で区切られた配列のすべての要素を追加します。
    syntax:
      content: 'function join(separator?: string)'
      parameters:
        - id: separator
          type:
            - string
          description: |
            次の結果の文字列から、配列の 1 つの要素を区切るために使用する文字列。 省略した場合、配列の要素は、コンマで区切られます。
          optional: true
      return:
        type:
          - string
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.lastIndexOf
    name: 'lastIndexOf(CloudJob, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 配列で指定された値の最後に見つかった位置のインデックスを返します。
    syntax:
      content: 'function lastIndexOf(searchElement: CloudJob, fromIndex?: number)'
      parameters:
        - id: searchElement
          type:
            - azure-batch.CloudJob
          description: 配列内で検索する値。
        - id: fromIndex
          type:
            - number
          description: |
            検索の開始位置を示す配列インデックス。 FromIndex を省略した場合、配列内の最後のインデックス位置にある検索を開始します。
          optional: true
      return:
        type:
          - number
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.length
    name: length
    fullName: length
    children: []
    langs:
      - typeScript
    type: property
    summary: 取得または配列の長さを設定します。 これは、配列で定義されている最上位の要素より大きい番号 1 です。
    syntax:
      content: 'length: number'
      return:
        type:
          - number
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.map
    name: 'map((value: CloudJob, index: number, array: CloudJob[]) => U, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 、配列の各要素に対して定義されたコールバック関数を呼び出すし、結果を含む配列を返します。
    syntax:
      content: 'function map<U>(callbackfn: (value: CloudJob, index: number, array: CloudJob[]) => U, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: CloudJob, index: number, array: CloudJob[]) => U'
          description: 最大 3 つの引数を受け取る関数。 Map メソッドは、配列内の各要素に対して 1 回の callbackfn 関数を呼び出します。
        - id: thisArg
          type:
            - any
          description: |
            オブジェクトをこのキーワードは callbackfn 関数で参照できます。 ThisArg を省略すると、次のように定義されていないこのとして提供される値。
          optional: true
      return:
        type:
          - 'U[]'
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.odatanextLink
    name: odatanextLink
    fullName: odatanextLink
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'odatanextLink?: string'
      return:
        type:
          - string
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.pop
    name: pop()
    children: []
    type: method
    langs:
      - typeScript
    summary: 配列から最後の要素を削除し、返します。
    syntax:
      content: function pop()
      parameters: []
      return:
        type:
          - azure-batch.CloudJob | undefined
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.push
    name: 'push(CloudJob[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: 、配列に新しい要素を追加し、配列の長さを返します。
    syntax:
      content: 'function push(items: CloudJob[])'
      parameters:
        - id: items
          type:
            - 'azure-batch.CloudJob[]'
          description: |
            配列の新しい要素。
      return:
        type:
          - number
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.reduce
    name: 'reduce((previousValue: CloudJob, currentValue: CloudJob, currentIndex: number, array: CloudJob[]) => CloudJob)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 配列内のすべての要素に対して指定されたコールバック関数を呼び出します。 コールバック関数の戻り値、累積された結果であり、コールバック関数に次の呼び出しの引数として提供されます。
    syntax:
      content: 'function reduce(callbackfn: (previousValue: CloudJob, currentValue: CloudJob, currentIndex: number, array: CloudJob[]) => CloudJob)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: CloudJob, currentValue: CloudJob, currentIndex: number, array: CloudJob[]) => CloudJob'
          description: 最大 4 つの引数を受け取る関数。 Reduce メソッドは、配列内の各要素に対して 1 回の callbackfn 関数を呼び出します。
      return:
        type:
          - azure-batch.CloudJob
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.reduce_1
    name: 'reduce((previousValue: CloudJob, currentValue: CloudJob, currentIndex: number, array: CloudJob[]) => CloudJob, CloudJob)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 配列内のすべての要素に対して指定されたコールバック関数を呼び出します。 コールバック関数の戻り値、累積された結果であり、コールバック関数に次の呼び出しの引数として提供されます。
    syntax:
      content: 'function reduce(callbackfn: (previousValue: CloudJob, currentValue: CloudJob, currentIndex: number, array: CloudJob[]) => CloudJob, initialValue: CloudJob)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: CloudJob, currentValue: CloudJob, currentIndex: number, array: CloudJob[]) => CloudJob'
          description: ''
        - id: initialValue
          type:
            - azure-batch.CloudJob
          description: ''
      return:
        type:
          - azure-batch.CloudJob
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.reduce_2
    name: 'reduce((previousValue: U, currentValue: CloudJob, currentIndex: number, array: CloudJob[]) => U, U)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 配列内のすべての要素に対して指定されたコールバック関数を呼び出します。 コールバック関数の戻り値、累積された結果であり、コールバック関数に次の呼び出しの引数として提供されます。
    syntax:
      content: 'function reduce<U>(callbackfn: (previousValue: U, currentValue: CloudJob, currentIndex: number, array: CloudJob[]) => U, initialValue: U)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: U, currentValue: CloudJob, currentIndex: number, array: CloudJob[]) => U'
          description: 最大 4 つの引数を受け取る関数。 Reduce メソッドは、配列内の各要素に対して 1 回の callbackfn 関数を呼び出します。
        - id: initialValue
          type:
            - U
          description: |
            初期値が指定されている場合、累積を開始する初期値として使用されます。 Callbackfn 関数の最初の呼び出しでは、配列の値ではなく引数としてこの値を提供します。
      return:
        type:
          - U
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.reduceRight
    name: 'reduceRight((previousValue: CloudJob, currentValue: CloudJob, currentIndex: number, array: CloudJob[]) => CloudJob)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 降順で、配列内のすべての要素に対して指定されたコールバック関数を呼び出します。 コールバック関数の戻り値、累積された結果であり、コールバック関数に次の呼び出しの引数として提供されます。
    syntax:
      content: 'function reduceRight(callbackfn: (previousValue: CloudJob, currentValue: CloudJob, currentIndex: number, array: CloudJob[]) => CloudJob)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: CloudJob, currentValue: CloudJob, currentIndex: number, array: CloudJob[]) => CloudJob'
          description: 最大 4 つの引数を受け取る関数。 ReduceRight メソッドは、配列内の各要素に対して 1 回の callbackfn 関数を呼び出します。
      return:
        type:
          - azure-batch.CloudJob
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.reduceRight_1
    name: 'reduceRight((previousValue: CloudJob, currentValue: CloudJob, currentIndex: number, array: CloudJob[]) => CloudJob, CloudJob)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 降順で、配列内のすべての要素に対して指定されたコールバック関数を呼び出します。 コールバック関数の戻り値、累積された結果であり、コールバック関数に次の呼び出しの引数として提供されます。
    syntax:
      content: 'function reduceRight(callbackfn: (previousValue: CloudJob, currentValue: CloudJob, currentIndex: number, array: CloudJob[]) => CloudJob, initialValue: CloudJob)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: CloudJob, currentValue: CloudJob, currentIndex: number, array: CloudJob[]) => CloudJob'
          description: ''
        - id: initialValue
          type:
            - azure-batch.CloudJob
          description: ''
      return:
        type:
          - azure-batch.CloudJob
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.reduceRight_2
    name: 'reduceRight((previousValue: U, currentValue: CloudJob, currentIndex: number, array: CloudJob[]) => U, U)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 降順で、配列内のすべての要素に対して指定されたコールバック関数を呼び出します。 コールバック関数の戻り値、累積された結果であり、コールバック関数に次の呼び出しの引数として提供されます。
    syntax:
      content: 'function reduceRight<U>(callbackfn: (previousValue: U, currentValue: CloudJob, currentIndex: number, array: CloudJob[]) => U, initialValue: U)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: U, currentValue: CloudJob, currentIndex: number, array: CloudJob[]) => U'
          description: 最大 4 つの引数を受け取る関数。 ReduceRight メソッドは、配列内の各要素に対して 1 回の callbackfn 関数を呼び出します。
        - id: initialValue
          type:
            - U
          description: |
            初期値が指定されている場合、累積を開始する初期値として使用されます。 Callbackfn 関数の最初の呼び出しでは、配列の値ではなく引数としてこの値を提供します。
      return:
        type:
          - U
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.reverse
    name: reverse()
    children: []
    type: method
    langs:
      - typeScript
    summary: 配列内の要素を反転させます。
    syntax:
      content: function reverse()
      parameters: []
      return:
        type:
          - 'azure-batch.CloudJob[]'
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.shift
    name: shift()
    children: []
    type: method
    langs:
      - typeScript
    summary: 最初の要素を配列から削除し、返します。
    syntax:
      content: function shift()
      parameters: []
      return:
        type:
          - azure-batch.CloudJob | undefined
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.slice
    name: 'slice(number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 配列のセクションを返します。
    syntax:
      content: 'function slice(start?: number, end?: number)'
      parameters:
        - id: start
          type:
            - number
          description: 配列の指定した部分の先頭。
          optional: true
        - id: end
          type:
            - number
          description: |
            配列の指定した部分の末尾。
          optional: true
      return:
        type:
          - 'azure-batch.CloudJob[]'
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.some
    name: 'some((value: CloudJob, index: number, array: CloudJob[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 指定されたコールバック関数が返す配列の任意の要素に対して true かどうかを判断します。
    syntax:
      content: 'function some(callbackfn: (value: CloudJob, index: number, array: CloudJob[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: CloudJob, index: number, array: CloudJob[]) => boolean'
          description: 最大 3 つの引数を受け取る関数。 Some メソッドは、true を返します、callbackfn まで配列 1 のまたは配列の末尾までの各要素に対して callbackfn 関数を呼び出します。
        - id: thisArg
          type:
            - any
          description: |
            オブジェクトをこのキーワードは callbackfn 関数で参照できます。 ThisArg を省略すると、次のように定義されていないこのとして提供される値。
          optional: true
      return:
        type:
          - boolean
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.sort
    name: 'sort((a: CloudJob, b: CloudJob) => number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 配列を並べ替えます。
    syntax:
      content: 'function sort(compareFn?: (a: CloudJob, b: CloudJob) => number)'
      parameters:
        - id: compareFn
          type:
            - '(a: CloudJob, b: CloudJob) => number'
          description: |
            要素の順序を決定するための関数の名前。 省略した場合、要素は、ASCII 文字の並び順を昇順で並べ替えられます。
          optional: true
      return:
        type:
          - this
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.splice
    name: 'splice(number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 配列から要素を削除し、必要に応じて、要素の新しい位置に挿入し、削除の要素を返します。
    syntax:
      content: 'function splice(start: number, deleteCount?: number)'
      parameters:
        - id: start
          type:
            - number
          description: 要素の削除を開始する配列内の 0 から始まる位置。
        - id: deleteCount
          type:
            - number
          description: |
            削除する要素の数。
          optional: true
      return:
        type:
          - 'azure-batch.CloudJob[]'
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.splice_1
    name: 'splice(number, number, CloudJob[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: 配列から要素を削除し、必要に応じて、要素の新しい位置に挿入し、削除の要素を返します。
    syntax:
      content: 'function splice(start: number, deleteCount: number, items: CloudJob[])'
      parameters:
        - id: start
          type:
            - number
          description: 要素の削除を開始する配列内の 0 から始まる位置。
        - id: deleteCount
          type:
            - number
          description: 削除する要素の数。
        - id: items
          type:
            - 'azure-batch.CloudJob[]'
          description: |
            削除した要素の代わりに、配列に挿入する要素。
      return:
        type:
          - 'azure-batch.CloudJob[]'
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.toLocaleString
    name: toLocaleString()
    children: []
    type: method
    langs:
      - typeScript
    summary: 配列の文字列表現を返します。 要素は、その toLocalString メソッドを使用して文字列に変換されます。
    syntax:
      content: function toLocaleString()
      parameters: []
      return:
        type:
          - string
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.toString
    name: toString()
    children: []
    type: method
    langs:
      - typeScript
    summary: 配列の文字列表現を返します。
    syntax:
      content: function toString()
      parameters: []
      return:
        type:
          - string
    package: azure-batch
  - uid: azure-batch.CloudJobListResult.unshift
    name: 'unshift(CloudJob[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: 配列の先頭には、新しい要素を挿入します。
    syntax:
      content: 'function unshift(items: CloudJob[])'
      parameters:
        - id: items
          type:
            - 'azure-batch.CloudJob[]'
          description: |
            配列の先頭に挿入する要素。
      return:
        type:
          - number
    package: azure-batch
references:
  - uid: Array<azure-batch.CloudJob>
    name: CloudJob>
    spec.typeScript:
      - name: Array<
        fullName: Array<
      - name: CloudJob
        fullName: CloudJob
        uid: azure-batch.CloudJob
      - name: '>'
        fullName: '>'
  - uid: 'ConcatArray<azure-batch.CloudJob>[]'
    name: 'CloudJob>[]'
    spec.typeScript:
      - name: ConcatArray<
        fullName: ConcatArray<
      - name: CloudJob
        fullName: CloudJob
        uid: azure-batch.CloudJob
      - name: '>[]'
        fullName: '>[]'
  - uid: 'azure-batch.CloudJob[]'
    name: 'CloudJob[]'
    spec.typeScript:
      - name: CloudJob
        fullName: CloudJob
        uid: azure-batch.CloudJob
      - name: '[]'
        fullName: '[]'
  - uid: azure-batch.CloudJob
    name: CloudJob
    spec.typeScript:
      - name: CloudJob
        fullName: CloudJob
        uid: azure-batch.CloudJob
  - uid: azure-batch.CloudJob | undefined
    name: CloudJob | undefined
    spec.typeScript:
      - name: CloudJob
        fullName: CloudJob
        uid: azure-batch.CloudJob
      - name: ' | undefined'
        fullName: ' | undefined'