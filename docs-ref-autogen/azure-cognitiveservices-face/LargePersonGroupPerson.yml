### YamlMime:UniversalReference
ms.openlocfilehash: 20629fabdfd6f519f4262eda48dc707512731099
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 12/13/2018
ms.locfileid: "52026950"
items:
- uid: azure-cognitiveservices-face.LargePersonGroupPerson
  name: LargePersonGroupPerson
  fullName: LargePersonGroupPerson
  children:
  - azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream
  - azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream_2
  - azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream_1
  - azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromStreamWithHttpOperationResponse
  - azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl
  - azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl_2
  - azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl_1
  - azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrlWithHttpOperationResponse
  - azure-cognitiveservices-face.LargePersonGroupPerson.create
  - azure-cognitiveservices-face.LargePersonGroupPerson.create_2
  - azure-cognitiveservices-face.LargePersonGroupPerson.create_1
  - azure-cognitiveservices-face.LargePersonGroupPerson.createWithHttpOperationResponse
  - azure-cognitiveservices-face.LargePersonGroupPerson.deleteFace
  - azure-cognitiveservices-face.LargePersonGroupPerson.deleteFace_2
  - azure-cognitiveservices-face.LargePersonGroupPerson.deleteFace_1
  - azure-cognitiveservices-face.LargePersonGroupPerson.deleteFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.LargePersonGroupPerson.deleteMethod
  - azure-cognitiveservices-face.LargePersonGroupPerson.deleteMethod_2
  - azure-cognitiveservices-face.LargePersonGroupPerson.deleteMethod_1
  - azure-cognitiveservices-face.LargePersonGroupPerson.deleteMethodWithHttpOperationResponse
  - azure-cognitiveservices-face.LargePersonGroupPerson.get
  - azure-cognitiveservices-face.LargePersonGroupPerson.get_2
  - azure-cognitiveservices-face.LargePersonGroupPerson.get_1
  - azure-cognitiveservices-face.LargePersonGroupPerson.getFace
  - azure-cognitiveservices-face.LargePersonGroupPerson.getFace_2
  - azure-cognitiveservices-face.LargePersonGroupPerson.getFace_1
  - azure-cognitiveservices-face.LargePersonGroupPerson.getFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.LargePersonGroupPerson.getWithHttpOperationResponse
  - azure-cognitiveservices-face.LargePersonGroupPerson.list
  - azure-cognitiveservices-face.LargePersonGroupPerson.list_2
  - azure-cognitiveservices-face.LargePersonGroupPerson.list_1
  - azure-cognitiveservices-face.LargePersonGroupPerson.listWithHttpOperationResponse
  - azure-cognitiveservices-face.LargePersonGroupPerson.update
  - azure-cognitiveservices-face.LargePersonGroupPerson.update_2
  - azure-cognitiveservices-face.LargePersonGroupPerson.update_1
  - azure-cognitiveservices-face.LargePersonGroupPerson.updateFace
  - azure-cognitiveservices-face.LargePersonGroupPerson.updateFace_2
  - azure-cognitiveservices-face.LargePersonGroupPerson.updateFace_1
  - azure-cognitiveservices-face.LargePersonGroupPerson.updateFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.LargePersonGroupPerson.updateWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream
  name: addFaceFromStream(string, string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="fdf91-101">代表的な顔を識別するためのユーザーに追加します。</span><span class="sxs-lookup"><span data-stu-id="fdf91-101">Add a representative face to a person for identification.</span></span> <span data-ttu-id="fdf91-102">入力の顔は targetFace 四角形を使用してイメージとして指定されます。</span><span class="sxs-lookup"><span data-stu-id="fdf91-102">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromStream(largePersonGroupId: string, personId: string, image: stream.Readable, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="fdf91-103">特定の大規模なユーザー グループを参照する id です。</span><span class="sxs-lookup"><span data-stu-id="fdf91-103">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="fdf91-104">特定のユーザーを参照する id です。</span><span class="sxs-lookup"><span data-stu-id="fdf91-104">Id referencing a particular person.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="fdf91-105">イメージ ストリーム。</span><span class="sxs-lookup"><span data-stu-id="fdf91-105">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream_2
  name: addFaceFromStream(string, string, stream.Readable, Object, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="fdf91-106">代表的な顔を識別するためのユーザーに追加します。</span><span class="sxs-lookup"><span data-stu-id="fdf91-106">Add a representative face to a person for identification.</span></span> <span data-ttu-id="fdf91-107">入力の顔は targetFace 四角形を使用してイメージとして指定されます。</span><span class="sxs-lookup"><span data-stu-id="fdf91-107">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromStream(largePersonGroupId: string, personId: string, image: stream.Readable, options: Object, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream_1
  name: addFaceFromStream(string, string, stream.Readable, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="fdf91-108">代表的な顔を識別するためのユーザーに追加します。</span><span class="sxs-lookup"><span data-stu-id="fdf91-108">Add a representative face to a person for identification.</span></span> <span data-ttu-id="fdf91-109">入力の顔は targetFace 四角形を使用してイメージとして指定されます。</span><span class="sxs-lookup"><span data-stu-id="fdf91-109">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromStream(largePersonGroupId: string, personId: string, image: stream.Readable, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromStreamWithHttpOperationResponse
  name: addFaceFromStreamWithHttpOperationResponse(string, string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="fdf91-110">代表的な顔を識別するためのユーザーに追加します。</span><span class="sxs-lookup"><span data-stu-id="fdf91-110">Add a representative face to a person for identification.</span></span> <span data-ttu-id="fdf91-111">入力の顔は targetFace 四角形を使用してイメージとして指定されます。</span><span class="sxs-lookup"><span data-stu-id="fdf91-111">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromStreamWithHttpOperationResponse(largePersonGroupId: string, personId: string, image: stream.Readable, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="fdf91-112">特定の大規模なユーザー グループを参照する id です。</span><span class="sxs-lookup"><span data-stu-id="fdf91-112">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="fdf91-113">特定のユーザーを参照する id です。</span><span class="sxs-lookup"><span data-stu-id="fdf91-113">Id referencing a particular person.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="fdf91-114">イメージ ストリーム。</span><span class="sxs-lookup"><span data-stu-id="fdf91-114">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl
  name: addFaceFromUrl(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="fdf91-115">代表的な顔を識別するためのユーザーに追加します。</span><span class="sxs-lookup"><span data-stu-id="fdf91-115">Add a representative face to a person for identification.</span></span> <span data-ttu-id="fdf91-116">入力の顔は targetFace 四角形を使用してイメージとして指定されます。</span><span class="sxs-lookup"><span data-stu-id="fdf91-116">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromUrl(largePersonGroupId: string, personId: string, url: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="fdf91-117">特定の大規模なユーザー グループを参照する id です。</span><span class="sxs-lookup"><span data-stu-id="fdf91-117">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="fdf91-118">特定のユーザーを参照する id です。</span><span class="sxs-lookup"><span data-stu-id="fdf91-118">Id referencing a particular person.</span></span>
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="fdf91-119">イメージの URL をパブリックに到達可能</span><span class="sxs-lookup"><span data-stu-id="fdf91-119">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl_2
  name: addFaceFromUrl(string, string, string, Object, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="fdf91-120">代表的な顔を識別するためのユーザーに追加します。</span><span class="sxs-lookup"><span data-stu-id="fdf91-120">Add a representative face to a person for identification.</span></span> <span data-ttu-id="fdf91-121">入力の顔は targetFace 四角形を使用してイメージとして指定されます。</span><span class="sxs-lookup"><span data-stu-id="fdf91-121">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromUrl(largePersonGroupId: string, personId: string, url: string, options: Object, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl_1
  name: addFaceFromUrl(string, string, string, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="fdf91-122">代表的な顔を識別するためのユーザーに追加します。</span><span class="sxs-lookup"><span data-stu-id="fdf91-122">Add a representative face to a person for identification.</span></span> <span data-ttu-id="fdf91-123">入力の顔は targetFace 四角形を使用してイメージとして指定されます。</span><span class="sxs-lookup"><span data-stu-id="fdf91-123">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromUrl(largePersonGroupId: string, personId: string, url: string, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrlWithHttpOperationResponse
  name: addFaceFromUrlWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="fdf91-124">代表的な顔を識別するためのユーザーに追加します。</span><span class="sxs-lookup"><span data-stu-id="fdf91-124">Add a representative face to a person for identification.</span></span> <span data-ttu-id="fdf91-125">入力の顔は targetFace 四角形を使用してイメージとして指定されます。</span><span class="sxs-lookup"><span data-stu-id="fdf91-125">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromUrlWithHttpOperationResponse(largePersonGroupId: string, personId: string, url: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="fdf91-126">特定の大規模なユーザー グループを参照する id です。</span><span class="sxs-lookup"><span data-stu-id="fdf91-126">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="fdf91-127">特定のユーザーを参照する id です。</span><span class="sxs-lookup"><span data-stu-id="fdf91-127">Id referencing a particular person.</span></span>
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="fdf91-128">イメージの URL をパブリックに到達可能</span><span class="sxs-lookup"><span data-stu-id="fdf91-128">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.create
  name: create(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="fdf91-129">指定した大規模なユーザー グループに新しいユーザーを作成します。</span><span class="sxs-lookup"><span data-stu-id="fdf91-129">Create a new person in a specified large person group.</span></span>
  syntax:
    content: 'function create(largePersonGroupId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="fdf91-130">特定の大規模なユーザー グループを参照する id です。</span><span class="sxs-lookup"><span data-stu-id="fdf91-130">Id referencing a particular large person group.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.create_2
  name: create(string, Object, ServiceCallback<Person>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="fdf91-131">指定した大規模なユーザー グループに新しいユーザーを作成します。</span><span class="sxs-lookup"><span data-stu-id="fdf91-131">Create a new person in a specified large person group.</span></span>
  syntax:
    content: 'function create(largePersonGroupId: string, options: Object, callback: ServiceCallback<Person>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.Person>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.create_1
  name: create(string, ServiceCallback<Person>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="fdf91-132">指定した大規模なユーザー グループに新しいユーザーを作成します。</span><span class="sxs-lookup"><span data-stu-id="fdf91-132">Create a new person in a specified large person group.</span></span>
  syntax:
    content: 'function create(largePersonGroupId: string, callback: ServiceCallback<Person>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.Person>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.createWithHttpOperationResponse
  name: createWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="fdf91-133">指定した大規模なユーザー グループに新しいユーザーを作成します。</span><span class="sxs-lookup"><span data-stu-id="fdf91-133">Create a new person in a specified large person group.</span></span>
  syntax:
    content: 'function createWithHttpOperationResponse(largePersonGroupId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="fdf91-134">特定の大規模なユーザー グループを参照する id です。</span><span class="sxs-lookup"><span data-stu-id="fdf91-134">Id referencing a particular large person group.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.Person>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.deleteFace
  name: deleteFace(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="fdf91-135">個人の顔を削除します。</span><span class="sxs-lookup"><span data-stu-id="fdf91-135">Delete a face from a person.</span></span> <span data-ttu-id="fdf91-136">永続化された顔の相対的な機能も削除されます。</span><span class="sxs-lookup"><span data-stu-id="fdf91-136">Relative feature for the persisted face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(largePersonGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="fdf91-137">特定の大規模なユーザー グループを参照する id です。</span><span class="sxs-lookup"><span data-stu-id="fdf91-137">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="fdf91-138">特定のユーザーを参照する id です。</span><span class="sxs-lookup"><span data-stu-id="fdf91-138">Id referencing a particular person.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="fdf91-139">既存の顔の特定 persistedFaceId を参照する id です。</span><span class="sxs-lookup"><span data-stu-id="fdf91-139">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.deleteFace_2
  name: deleteFace(string, string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="fdf91-140">個人の顔を削除します。</span><span class="sxs-lookup"><span data-stu-id="fdf91-140">Delete a face from a person.</span></span> <span data-ttu-id="fdf91-141">永続化された顔の相対的な機能も削除されます。</span><span class="sxs-lookup"><span data-stu-id="fdf91-141">Relative feature for the persisted face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(largePersonGroupId: string, personId: string, persistedFaceId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.deleteFace_1
  name: deleteFace(string, string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="fdf91-142">個人の顔を削除します。</span><span class="sxs-lookup"><span data-stu-id="fdf91-142">Delete a face from a person.</span></span> <span data-ttu-id="fdf91-143">永続化された顔の相対的な機能も削除されます。</span><span class="sxs-lookup"><span data-stu-id="fdf91-143">Relative feature for the persisted face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(largePersonGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.deleteFaceWithHttpOperationResponse
  name: deleteFaceWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="fdf91-144">個人の顔を削除します。</span><span class="sxs-lookup"><span data-stu-id="fdf91-144">Delete a face from a person.</span></span> <span data-ttu-id="fdf91-145">永続化された顔の相対的な機能も削除されます。</span><span class="sxs-lookup"><span data-stu-id="fdf91-145">Relative feature for the persisted face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFaceWithHttpOperationResponse(largePersonGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="fdf91-146">特定の大規模なユーザー グループを参照する id です。</span><span class="sxs-lookup"><span data-stu-id="fdf91-146">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="fdf91-147">特定のユーザーを参照する id です。</span><span class="sxs-lookup"><span data-stu-id="fdf91-147">Id referencing a particular person.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="fdf91-148">既存の顔の特定 persistedFaceId を参照する id です。</span><span class="sxs-lookup"><span data-stu-id="fdf91-148">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.deleteMethod
  name: deleteMethod(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="fdf91-149">大きなユーザー グループから既存の人物を削除します。</span><span class="sxs-lookup"><span data-stu-id="fdf91-149">Delete an existing person from a large person group.</span></span> <span data-ttu-id="fdf91-150">個人のデータが格納されているすべてと、顔の特徴の人の記事では削除されます。</span><span class="sxs-lookup"><span data-stu-id="fdf91-150">All stored person data, and face features in the person entry will be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(largePersonGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="fdf91-151">特定の大規模なユーザー グループを参照する id です。</span><span class="sxs-lookup"><span data-stu-id="fdf91-151">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="fdf91-152">特定のユーザーを参照する id です。</span><span class="sxs-lookup"><span data-stu-id="fdf91-152">Id referencing a particular person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.deleteMethod_2
  name: deleteMethod(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="fdf91-153">大きなユーザー グループから既存の人物を削除します。</span><span class="sxs-lookup"><span data-stu-id="fdf91-153">Delete an existing person from a large person group.</span></span> <span data-ttu-id="fdf91-154">個人のデータが格納されているすべてと、顔の特徴の人の記事では削除されます。</span><span class="sxs-lookup"><span data-stu-id="fdf91-154">All stored person data, and face features in the person entry will be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(largePersonGroupId: string, personId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.deleteMethod_1
  name: deleteMethod(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="fdf91-155">大きなユーザー グループから既存の人物を削除します。</span><span class="sxs-lookup"><span data-stu-id="fdf91-155">Delete an existing person from a large person group.</span></span> <span data-ttu-id="fdf91-156">個人のデータが格納されているすべてと、顔の特徴の人の記事では削除されます。</span><span class="sxs-lookup"><span data-stu-id="fdf91-156">All stored person data, and face features in the person entry will be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(largePersonGroupId: string, personId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="fdf91-157">大きなユーザー グループから既存の人物を削除します。</span><span class="sxs-lookup"><span data-stu-id="fdf91-157">Delete an existing person from a large person group.</span></span> <span data-ttu-id="fdf91-158">個人のデータが格納されているすべてと、顔の特徴の人の記事では削除されます。</span><span class="sxs-lookup"><span data-stu-id="fdf91-158">All stored person data, and face features in the person entry will be deleted.</span></span>
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(largePersonGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="fdf91-159">特定の大規模なユーザー グループを参照する id です。</span><span class="sxs-lookup"><span data-stu-id="fdf91-159">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="fdf91-160">特定のユーザーを参照する id です。</span><span class="sxs-lookup"><span data-stu-id="fdf91-160">Id referencing a particular person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.get
  name: get(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="fdf91-161">登録済みの永続化された顔、名 userData など、個人の情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="fdf91-161">Retrieve a person's information, including registered persisted faces, name and userData.</span></span>
  syntax:
    content: 'function get(largePersonGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="fdf91-162">特定の大規模なユーザー グループを参照する id です。</span><span class="sxs-lookup"><span data-stu-id="fdf91-162">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="fdf91-163">特定のユーザーを参照する id です。</span><span class="sxs-lookup"><span data-stu-id="fdf91-163">Id referencing a particular person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.get_2
  name: get(string, string, Object, ServiceCallback<Person>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="fdf91-164">登録済みの永続化された顔、名 userData など、個人の情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="fdf91-164">Retrieve a person's information, including registered persisted faces, name and userData.</span></span>
  syntax:
    content: 'function get(largePersonGroupId: string, personId: string, options: Object, callback: ServiceCallback<Person>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.Person>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.get_1
  name: get(string, string, ServiceCallback<Person>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="fdf91-165">登録済みの永続化された顔、名 userData など、個人の情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="fdf91-165">Retrieve a person's information, including registered persisted faces, name and userData.</span></span>
  syntax:
    content: 'function get(largePersonGroupId: string, personId: string, callback: ServiceCallback<Person>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.Person>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.getFace
  name: getFace(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="fdf91-166">永続化された顔 (persistedFaceId、personId およびその属する largePersonGroupId で指定) に関する情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="fdf91-166">Retrieve information about a persisted face (specified by persistedFaceId, personId and its belonging largePersonGroupId).</span></span>
  syntax:
    content: 'function getFace(largePersonGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="fdf91-167">特定の大規模なユーザー グループを参照する id です。</span><span class="sxs-lookup"><span data-stu-id="fdf91-167">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="fdf91-168">特定のユーザーを参照する id です。</span><span class="sxs-lookup"><span data-stu-id="fdf91-168">Id referencing a particular person.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="fdf91-169">既存の顔の特定 persistedFaceId を参照する id です。</span><span class="sxs-lookup"><span data-stu-id="fdf91-169">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.getFace_2
  name: getFace(string, string, string, Object, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="fdf91-170">永続化された顔 (persistedFaceId、personId およびその属する largePersonGroupId で指定) に関する情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="fdf91-170">Retrieve information about a persisted face (specified by persistedFaceId, personId and its belonging largePersonGroupId).</span></span>
  syntax:
    content: 'function getFace(largePersonGroupId: string, personId: string, persistedFaceId: string, options: Object, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.getFace_1
  name: getFace(string, string, string, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="fdf91-171">永続化された顔 (persistedFaceId、personId およびその属する largePersonGroupId で指定) に関する情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="fdf91-171">Retrieve information about a persisted face (specified by persistedFaceId, personId and its belonging largePersonGroupId).</span></span>
  syntax:
    content: 'function getFace(largePersonGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.getFaceWithHttpOperationResponse
  name: getFaceWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="fdf91-172">永続化された顔 (persistedFaceId、personId およびその属する largePersonGroupId で指定) に関する情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="fdf91-172">Retrieve information about a persisted face (specified by persistedFaceId, personId and its belonging largePersonGroupId).</span></span>
  syntax:
    content: 'function getFaceWithHttpOperationResponse(largePersonGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="fdf91-173">特定の大規模なユーザー グループを参照する id です。</span><span class="sxs-lookup"><span data-stu-id="fdf91-173">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="fdf91-174">特定のユーザーを参照する id です。</span><span class="sxs-lookup"><span data-stu-id="fdf91-174">Id referencing a particular person.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="fdf91-175">既存の顔の特定 persistedFaceId を参照する id です。</span><span class="sxs-lookup"><span data-stu-id="fdf91-175">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.getWithHttpOperationResponse
  name: getWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="fdf91-176">登録済みの永続化された顔、名 userData など、個人の情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="fdf91-176">Retrieve a person's information, including registered persisted faces, name and userData.</span></span>
  syntax:
    content: 'function getWithHttpOperationResponse(largePersonGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="fdf91-177">特定の大規模なユーザー グループを参照する id です。</span><span class="sxs-lookup"><span data-stu-id="fdf91-177">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="fdf91-178">特定のユーザーを参照する id です。</span><span class="sxs-lookup"><span data-stu-id="fdf91-178">Id referencing a particular person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.Person>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.list
  name: list(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="fdf91-179">大きなユーザー グループではすべて、担当者の一覧を表示し、ユーザー情報 (personId、名前、userData 人の顔が登録済みの persistedFaceIds など) を取得します。</span><span class="sxs-lookup"><span data-stu-id="fdf91-179">List all persons in a large person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person).</span></span>
  syntax:
    content: 'function list(largePersonGroupId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="fdf91-180">特定の大規模なユーザー グループを参照する id です。</span><span class="sxs-lookup"><span data-stu-id="fdf91-180">Id referencing a particular large person group.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.list_2
  name: list(string, Object, ServiceCallback<Person[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="fdf91-181">大きなユーザー グループではすべて、担当者の一覧を表示し、ユーザー情報 (personId、名前、userData 人の顔が登録済みの persistedFaceIds など) を取得します。</span><span class="sxs-lookup"><span data-stu-id="fdf91-181">List all persons in a large person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person).</span></span>
  syntax:
    content: 'function list(largePersonGroupId: string, options: Object, callback: ServiceCallback<Person[]>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.Person[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.list_1
  name: list(string, ServiceCallback<Person[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="fdf91-182">大きなユーザー グループではすべて、担当者の一覧を表示し、ユーザー情報 (personId、名前、userData 人の顔が登録済みの persistedFaceIds など) を取得します。</span><span class="sxs-lookup"><span data-stu-id="fdf91-182">List all persons in a large person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person).</span></span>
  syntax:
    content: 'function list(largePersonGroupId: string, callback: ServiceCallback<Person[]>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.Person[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.listWithHttpOperationResponse
  name: listWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="fdf91-183">大きなユーザー グループではすべて、担当者の一覧を表示し、ユーザー情報 (personId、名前、userData 人の顔が登録済みの persistedFaceIds など) を取得します。</span><span class="sxs-lookup"><span data-stu-id="fdf91-183">List all persons in a large person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person).</span></span>
  syntax:
    content: 'function listWithHttpOperationResponse(largePersonGroupId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="fdf91-184">特定の大規模なユーザー グループを参照する id です。</span><span class="sxs-lookup"><span data-stu-id="fdf91-184">Id referencing a particular large person group.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.Person[]>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.update
  name: update(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="fdf91-185">名前または個人の userData を更新します。</span><span class="sxs-lookup"><span data-stu-id="fdf91-185">Update name or userData of a person.</span></span>
  syntax:
    content: 'function update(largePersonGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="fdf91-186">特定の大規模なユーザー グループを参照する id です。</span><span class="sxs-lookup"><span data-stu-id="fdf91-186">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="fdf91-187">特定のユーザーを参照する id です。</span><span class="sxs-lookup"><span data-stu-id="fdf91-187">Id referencing a particular person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.update_2
  name: update(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="fdf91-188">名前または個人の userData を更新します。</span><span class="sxs-lookup"><span data-stu-id="fdf91-188">Update name or userData of a person.</span></span>
  syntax:
    content: 'function update(largePersonGroupId: string, personId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.update_1
  name: update(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="fdf91-189">名前または個人の userData を更新します。</span><span class="sxs-lookup"><span data-stu-id="fdf91-189">Update name or userData of a person.</span></span>
  syntax:
    content: 'function update(largePersonGroupId: string, personId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.updateFace
  name: updateFace(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="fdf91-190">更新プログラムをユーザーには、顔の userData フィールドが永続化されます。</span><span class="sxs-lookup"><span data-stu-id="fdf91-190">Update a person persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFace(largePersonGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="fdf91-191">特定の大規模なユーザー グループを参照する id です。</span><span class="sxs-lookup"><span data-stu-id="fdf91-191">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="fdf91-192">特定のユーザーを参照する id です。</span><span class="sxs-lookup"><span data-stu-id="fdf91-192">Id referencing a particular person.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="fdf91-193">既存の顔の特定 persistedFaceId を参照する id です。</span><span class="sxs-lookup"><span data-stu-id="fdf91-193">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.updateFace_2
  name: updateFace(string, string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="fdf91-194">更新プログラムをユーザーには、顔の userData フィールドが永続化されます。</span><span class="sxs-lookup"><span data-stu-id="fdf91-194">Update a person persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFace(largePersonGroupId: string, personId: string, persistedFaceId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.updateFace_1
  name: updateFace(string, string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="fdf91-195">更新プログラムをユーザーには、顔の userData フィールドが永続化されます。</span><span class="sxs-lookup"><span data-stu-id="fdf91-195">Update a person persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFace(largePersonGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.updateFaceWithHttpOperationResponse
  name: updateFaceWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="fdf91-196">更新プログラムをユーザーには、顔の userData フィールドが永続化されます。</span><span class="sxs-lookup"><span data-stu-id="fdf91-196">Update a person persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFaceWithHttpOperationResponse(largePersonGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="fdf91-197">特定の大規模なユーザー グループを参照する id です。</span><span class="sxs-lookup"><span data-stu-id="fdf91-197">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="fdf91-198">特定のユーザーを参照する id です。</span><span class="sxs-lookup"><span data-stu-id="fdf91-198">Id referencing a particular person.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="fdf91-199">既存の顔の特定 persistedFaceId を参照する id です。</span><span class="sxs-lookup"><span data-stu-id="fdf91-199">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.updateWithHttpOperationResponse
  name: updateWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="fdf91-200">名前または個人の userData を更新します。</span><span class="sxs-lookup"><span data-stu-id="fdf91-200">Update name or userData of a person.</span></span>
  syntax:
    content: 'function updateWithHttpOperationResponse(largePersonGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="fdf91-201">特定の大規模なユーザー グループを参照する id です。</span><span class="sxs-lookup"><span data-stu-id="fdf91-201">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="fdf91-202">特定のユーザーを参照する id です。</span><span class="sxs-lookup"><span data-stu-id="fdf91-202">Id referencing a particular person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
references:
- uid: Promise<azure-cognitiveservices-face.PersistedFace>
  name: PersistedFace>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.PersistedFace>
  name: PersistedFace>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  name: PersistedFace>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.Person>
  name: Person>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: Person
    fullName: Person
    uid: azure-cognitiveservices-face.Person
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.Person>
  name: Person>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: Person
    fullName: Person
    uid: azure-cognitiveservices-face.Person
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.Person>>
  name: Person>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: Person
    fullName: Person
    uid: azure-cognitiveservices-face.Person
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.Person[]>
  name: Person[]>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: Person
    fullName: Person
    uid: azure-cognitiveservices-face.Person
  - name: '[]>'
    fullName: '[]>'
- uid: ServiceCallback<azure-cognitiveservices-face.Person[]>
  name: Person[]>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: Person
    fullName: Person
    uid: azure-cognitiveservices-face.Person
  - name: '[]>'
    fullName: '[]>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.Person[]>>
  name: Person[]>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: Person
    fullName: Person
    uid: azure-cognitiveservices-face.Person
  - name: '[]>>'
    fullName: '[]>>'
