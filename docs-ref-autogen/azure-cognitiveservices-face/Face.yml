### YamlMime:UniversalReference
ms.openlocfilehash: 470cfbc0b4033164719779f553927946a2544cde
ms.sourcegitcommit: 286f52ea38c9eff2ec9d4f8cabeb86f62fd9c406
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 08/22/2018
ms.locfileid: "41692611"
items:
- uid: azure-cognitiveservices-face.Face
  name: Face
  fullName: Face
  children:
  - azure-cognitiveservices-face.Face.detect
  - azure-cognitiveservices-face.Face.detect_1
  - azure-cognitiveservices-face.Face.detect_2
  - azure-cognitiveservices-face.Face.detectInStream_1
  - azure-cognitiveservices-face.Face.detectInStream_2
  - azure-cognitiveservices-face.Face.detectInStream
  - azure-cognitiveservices-face.Face.detectInStreamWithHttpOperationResponse
  - azure-cognitiveservices-face.Face.detectWithHttpOperationResponse
  - azure-cognitiveservices-face.Face.findSimilar
  - azure-cognitiveservices-face.Face.findSimilar_1
  - azure-cognitiveservices-face.Face.findSimilar_2
  - azure-cognitiveservices-face.Face.findSimilarWithHttpOperationResponse
  - azure-cognitiveservices-face.Face.group
  - azure-cognitiveservices-face.Face.group_1
  - azure-cognitiveservices-face.Face.group_2
  - azure-cognitiveservices-face.Face.groupWithHttpOperationResponse
  - azure-cognitiveservices-face.Face.identify_1
  - azure-cognitiveservices-face.Face.identify_2
  - azure-cognitiveservices-face.Face.identify
  - azure-cognitiveservices-face.Face.identifyWithHttpOperationResponse
  - azure-cognitiveservices-face.Face.verify
  - azure-cognitiveservices-face.Face.verify_1
  - azure-cognitiveservices-face.Face.verify_2
  - azure-cognitiveservices-face.Face.verifyWithHttpOperationResponse
  - azure-cognitiveservices-face.Face.verifyWithPersonGroup
  - azure-cognitiveservices-face.Face.verifyWithPersonGroup_1
  - azure-cognitiveservices-face.Face.verifyWithPersonGroup_2
  - azure-cognitiveservices-face.Face.verifyWithPersonGroupWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.detect
  name: detect
  children: []
  type: method
  langs:
  - typeScript
  summary: イメージと返します顔などの場所には、必要に応じて faceIds、ランドマーク、および属性を使用して、人間の顔を検出します。
  syntax:
    content: 'function detect(url: string, options?: Object)'
    parameters:
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.DetectedFace[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.detect_1
  name: detect
  children: []
  type: method
  langs:
  - typeScript
  summary: イメージと返します顔などの場所には、必要に応じて faceIds、ランドマーク、および属性を使用して、人間の顔を検出します。
  syntax:
    content: 'function detect(url: string, callback: ServiceCallback<DetectedFace[]>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.DetectedFace[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.DetectedFace[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.detect_2
  name: detect
  children: []
  type: method
  langs:
  - typeScript
  summary: イメージと返します顔などの場所には、必要に応じて faceIds、ランドマーク、および属性を使用して、人間の顔を検出します。
  syntax:
    content: 'function detect(url: string, options: Object, callback: ServiceCallback<DetectedFace[]>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.DetectedFace[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.DetectedFace[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.detectInStream_1
  name: detectInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: イメージと返します顔などの場所には、必要に応じて faceIds、ランドマーク、および属性を使用して、人間の顔を検出します。
  syntax:
    content: 'function detectInStream(image: stream.Readable, callback: ServiceCallback<DetectedFace[]>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.DetectedFace[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.DetectedFace[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.detectInStream_2
  name: detectInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: イメージと返します顔などの場所には、必要に応じて faceIds、ランドマーク、および属性を使用して、人間の顔を検出します。
  syntax:
    content: 'function detectInStream(image: stream.Readable, options: Object, callback: ServiceCallback<DetectedFace[]>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.DetectedFace[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.DetectedFace[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.detectInStream
  name: detectInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: イメージと返します顔などの場所には、必要に応じて faceIds、ランドマーク、および属性を使用して、人間の顔を検出します。
  syntax:
    content: 'function detectInStream(image: stream.Readable, options?: Object)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        イメージ ストリーム。
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.DetectedFace[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.detectInStreamWithHttpOperationResponse
  name: detectInStreamWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: イメージと返します顔などの場所には、必要に応じて faceIds、ランドマーク、および属性を使用して、人間の顔を検出します。
  syntax:
    content: 'function detectInStreamWithHttpOperationResponse(image: stream.Readable, options?: Object)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        イメージ ストリーム。
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.DetectedFace[]>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.detectWithHttpOperationResponse
  name: detectWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: イメージと返します顔などの場所には、必要に応じて faceIds、ランドマーク、および属性を使用して、人間の顔を検出します。
  syntax:
    content: 'function detectWithHttpOperationResponse(url: string, options?: Object)'
    parameters:
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.DetectedFace[]>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.findSimilar
  name: findSimilar
  children: []
  type: method
  langs:
  - typeScript
  summary: 顔の faceId を指定するには、faceId 配列または、faceListId から似ている顔を検索します。
  syntax:
    content: 'function findSimilar(faceId: string, options?: Object)'
    parameters:
    - id: faceId
      type:
      - string
      description: >
        クエリの表面の FaceId します。 ユーザーは、顔を呼び出す - 有効な faceId を取得するには、1 つ目を検出する必要があります。 この faceId が永続化されていないと、検出の呼び出しの後 24 時間の有効期限が切れることに注意してください。
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.SimilarFaceResult[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.findSimilar_1
  name: findSimilar
  children: []
  type: method
  langs:
  - typeScript
  summary: 顔の faceId を指定するには、faceId 配列または、faceListId から似ている顔を検索します。
  syntax:
    content: 'function findSimilar(faceId: string, callback: ServiceCallback<SimilarFaceResult[]>)'
    parameters:
    - id: faceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.SimilarFaceResult[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.SimilarFaceResult[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.findSimilar_2
  name: findSimilar
  children: []
  type: method
  langs:
  - typeScript
  summary: 顔の faceId を指定するには、faceId 配列または、faceListId から似ている顔を検索します。
  syntax:
    content: 'function findSimilar(faceId: string, options: Object, callback: ServiceCallback<SimilarFaceResult[]>)'
    parameters:
    - id: faceId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.SimilarFaceResult[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.SimilarFaceResult[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.findSimilarWithHttpOperationResponse
  name: findSimilarWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: 顔の faceId を指定するには、faceId 配列または、faceListId から似ている顔を検索します。
  syntax:
    content: 'function findSimilarWithHttpOperationResponse(faceId: string, options?: Object)'
    parameters:
    - id: faceId
      type:
      - string
      description: >
        クエリの表面の FaceId します。 ユーザーは、顔を呼び出す - 有効な faceId を取得するには、1 つ目を検出する必要があります。 この faceId が永続化されていないと、検出の呼び出しの後 24 時間の有効期限が切れることに注意してください。
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.SimilarFaceResult[]>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.group
  name: group
  children: []
  type: method
  langs:
  - typeScript
  summary: 候補の面を face の類似性に基づいてグループに分割します。
  syntax:
    content: 'function group(faceIds: string[], options?: Object)'
    parameters:
    - id: faceIds
      type:
      - string[]
      description: >
        候補 faceId の配列を作成して顔 - を検出します。

        最大値は、顔 1000 個です。
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.GroupResponse>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.group_1
  name: group
  children: []
  type: method
  langs:
  - typeScript
  summary: 候補の面を face の類似性に基づいてグループに分割します。
  syntax:
    content: 'function group(faceIds: string[], callback: ServiceCallback<GroupResponse>)'
    parameters:
    - id: faceIds
      type:
      - string[]
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.GroupResponse>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.GroupResponse>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.group_2
  name: group
  children: []
  type: method
  langs:
  - typeScript
  summary: 候補の面を face の類似性に基づいてグループに分割します。
  syntax:
    content: 'function group(faceIds: string[], options: Object, callback: ServiceCallback<GroupResponse>)'
    parameters:
    - id: faceIds
      type:
      - string[]
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.GroupResponse>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.GroupResponse>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.groupWithHttpOperationResponse
  name: groupWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: 候補の面を face の類似性に基づいてグループに分割します。
  syntax:
    content: 'function groupWithHttpOperationResponse(faceIds: string[], options?: Object)'
    parameters:
    - id: faceIds
      type:
      - string[]
      description: >
        候補 faceId の配列を作成して顔 - を検出します。

        最大値は、顔 1000 個です。
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.GroupResponse>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.identify_1
  name: identify
  children: []
  type: method
  langs:
  - typeScript
  summary: ユーザー グループからの不明な顔を識別します。
  syntax:
    content: 'function identify(personGroupId: string, faceIds: string[], callback: ServiceCallback<IdentifyResultItem[]>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: faceIds
      type:
      - string[]
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.IdentifyResultItem[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.IdentifyResultItem[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.identify_2
  name: identify
  children: []
  type: method
  langs:
  - typeScript
  summary: ユーザー グループからの不明な顔を識別します。
  syntax:
    content: 'function identify(personGroupId: string, faceIds: string[], options: Object, callback: ServiceCallback<IdentifyResultItem[]>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: faceIds
      type:
      - string[]
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.IdentifyResultItem[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.IdentifyResultItem[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.identify
  name: identify
  children: []
  type: method
  langs:
  - typeScript
  summary: ユーザー グループからの不明な顔を識別します。
  syntax:
    content: 'function identify(personGroupId: string, faceIds: string[], options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        PersonGroups.Create によって作成された、ターゲット ユーザー グループの personGroupId
    - id: faceIds
      type:
      - string[]
      description: >
        候補 faceId の配列を作成して顔 - を検出します。
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.IdentifyResultItem[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.identifyWithHttpOperationResponse
  name: identifyWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ユーザー グループからの不明な顔を識別します。
  syntax:
    content: 'function identifyWithHttpOperationResponse(personGroupId: string, faceIds: string[], options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        PersonGroups.Create によって作成された、ターゲット ユーザー グループの personGroupId
    - id: faceIds
      type:
      - string[]
      description: >
        候補 faceId の配列を作成して顔 - を検出します。
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.IdentifyResultItem[]>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.verify
  name: verify
  children: []
  type: method
  langs:
  - typeScript
  summary: 2 つの顔が同一人物に属しているかどうか、または 1 つの面がユーザーに属しているかどうかを確認します。
  syntax:
    content: 'function verify(faceId1: string, faceId2: string, options?: Object)'
    parameters:
    - id: faceId1
      type:
      - string
      description: >
        最初の面の faceId 顔に由来 - 検出
    - id: faceId2
      type:
      - string
      description: >
        2 番目の顔の faceId 顔に由来 - 検出
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.VerifyResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.verify_1
  name: verify
  children: []
  type: method
  langs:
  - typeScript
  summary: 2 つの顔が同一人物に属しているかどうか、または 1 つの面がユーザーに属しているかどうかを確認します。
  syntax:
    content: 'function verify(faceId1: string, faceId2: string, callback: ServiceCallback<VerifyResult>)'
    parameters:
    - id: faceId1
      type:
      - string
      description: ''
    - id: faceId2
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.VerifyResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.VerifyResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.verify_2
  name: verify
  children: []
  type: method
  langs:
  - typeScript
  summary: 2 つの顔が同一人物に属しているかどうか、または 1 つの面がユーザーに属しているかどうかを確認します。
  syntax:
    content: 'function verify(faceId1: string, faceId2: string, options: Object, callback: ServiceCallback<VerifyResult>)'
    parameters:
    - id: faceId1
      type:
      - string
      description: ''
    - id: faceId2
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.VerifyResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.VerifyResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.verifyWithHttpOperationResponse
  name: verifyWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: 2 つの顔が同一人物に属しているかどうか、または 1 つの面がユーザーに属しているかどうかを確認します。
  syntax:
    content: 'function verifyWithHttpOperationResponse(faceId1: string, faceId2: string, options?: Object)'
    parameters:
    - id: faceId1
      type:
      - string
      description: >
        最初の面の faceId 顔に由来 - 検出
    - id: faceId2
      type:
      - string
      description: >
        2 番目の顔の faceId 顔に由来 - 検出
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.VerifyResult>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.verifyWithPersonGroup
  name: verifyWithPersonGroup
  children: []
  type: method
  langs:
  - typeScript
  summary: 2 つの顔が同一人物に属しているかどうかを確認します。 Face Id とユーザー Id を比較します。
  syntax:
    content: 'function verifyWithPersonGroup(faceId: string, personId: string, personGroupId: string, options?: Object)'
    parameters:
    - id: faceId
      type:
      - string
      description: >
        faceId 面、面に由来 - 検出
    - id: personId
      type:
      - string
      description: >
        ユーザー グループでは、特定のユーザーを指定します。

        personId は Persons.Create に作成されます。
    - id: personGroupId
      type:
      - string
      description: >
        高速読み込み、指定したユーザーの既存の personGroupId と personId を使用します。 personGroupId は Person Groups.Create に作成されます。
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.VerifyResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.verifyWithPersonGroup_1
  name: verifyWithPersonGroup
  children: []
  type: method
  langs:
  - typeScript
  summary: 2 つの顔が同一人物に属しているかどうかを確認します。 Face Id とユーザー Id を比較します。
  syntax:
    content: 'function verifyWithPersonGroup(faceId: string, personId: string, personGroupId: string, callback: ServiceCallback<VerifyResult>)'
    parameters:
    - id: faceId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: personGroupId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.VerifyResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.VerifyResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.verifyWithPersonGroup_2
  name: verifyWithPersonGroup
  children: []
  type: method
  langs:
  - typeScript
  summary: 2 つの顔が同一人物に属しているかどうかを確認します。 Face Id とユーザー Id を比較します。
  syntax:
    content: 'function verifyWithPersonGroup(faceId: string, personId: string, personGroupId: string, options: Object, callback: ServiceCallback<VerifyResult>)'
    parameters:
    - id: faceId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: personGroupId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.VerifyResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.VerifyResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.verifyWithPersonGroupWithHttpOperationResponse
  name: verifyWithPersonGroupWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: 2 つの顔が同一人物に属しているかどうかを確認します。 Face Id とユーザー Id を比較します。
  syntax:
    content: 'function verifyWithPersonGroupWithHttpOperationResponse(faceId: string, personId: string, personGroupId: string, options?: Object)'
    parameters:
    - id: faceId
      type:
      - string
      description: >
        faceId 面、面に由来 - 検出
    - id: personId
      type:
      - string
      description: >
        ユーザー グループでは、特定のユーザーを指定します。

        personId は Persons.Create に作成されます。
    - id: personGroupId
      type:
      - string
      description: >
        高速読み込み、指定したユーザーの既存の personGroupId と personId を使用します。 personGroupId は Person Groups.Create に作成されます。
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.VerifyResult>>
  package: azure-cognitiveservices-face
references:
- uid: Promise<azure-cognitiveservices-face.DetectedFace[]>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: DetectedFace
    fullName: DetectedFace
    uid: azure-cognitiveservices-face.DetectedFace
  - name: '[]>'
    fullName: '[]>'
- uid: ServiceCallback<azure-cognitiveservices-face.DetectedFace[]>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: DetectedFace
    fullName: DetectedFace
    uid: azure-cognitiveservices-face.DetectedFace
  - name: '[]>'
    fullName: '[]>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.DetectedFace[]>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: DetectedFace
    fullName: DetectedFace
    uid: azure-cognitiveservices-face.DetectedFace
  - name: '[]>>'
    fullName: '[]>>'
- uid: Promise<azure-cognitiveservices-face.SimilarFaceResult[]>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: SimilarFaceResult
    fullName: SimilarFaceResult
    uid: azure-cognitiveservices-face.SimilarFaceResult
  - name: '[]>'
    fullName: '[]>'
- uid: ServiceCallback<azure-cognitiveservices-face.SimilarFaceResult[]>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: SimilarFaceResult
    fullName: SimilarFaceResult
    uid: azure-cognitiveservices-face.SimilarFaceResult
  - name: '[]>'
    fullName: '[]>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.SimilarFaceResult[]>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: SimilarFaceResult
    fullName: SimilarFaceResult
    uid: azure-cognitiveservices-face.SimilarFaceResult
  - name: '[]>>'
    fullName: '[]>>'
- uid: Promise<azure-cognitiveservices-face.GroupResponse>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: GroupResponse
    fullName: GroupResponse
    uid: azure-cognitiveservices-face.GroupResponse
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.GroupResponse>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: GroupResponse
    fullName: GroupResponse
    uid: azure-cognitiveservices-face.GroupResponse
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.GroupResponse>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: GroupResponse
    fullName: GroupResponse
    uid: azure-cognitiveservices-face.GroupResponse
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.IdentifyResultItem[]>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: IdentifyResultItem
    fullName: IdentifyResultItem
    uid: azure-cognitiveservices-face.IdentifyResultItem
  - name: '[]>'
    fullName: '[]>'
- uid: ServiceCallback<azure-cognitiveservices-face.IdentifyResultItem[]>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: IdentifyResultItem
    fullName: IdentifyResultItem
    uid: azure-cognitiveservices-face.IdentifyResultItem
  - name: '[]>'
    fullName: '[]>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.IdentifyResultItem[]>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: IdentifyResultItem
    fullName: IdentifyResultItem
    uid: azure-cognitiveservices-face.IdentifyResultItem
  - name: '[]>>'
    fullName: '[]>>'
- uid: Promise<azure-cognitiveservices-face.VerifyResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: VerifyResult
    fullName: VerifyResult
    uid: azure-cognitiveservices-face.VerifyResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.VerifyResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: VerifyResult
    fullName: VerifyResult
    uid: azure-cognitiveservices-face.VerifyResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.VerifyResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: VerifyResult
    fullName: VerifyResult
    uid: azure-cognitiveservices-face.VerifyResult
  - name: '>>'
    fullName: '>>'
