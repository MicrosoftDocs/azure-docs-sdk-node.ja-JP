### YamlMime:UniversalReference
ms.openlocfilehash: ccaa3e66be923473a3a5d8c2598df706b11f57ff
ms.sourcegitcommit: 286f52ea38c9eff2ec9d4f8cabeb86f62fd9c406
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 08/22/2018
ms.locfileid: "41696951"
items:
- uid: azure-cognitiveservices-face.Person
  name: Person
  fullName: Person
  children:
  - azure-cognitiveservices-face.Person.addPersonFace
  - azure-cognitiveservices-face.Person.addPersonFace_1
  - azure-cognitiveservices-face.Person.addPersonFace_2
  - azure-cognitiveservices-face.Person.addPersonFaceFromStream_1
  - azure-cognitiveservices-face.Person.addPersonFaceFromStream
  - azure-cognitiveservices-face.Person.addPersonFaceFromStream_2
  - azure-cognitiveservices-face.Person.addPersonFaceFromStreamWithHttpOperationResponse
  - azure-cognitiveservices-face.Person.addPersonFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.Person.create
  - azure-cognitiveservices-face.Person.create_1
  - azure-cognitiveservices-face.Person.create_2
  - azure-cognitiveservices-face.Person.createWithHttpOperationResponse
  - azure-cognitiveservices-face.Person.deleteFace_1
  - azure-cognitiveservices-face.Person.deleteFace_2
  - azure-cognitiveservices-face.Person.deleteFace
  - azure-cognitiveservices-face.Person.deleteFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.Person.deleteMethod
  - azure-cognitiveservices-face.Person.deleteMethod_1
  - azure-cognitiveservices-face.Person.deleteMethod_2
  - azure-cognitiveservices-face.Person.deleteMethodWithHttpOperationResponse
  - azure-cognitiveservices-face.Person.get
  - azure-cognitiveservices-face.Person.get_1
  - azure-cognitiveservices-face.Person.get_2
  - azure-cognitiveservices-face.Person.getFace
  - azure-cognitiveservices-face.Person.getFace_2
  - azure-cognitiveservices-face.Person.getFace_1
  - azure-cognitiveservices-face.Person.getFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.Person.getWithHttpOperationResponse
  - azure-cognitiveservices-face.Person.list
  - azure-cognitiveservices-face.Person.list_1
  - azure-cognitiveservices-face.Person.list_2
  - azure-cognitiveservices-face.Person.listWithHttpOperationResponse
  - azure-cognitiveservices-face.Person.update
  - azure-cognitiveservices-face.Person.update_1
  - azure-cognitiveservices-face.Person.update_2
  - azure-cognitiveservices-face.Person.updateFace
  - azure-cognitiveservices-face.Person.updateFace_1
  - azure-cognitiveservices-face.Person.updateFace_2
  - azure-cognitiveservices-face.Person.updateFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.Person.updateWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.addPersonFace
  name: addPersonFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="16050-101">代表的な顔を識別するためのユーザーに追加します。</span><span class="sxs-lookup"><span data-stu-id="16050-101">Add a representative face to a person for identification.</span></span> <span data-ttu-id="16050-102">入力の顔は targetFace 四角形を使用してイメージとして指定されます。</span><span class="sxs-lookup"><span data-stu-id="16050-102">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addPersonFace(personGroupId: string, personId: string, url: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="16050-103">ターゲット ユーザーを含むユーザー グループを指定します。</span><span class="sxs-lookup"><span data-stu-id="16050-103">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="16050-104">イメージに追加されるターゲット人です。</span><span class="sxs-lookup"><span data-stu-id="16050-104">Target person that the face is added to.</span></span>
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.addPersonFace_1
  name: addPersonFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="16050-105">代表的な顔を識別するためのユーザーに追加します。</span><span class="sxs-lookup"><span data-stu-id="16050-105">Add a representative face to a person for identification.</span></span> <span data-ttu-id="16050-106">入力の顔は targetFace 四角形を使用してイメージとして指定されます。</span><span class="sxs-lookup"><span data-stu-id="16050-106">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addPersonFace(personGroupId: string, personId: string, url: string, callback: ServiceCallback<PersistedFaceResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFaceResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.addPersonFace_2
  name: addPersonFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="16050-107">代表的な顔を識別するためのユーザーに追加します。</span><span class="sxs-lookup"><span data-stu-id="16050-107">Add a representative face to a person for identification.</span></span> <span data-ttu-id="16050-108">入力の顔は targetFace 四角形を使用してイメージとして指定されます。</span><span class="sxs-lookup"><span data-stu-id="16050-108">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addPersonFace(personGroupId: string, personId: string, url: string, options: Object, callback: ServiceCallback<PersistedFaceResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFaceResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.addPersonFaceFromStream_1
  name: addPersonFaceFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="16050-109">代表的な顔を識別するためのユーザーに追加します。</span><span class="sxs-lookup"><span data-stu-id="16050-109">Add a representative face to a person for identification.</span></span> <span data-ttu-id="16050-110">入力の顔は targetFace 四角形を使用してイメージとして指定されます。</span><span class="sxs-lookup"><span data-stu-id="16050-110">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addPersonFaceFromStream(personGroupId: string, personId: string, image: stream.Readable, callback: ServiceCallback<PersistedFaceResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFaceResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.addPersonFaceFromStream
  name: addPersonFaceFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="16050-111">代表的な顔を識別するためのユーザーに追加します。</span><span class="sxs-lookup"><span data-stu-id="16050-111">Add a representative face to a person for identification.</span></span> <span data-ttu-id="16050-112">入力の顔は targetFace 四角形を使用してイメージとして指定されます。</span><span class="sxs-lookup"><span data-stu-id="16050-112">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addPersonFaceFromStream(personGroupId: string, personId: string, image: stream.Readable, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="16050-113">ターゲット ユーザーを含むユーザー グループを指定します。</span><span class="sxs-lookup"><span data-stu-id="16050-113">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="16050-114">イメージに追加されるターゲット人です。</span><span class="sxs-lookup"><span data-stu-id="16050-114">Target person that the face is added to.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="16050-115">イメージ ストリーム。</span><span class="sxs-lookup"><span data-stu-id="16050-115">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.addPersonFaceFromStream_2
  name: addPersonFaceFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="16050-116">代表的な顔を識別するためのユーザーに追加します。</span><span class="sxs-lookup"><span data-stu-id="16050-116">Add a representative face to a person for identification.</span></span> <span data-ttu-id="16050-117">入力の顔は targetFace 四角形を使用してイメージとして指定されます。</span><span class="sxs-lookup"><span data-stu-id="16050-117">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addPersonFaceFromStream(personGroupId: string, personId: string, image: stream.Readable, options: Object, callback: ServiceCallback<PersistedFaceResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFaceResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.addPersonFaceFromStreamWithHttpOperationResponse
  name: addPersonFaceFromStreamWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="16050-118">代表的な顔を識別するためのユーザーに追加します。</span><span class="sxs-lookup"><span data-stu-id="16050-118">Add a representative face to a person for identification.</span></span> <span data-ttu-id="16050-119">入力の顔は targetFace 四角形を使用してイメージとして指定されます。</span><span class="sxs-lookup"><span data-stu-id="16050-119">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addPersonFaceFromStreamWithHttpOperationResponse(personGroupId: string, personId: string, image: stream.Readable, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="16050-120">ターゲット ユーザーを含むユーザー グループを指定します。</span><span class="sxs-lookup"><span data-stu-id="16050-120">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="16050-121">イメージに追加されるターゲット人です。</span><span class="sxs-lookup"><span data-stu-id="16050-121">Target person that the face is added to.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="16050-122">イメージ ストリーム。</span><span class="sxs-lookup"><span data-stu-id="16050-122">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFaceResult>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.addPersonFaceWithHttpOperationResponse
  name: addPersonFaceWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="16050-123">代表的な顔を識別するためのユーザーに追加します。</span><span class="sxs-lookup"><span data-stu-id="16050-123">Add a representative face to a person for identification.</span></span> <span data-ttu-id="16050-124">入力の顔は targetFace 四角形を使用してイメージとして指定されます。</span><span class="sxs-lookup"><span data-stu-id="16050-124">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addPersonFaceWithHttpOperationResponse(personGroupId: string, personId: string, url: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="16050-125">ターゲット ユーザーを含むユーザー グループを指定します。</span><span class="sxs-lookup"><span data-stu-id="16050-125">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="16050-126">イメージに追加されるターゲット人です。</span><span class="sxs-lookup"><span data-stu-id="16050-126">Target person that the face is added to.</span></span>
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFaceResult>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.create
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="16050-127">指定したユーザー グループに新しいユーザーを作成します。</span><span class="sxs-lookup"><span data-stu-id="16050-127">Create a new person in a specified person group.</span></span>
  syntax:
    content: 'function create(personGroupId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="16050-128">ユーザーを作成する対象のユーザー グループを指定します。</span><span class="sxs-lookup"><span data-stu-id="16050-128">Specifying the target person group to create the person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.CreatePersonResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.create_1
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="16050-129">指定したユーザー グループに新しいユーザーを作成します。</span><span class="sxs-lookup"><span data-stu-id="16050-129">Create a new person in a specified person group.</span></span>
  syntax:
    content: 'function create(personGroupId: string, callback: ServiceCallback<CreatePersonResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.CreatePersonResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.CreatePersonResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.create_2
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="16050-130">指定したユーザー グループに新しいユーザーを作成します。</span><span class="sxs-lookup"><span data-stu-id="16050-130">Create a new person in a specified person group.</span></span>
  syntax:
    content: 'function create(personGroupId: string, options: Object, callback: ServiceCallback<CreatePersonResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.CreatePersonResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.CreatePersonResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.createWithHttpOperationResponse
  name: createWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="16050-131">指定したユーザー グループに新しいユーザーを作成します。</span><span class="sxs-lookup"><span data-stu-id="16050-131">Create a new person in a specified person group.</span></span>
  syntax:
    content: 'function createWithHttpOperationResponse(personGroupId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="16050-132">ユーザーを作成する対象のユーザー グループを指定します。</span><span class="sxs-lookup"><span data-stu-id="16050-132">Specifying the target person group to create the person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.CreatePersonResult>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.deleteFace_1
  name: deleteFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="16050-133">個人の顔を削除します。</span><span class="sxs-lookup"><span data-stu-id="16050-133">Delete a face from a person.</span></span> <span data-ttu-id="16050-134">永続化された顔の相対的なイメージも削除されます。</span><span class="sxs-lookup"><span data-stu-id="16050-134">Relative image for the persisted face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(personGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.deleteFace_2
  name: deleteFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="16050-135">個人の顔を削除します。</span><span class="sxs-lookup"><span data-stu-id="16050-135">Delete a face from a person.</span></span> <span data-ttu-id="16050-136">永続化された顔の相対的なイメージも削除されます。</span><span class="sxs-lookup"><span data-stu-id="16050-136">Relative image for the persisted face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(personGroupId: string, personId: string, persistedFaceId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.deleteFace
  name: deleteFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="16050-137">個人の顔を削除します。</span><span class="sxs-lookup"><span data-stu-id="16050-137">Delete a face from a person.</span></span> <span data-ttu-id="16050-138">永続化された顔の相対的なイメージも削除されます。</span><span class="sxs-lookup"><span data-stu-id="16050-138">Relative image for the persisted face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(personGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="16050-139">ターゲット ユーザーを含むユーザー グループを指定します。</span><span class="sxs-lookup"><span data-stu-id="16050-139">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="16050-140">属する人の顔がターゲットに保存されることを指定します。</span><span class="sxs-lookup"><span data-stu-id="16050-140">Specifying the person that the target persisted face belong to.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="16050-141">削除する永続化された面です。</span><span class="sxs-lookup"><span data-stu-id="16050-141">The persisted face to remove.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.deleteFaceWithHttpOperationResponse
  name: deleteFaceWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="16050-142">個人の顔を削除します。</span><span class="sxs-lookup"><span data-stu-id="16050-142">Delete a face from a person.</span></span> <span data-ttu-id="16050-143">永続化された顔の相対的なイメージも削除されます。</span><span class="sxs-lookup"><span data-stu-id="16050-143">Relative image for the persisted face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFaceWithHttpOperationResponse(personGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="16050-144">ターゲット ユーザーを含むユーザー グループを指定します。</span><span class="sxs-lookup"><span data-stu-id="16050-144">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="16050-145">属する人の顔がターゲットに保存されることを指定します。</span><span class="sxs-lookup"><span data-stu-id="16050-145">Specifying the person that the target persisted face belong to.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="16050-146">削除する永続化された面です。</span><span class="sxs-lookup"><span data-stu-id="16050-146">The persisted face to remove.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.deleteMethod
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="16050-147">既存の人物は、ユーザー グループから削除します。</span><span class="sxs-lookup"><span data-stu-id="16050-147">Delete an existing person from a person group.</span></span> <span data-ttu-id="16050-148">顔、人物の画像も削除されますが永続化されます。</span><span class="sxs-lookup"><span data-stu-id="16050-148">Persisted face images of the person will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(personGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="16050-149">ユーザーを含むユーザー グループを指定します。</span><span class="sxs-lookup"><span data-stu-id="16050-149">Specifying the person group containing the person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="16050-150">削除するターゲット personId します。</span><span class="sxs-lookup"><span data-stu-id="16050-150">The target personId to delete.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.deleteMethod_1
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="16050-151">既存の人物は、ユーザー グループから削除します。</span><span class="sxs-lookup"><span data-stu-id="16050-151">Delete an existing person from a person group.</span></span> <span data-ttu-id="16050-152">顔、人物の画像も削除されますが永続化されます。</span><span class="sxs-lookup"><span data-stu-id="16050-152">Persisted face images of the person will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(personGroupId: string, personId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.deleteMethod_2
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="16050-153">既存の人物は、ユーザー グループから削除します。</span><span class="sxs-lookup"><span data-stu-id="16050-153">Delete an existing person from a person group.</span></span> <span data-ttu-id="16050-154">顔、人物の画像も削除されますが永続化されます。</span><span class="sxs-lookup"><span data-stu-id="16050-154">Persisted face images of the person will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(personGroupId: string, personId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="16050-155">既存の人物は、ユーザー グループから削除します。</span><span class="sxs-lookup"><span data-stu-id="16050-155">Delete an existing person from a person group.</span></span> <span data-ttu-id="16050-156">顔、人物の画像も削除されますが永続化されます。</span><span class="sxs-lookup"><span data-stu-id="16050-156">Persisted face images of the person will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(personGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="16050-157">ユーザーを含むユーザー グループを指定します。</span><span class="sxs-lookup"><span data-stu-id="16050-157">Specifying the person group containing the person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="16050-158">削除するターゲット personId します。</span><span class="sxs-lookup"><span data-stu-id="16050-158">The target personId to delete.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.get
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="16050-159">登録済みの永続化された顔、名 userData など、個人の情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="16050-159">Retrieve a person's information, including registered persisted faces, name and userData.</span></span>
  syntax:
    content: 'function get(personGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="16050-160">ターゲット ユーザーを含むユーザー グループを指定します。</span><span class="sxs-lookup"><span data-stu-id="16050-160">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="16050-161">ターゲット ユーザーを指定します。</span><span class="sxs-lookup"><span data-stu-id="16050-161">Specifying the target person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.get_1
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="16050-162">登録済みの永続化された顔、名 userData など、個人の情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="16050-162">Retrieve a person's information, including registered persisted faces, name and userData.</span></span>
  syntax:
    content: 'function get(personGroupId: string, personId: string, callback: ServiceCallback<PersonResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersonResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.get_2
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="16050-163">登録済みの永続化された顔、名 userData など、個人の情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="16050-163">Retrieve a person's information, including registered persisted faces, name and userData.</span></span>
  syntax:
    content: 'function get(personGroupId: string, personId: string, options: Object, callback: ServiceCallback<PersonResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersonResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.getFace
  name: getFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="16050-164">永続化された顔 (persistedFaceId、personId およびその属する personGroupId で指定) に関する情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="16050-164">Retrieve information about a persisted face (specified by persistedFaceId, personId and its belonging personGroupId).</span></span>
  syntax:
    content: 'function getFace(personGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="16050-165">ターゲット ユーザーを含むユーザー グループを指定します。</span><span class="sxs-lookup"><span data-stu-id="16050-165">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="16050-166">ターゲットの個人の顔が属しているを指定します。</span><span class="sxs-lookup"><span data-stu-id="16050-166">Specifying the target person that the face belongs to.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="16050-167">ターゲットの persistedFaceId には、人の顔が永続化されます。</span><span class="sxs-lookup"><span data-stu-id="16050-167">The persistedFaceId of the target persisted face of the person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.getFace_2
  name: getFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="16050-168">永続化された顔 (persistedFaceId、personId およびその属する personGroupId で指定) に関する情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="16050-168">Retrieve information about a persisted face (specified by persistedFaceId, personId and its belonging personGroupId).</span></span>
  syntax:
    content: 'function getFace(personGroupId: string, personId: string, persistedFaceId: string, options: Object, callback: ServiceCallback<PersonFaceResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersonFaceResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.getFace_1
  name: getFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="16050-169">永続化された顔 (persistedFaceId、personId およびその属する personGroupId で指定) に関する情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="16050-169">Retrieve information about a persisted face (specified by persistedFaceId, personId and its belonging personGroupId).</span></span>
  syntax:
    content: 'function getFace(personGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<PersonFaceResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersonFaceResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.getFaceWithHttpOperationResponse
  name: getFaceWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="16050-170">永続化された顔 (persistedFaceId、personId およびその属する personGroupId で指定) に関する情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="16050-170">Retrieve information about a persisted face (specified by persistedFaceId, personId and its belonging personGroupId).</span></span>
  syntax:
    content: 'function getFaceWithHttpOperationResponse(personGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="16050-171">ターゲット ユーザーを含むユーザー グループを指定します。</span><span class="sxs-lookup"><span data-stu-id="16050-171">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="16050-172">ターゲットの個人の顔が属しているを指定します。</span><span class="sxs-lookup"><span data-stu-id="16050-172">Specifying the target person that the face belongs to.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="16050-173">ターゲットの persistedFaceId には、人の顔が永続化されます。</span><span class="sxs-lookup"><span data-stu-id="16050-173">The persistedFaceId of the target persisted face of the person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersonFaceResult>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.getWithHttpOperationResponse
  name: getWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="16050-174">登録済みの永続化された顔、名 userData など、個人の情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="16050-174">Retrieve a person's information, including registered persisted faces, name and userData.</span></span>
  syntax:
    content: 'function getWithHttpOperationResponse(personGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="16050-175">ターゲット ユーザーを含むユーザー グループを指定します。</span><span class="sxs-lookup"><span data-stu-id="16050-175">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="16050-176">ターゲット ユーザーを指定します。</span><span class="sxs-lookup"><span data-stu-id="16050-176">Specifying the target person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersonResult>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.list
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="16050-177">ユーザー グループではすべて、担当者の一覧を表示し、(personId、名、userData 人の顔が登録済みの persistedFaceIds など)、個人情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="16050-177">List all persons in a person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person).</span></span>
  syntax:
    content: 'function list(personGroupId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="16050-178">ターゲット ユーザー グループの personGroupId します。</span><span class="sxs-lookup"><span data-stu-id="16050-178">personGroupId of the target person group.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonResult[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.list_1
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="16050-179">ユーザー グループではすべて、担当者の一覧を表示し、(personId、名、userData 人の顔が登録済みの persistedFaceIds など)、個人情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="16050-179">List all persons in a person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person).</span></span>
  syntax:
    content: 'function list(personGroupId: string, callback: ServiceCallback<PersonResult[]>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersonResult[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonResult[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.list_2
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="16050-180">ユーザー グループではすべて、担当者の一覧を表示し、(personId、名、userData 人の顔が登録済みの persistedFaceIds など)、個人情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="16050-180">List all persons in a person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person).</span></span>
  syntax:
    content: 'function list(personGroupId: string, options: Object, callback: ServiceCallback<PersonResult[]>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersonResult[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonResult[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.listWithHttpOperationResponse
  name: listWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="16050-181">ユーザー グループではすべて、担当者の一覧を表示し、(personId、名、userData 人の顔が登録済みの persistedFaceIds など)、個人情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="16050-181">List all persons in a person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person).</span></span>
  syntax:
    content: 'function listWithHttpOperationResponse(personGroupId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="16050-182">ターゲット ユーザー グループの personGroupId します。</span><span class="sxs-lookup"><span data-stu-id="16050-182">personGroupId of the target person group.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersonResult[]>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.update
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="16050-183">名前または個人の userData を更新します。</span><span class="sxs-lookup"><span data-stu-id="16050-183">Update name or userData of a person.</span></span>
  syntax:
    content: 'function update(personGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="16050-184">ターゲット ユーザーを含むユーザー グループを指定します。</span><span class="sxs-lookup"><span data-stu-id="16050-184">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="16050-185">ターゲット ユーザーの personId します。</span><span class="sxs-lookup"><span data-stu-id="16050-185">personId of the target person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.update_1
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="16050-186">名前または個人の userData を更新します。</span><span class="sxs-lookup"><span data-stu-id="16050-186">Update name or userData of a person.</span></span>
  syntax:
    content: 'function update(personGroupId: string, personId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.update_2
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="16050-187">名前または個人の userData を更新します。</span><span class="sxs-lookup"><span data-stu-id="16050-187">Update name or userData of a person.</span></span>
  syntax:
    content: 'function update(personGroupId: string, personId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.updateFace
  name: updateFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="16050-188">更新プログラムをユーザーには、顔の userData フィールドが永続化されます。</span><span class="sxs-lookup"><span data-stu-id="16050-188">Update a person persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFace(personGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="16050-189">ターゲット ユーザーを含むユーザー グループを指定します。</span><span class="sxs-lookup"><span data-stu-id="16050-189">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="16050-190">ターゲット ユーザーの personId します。</span><span class="sxs-lookup"><span data-stu-id="16050-190">personId of the target person.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="16050-191">永続化し、有効期限はありませんが、ターゲットの正面の persistedFaceId します。</span><span class="sxs-lookup"><span data-stu-id="16050-191">persistedFaceId of target face, which is persisted and will not expire.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.updateFace_1
  name: updateFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="16050-192">更新プログラムをユーザーには、顔の userData フィールドが永続化されます。</span><span class="sxs-lookup"><span data-stu-id="16050-192">Update a person persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFace(personGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.updateFace_2
  name: updateFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="16050-193">更新プログラムをユーザーには、顔の userData フィールドが永続化されます。</span><span class="sxs-lookup"><span data-stu-id="16050-193">Update a person persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFace(personGroupId: string, personId: string, persistedFaceId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.updateFaceWithHttpOperationResponse
  name: updateFaceWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="16050-194">更新プログラムをユーザーには、顔の userData フィールドが永続化されます。</span><span class="sxs-lookup"><span data-stu-id="16050-194">Update a person persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFaceWithHttpOperationResponse(personGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="16050-195">ターゲット ユーザーを含むユーザー グループを指定します。</span><span class="sxs-lookup"><span data-stu-id="16050-195">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="16050-196">ターゲット ユーザーの personId します。</span><span class="sxs-lookup"><span data-stu-id="16050-196">personId of the target person.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="16050-197">永続化し、有効期限はありませんが、ターゲットの正面の persistedFaceId します。</span><span class="sxs-lookup"><span data-stu-id="16050-197">persistedFaceId of target face, which is persisted and will not expire.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.updateWithHttpOperationResponse
  name: updateWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="16050-198">名前または個人の userData を更新します。</span><span class="sxs-lookup"><span data-stu-id="16050-198">Update name or userData of a person.</span></span>
  syntax:
    content: 'function updateWithHttpOperationResponse(personGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="16050-199">ターゲット ユーザーを含むユーザー グループを指定します。</span><span class="sxs-lookup"><span data-stu-id="16050-199">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="16050-200">ターゲット ユーザーの personId します。</span><span class="sxs-lookup"><span data-stu-id="16050-200">personId of the target person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
references:
- uid: Promise<azure-cognitiveservices-face.PersistedFaceResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PersistedFaceResult
    fullName: PersistedFaceResult
    uid: azure-cognitiveservices-face.PersistedFaceResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.PersistedFaceResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PersistedFaceResult
    fullName: PersistedFaceResult
    uid: azure-cognitiveservices-face.PersistedFaceResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFaceResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PersistedFaceResult
    fullName: PersistedFaceResult
    uid: azure-cognitiveservices-face.PersistedFaceResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.CreatePersonResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: CreatePersonResult
    fullName: CreatePersonResult
    uid: azure-cognitiveservices-face.CreatePersonResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.CreatePersonResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: CreatePersonResult
    fullName: CreatePersonResult
    uid: azure-cognitiveservices-face.CreatePersonResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.CreatePersonResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: CreatePersonResult
    fullName: CreatePersonResult
    uid: azure-cognitiveservices-face.CreatePersonResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.PersonResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PersonResult
    fullName: PersonResult
    uid: azure-cognitiveservices-face.PersonResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.PersonResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PersonResult
    fullName: PersonResult
    uid: azure-cognitiveservices-face.PersonResult
  - name: '>'
    fullName: '>'
- uid: Promise<azure-cognitiveservices-face.PersonFaceResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PersonFaceResult
    fullName: PersonFaceResult
    uid: azure-cognitiveservices-face.PersonFaceResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.PersonFaceResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PersonFaceResult
    fullName: PersonFaceResult
    uid: azure-cognitiveservices-face.PersonFaceResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.PersonFaceResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PersonFaceResult
    fullName: PersonFaceResult
    uid: azure-cognitiveservices-face.PersonFaceResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.PersonResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PersonResult
    fullName: PersonResult
    uid: azure-cognitiveservices-face.PersonResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.PersonResult[]>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PersonResult
    fullName: PersonResult
    uid: azure-cognitiveservices-face.PersonResult
  - name: '[]>'
    fullName: '[]>'
- uid: ServiceCallback<azure-cognitiveservices-face.PersonResult[]>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PersonResult
    fullName: PersonResult
    uid: azure-cognitiveservices-face.PersonResult
  - name: '[]>'
    fullName: '[]>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.PersonResult[]>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PersonResult
    fullName: PersonResult
    uid: azure-cognitiveservices-face.PersonResult
  - name: '[]>>'
    fullName: '[]>>'
