### YamlMime:UniversalReference
ms.openlocfilehash: d7382a08d712bea9fc758cb12f0ad26bae128f07
ms.sourcegitcommit: ce76ec3eda83746ef9a765165173b5c00b5b7df6
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 12/20/2018
ms.locfileid: "53681166"
items:
- uid: azure-iot-provisioning-device.X509Registration
  name: X509Registration
  fullName: X509Registration
  children:
  - azure-iot-provisioning-device.X509Registration.cancel_1
  - azure-iot-provisioning-device.X509Registration.cancel
  - azure-iot-provisioning-device.X509Registration.register_1
  - azure-iot-provisioning-device.X509Registration.register
  - azure-iot-provisioning-device.X509Registration.constructor
  langs:
  - typeScript
  type: class
  summary: X509 を使用してデバイスの登録を実行するために使用するクライアント認証です。
  package: azure-iot-provisioning-device
- uid: azure-iot-provisioning-device.X509Registration.cancel_1
  name: cancel()
  children: []
  type: method
  langs:
  - typeScript
  summary: 現在の登録プロセスをキャンセルします。
  syntax:
    content: function cancel()
    parameters: []
    return:
      type:
      - Promise<void>
  package: azure-iot-provisioning-device
- uid: azure-iot-provisioning-device.X509Registration.cancel
  name: cancel(ErrorCallback)
  children: []
  type: method
  langs:
  - typeScript
  summary: 現在の登録プロセスをキャンセルします。
  syntax:
    content: 'function cancel(callback: ErrorCallback)'
    parameters:
    - id: callback
      type:
      - ErrorCallback
      description: ''
  package: azure-iot-provisioning-device
- uid: azure-iot-provisioning-device.X509Registration.register_1
  name: register()
  children: []
  type: method
  langs:
  - typeScript
  summary: プロビジョニング サービスでデバイスを登録します。
  syntax:
    content: function register()
    parameters: []
    return:
      type:
      - Promise<azure-iot-provisioning-device.RegistrationResult>
  package: azure-iot-provisioning-device
- uid: azure-iot-provisioning-device.X509Registration.register
  name: register(Callback<RegistrationResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: プロビジョニング サービスでデバイスを登録します。
  syntax:
    content: 'function register(callback: Callback<RegistrationResult>)'
    parameters:
    - id: callback
      type:
      - Callback<azure-iot-provisioning-device.RegistrationResult>
      description: ''
  package: azure-iot-provisioning-device
- uid: azure-iot-provisioning-device.X509Registration.constructor
  name: X509Registration(string, string, X509ProvisioningTransport, X509SecurityClient)
  children: []
  type: constructor
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'new X509Registration(provisioningHost: string, idScope: string, transport: X509ProvisioningTransport, securityClient: X509SecurityClient)'
    parameters:
    - id: provisioningHost
      type:
      - string
      description: ''
    - id: idScope
      type:
      - string
      description: ''
    - id: transport
      type:
      - X509ProvisioningTransport
      description: ''
    - id: securityClient
      type:
      - azure-iot-provisioning-device.X509SecurityClient
      description: ''
  package: azure-iot-provisioning-device
references:
- uid: azure-iot-provisioning-device.X509SecurityClient
  name: X509SecurityClient
  spec.typeScript:
  - name: X509SecurityClient
    fullName: X509SecurityClient
    uid: azure-iot-provisioning-device.X509SecurityClient
- uid: Callback<azure-iot-provisioning-device.RegistrationResult>
  name: RegistrationResult>
  spec.typeScript:
  - name: Callback<
    fullName: Callback<
  - name: RegistrationResult
    fullName: RegistrationResult
    uid: azure-iot-provisioning-device.RegistrationResult
  - name: '>'
    fullName: '>'
- uid: Promise<azure-iot-provisioning-device.RegistrationResult>
  name: RegistrationResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: RegistrationResult
    fullName: RegistrationResult
    uid: azure-iot-provisioning-device.RegistrationResult
  - name: '>'
    fullName: '>'
