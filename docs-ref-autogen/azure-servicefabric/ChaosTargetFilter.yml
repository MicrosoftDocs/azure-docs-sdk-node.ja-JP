### YamlMime:UniversalReference
ms.openlocfilehash: 33550dceefa3b059bcd7907c0d88c79aa98b4b0a
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 12/13/2018
ms.locfileid: "52090487"
items:
- uid: azure-servicefabric.ChaosTargetFilter
  name: ChaosTargetFilter
  fullName: ChaosTargetFilter
  children:
  - azure-servicefabric.ChaosTargetFilter.applicationInclusionList
  - azure-servicefabric.ChaosTargetFilter.nodeTypeInclusionList
  langs:
  - typeScript
  type: interface
  summary: >-
    対象となる Chaos 障害などの特定のノード タイプの障害発生や、特定のアプリケーションの障害発生のすべてのフィルターを定義します。

    ChaosTargetFilter が使用されない場合、混乱による障害のターゲットはすべてのクラスターのエンティティになります。 ChaosTargetFilter が使用された場合、ChaosTargetFilter の指定に合致するエンティティのみに、混乱による障害が発生します。 NodeTypeInclusionList と ApplicationInclusionList では、和集合セマンティクスのみが可能です。

    NodeTypeInclusionList と ApplicationInclusionList の積集合を指定することはできません。 たとえば、"アプリケーションが特定のノードの種類上にある場合のみ障害を発生させる" と指定することはできません。

    エンティティが NodeTypeInclusionList または ApplicationInclusionList のどちらかに含まれている時点で、ChaosTargetFilter を使用してエンティティを除外することはできません。 applicationX が ApplicationInclusionList に含まれていない場合でも、そのアプリケーションが NodeTypeInclusionList に含まれている nodeTypeY のノード上にあるという理由で、何らかの混乱の反復処理中にそのアプリケーションで障害が発生する可能性があります。 NodeTypeInclusionList と ApplicationInclusionList の両方が null または空の場合は、ArgumentException がスローされます。
  package: azure-servicefabric
- uid: azure-servicefabric.ChaosTargetFilter.applicationInclusionList
  name: applicationInclusionList
  fullName: applicationInclusionList
  children: []
  langs:
  - typeScript
  type: property
  summary: >-
    アプリケーションの一覧に、混乱による障害の URI。

    指定されたアプリケーションのサービスに属すすべてのレプリカは、混乱によって誘発されるレプリカ障害 (レプリカの再起動、レプリカの削除、プライマリの移動、およびセカンダリの移動) を受け入れます。

    コード パッケージがこれらのアプリケーションのレプリカをホストしている場合のみ、混乱は、コード パッケージを再起動できます。

    アプリケーションがこの一覧に含まれていない場合でも、NodeTypeInclusionList に含まれるノードの種類のノード上にアプリケーションが存在する場合は、混乱の反復処理によって障害が発生する可能性があります。

    ただし、applicationX に関連付けられている場合に、applicationX 配置の制約によって nodeTypeY が存在しないから ApplicationInclusionList になく、nodeTypeY が存在しない NodeTypeInclusionList から、applicationX 決しては失敗します。

    この一覧には最大 1,000 個のアプリケーションの名前を含めることができ、この数を増やすには、MaxNumberOfApplicationsInChaosEntityFilter 構成をアップグレードする必要があります。
  optional: true
  syntax:
    content: 'applicationInclusionList?: string[]'
    return:
      type:
      - string[]
  package: azure-servicefabric
- uid: azure-servicefabric.ChaosTargetFilter.nodeTypeInclusionList
  name: nodeTypeInclusionList
  fullName: nodeTypeInclusionList
  children: []
  langs:
  - typeScript
  type: property
  summary: >-
    混乱による障害のノードの種類の一覧。

    すべての種類の障害 (ノードの再起動、コード パッケージの再起動、レプリカの削除、レプリカの再起動、プライマリの移動、およびセカンダリの移動) は、指定されたノードの種類のノードで有効になります。

    Nodetype (たとえば NodeTypeX) がない、NodeTypeInclusionList し、NodeTypeX のノードに対してノード レベルの障害 (ノードの再起動など) を有効にすることはありませんでアプリケーションの場合、コード パッケージ障害とレプリカ障害を含まれて有効まだことができる場合、ApplicationInclusionList です。

    NodeTypeX のノード上に存在する場合に発生します。

    この一覧には最大 100 種のノードの種類を含めることができ、この数を増やすには、MaxNumberOfNodeTypesInChaosEntityFilter 構成をアップグレードする必要があります。
  optional: true
  syntax:
    content: 'nodeTypeInclusionList?: string[]'
    return:
      type:
      - string[]
  package: azure-servicefabric
