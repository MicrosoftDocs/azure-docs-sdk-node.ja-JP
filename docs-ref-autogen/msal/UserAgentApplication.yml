### YamlMime:UniversalReference
items:
  - uid: msal.UserAgentApplication
    name: UserAgentApplication
    fullName: UserAgentApplication
    children:
      - msal.UserAgentApplication.acquireTokenPopup
      - msal.UserAgentApplication.acquireTokenRedirect
      - msal.UserAgentApplication.acquireTokenSilent
      - msal.UserAgentApplication.authority
      - msal.UserAgentApplication.getAccount
      - msal.UserAgentApplication.getAllAccounts
      - msal.UserAgentApplication.getAuthorityInstance
      - msal.UserAgentApplication.getCurrentConfiguration
      - msal.UserAgentApplication.getLoginInProgress
      - msal.UserAgentApplication.getPostLogoutRedirectUri
      - msal.UserAgentApplication.getRedirectUri
      - msal.UserAgentApplication.handleRedirectCallback_1
      - msal.UserAgentApplication.handleRedirectCallback
      - msal.UserAgentApplication.loginPopup
      - msal.UserAgentApplication.loginRedirect
      - msal.UserAgentApplication.logout
      - msal.UserAgentApplication.constructor
    langs:
      - typeScript
    type: class
    summary: 'UserAgentApplication クラス:<xref:UserAgentApplication> 開発者は loginXX を行うときに使用できるインスタンスのオブジェクトまたは acquireTokenXX 関数'
    package: msal
  - uid: msal.UserAgentApplication.acquireTokenPopup
    name: acquireTokenPopup(AuthenticationParameters)
    children: []
    type: method
    langs:
      - typeScript
    summary: ユーザーのブラウザーでポップアップ ウィンドウを開きを使用して、API の access_token を取得する場合に使用します
    syntax:
      content: 'function acquireTokenPopup(request: AuthenticationParameters)'
      parameters:
        - id: request
          type:
            - msal.AuthenticationParameters
          description: ''
      return:
        type:
          - Promise<msal.AuthResponse>
    package: msal
  - uid: msal.UserAgentApplication.acquireTokenRedirect
    name: acquireTokenRedirect(AuthenticationParameters)
    children: []
    type: method
    langs:
      - typeScript
    summary: ユーザーを承認エンドポイントにリダイレクトすることで、API の access_token を取得するときに使用されます。
    syntax:
      content: 'function acquireTokenRedirect(request: AuthenticationParameters)'
      parameters:
        - id: request
          type:
            - msal.AuthenticationParameters
          description: ''
    package: msal
  - uid: msal.UserAgentApplication.acquireTokenSilent
    name: acquireTokenSilent(AuthenticationParameters)
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      この関数を使用して、api 呼び出しごとにトークンを取得する]、[リソース プロバイダー MSAL の戻り値の使用可能な場合、キャッシュされたトークンをまたはに送信する非表示の iframe を使用して新しいトークンを取得するには、STS に要求します。
    syntax:
      content: 'function acquireTokenSilent(request: AuthenticationParameters)'
      parameters:
        - id: request
          type:
            - msal.AuthenticationParameters
          description: ''
      return:
        type:
          - Promise<msal.AuthResponse>
    package: msal
  - uid: msal.UserAgentApplication.authority
    name: authority
    fullName: authority
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      返します、機関、authority は MSAL がトークンの取得に使用できるディレクトリを示す URL
      - Azure ad でこの属性は、MSAL を使用して、フォームのトークンを取得する Azure active directory を示す URL https://login.microsoftonline.com/&lt;Enter_the_Tenant_Info_Here&gt;場合は、アプリケーションは、1 つの組織のディレクトリにアカウントをサポートする値に置き換えます"Enter_the_Tenant_Info_Here"テナント Id またはテナント名 (たとえば、contoso.microsoft.com) 場合、アプリケーション組織の任意のディレクトリでアカウントをサポートする、アプリケーションは、個人の Microsoft アカウント、組織のディレクトリでアカウントをサポートしている場合は、組織で"Enter_the_Tenant_Info_Here"の値を置き換えます、"Enter_the_Tenant_Info_ を置換ここで"値を使用して、一般的な使用。
      個人の Microsoft へのサポートを制限するには、アカウントはコンシューマーでのみ、データの"Enter_the_Tenant_Info_Here"の値を置き換えます。
      - Azure B2C でのフォーム https:// は&lt;インスタンス&gt;/tfp/&lt;テナント&gt;/<policyName>/
    syntax:
      content: 'authority: string'
      return:
        type:
          - string
    package: msal
  - uid: msal.UserAgentApplication.getAccount
    name: getAccount()
    children: []
    type: method
    langs:
      - typeScript
    summary: 返します、サインインしているアカウント (ログイン時に作成されたアカウント オブジェクトから受信した) または null で状態が見つからない場合
    syntax:
      content: function getAccount()
      parameters: []
      return:
        type:
          - msal.Account
    package: msal
  - uid: msal.UserAgentApplication.getAllAccounts
    name: getAllAccounts()
    children: []
    type: method
    langs:
      - typeScript
    summary: 使用してすべてのキャッシュされた項目をフィルター処理および homeAccountIdentifier に基づく一意のアカウントの一覧を返します。
    syntax:
      content: function getAllAccounts()
      parameters: []
      return:
        type:
          - Array<msal.Account>
    package: msal
  - uid: msal.UserAgentApplication.getAuthorityInstance
    name: getAuthorityInstance()
    children: []
    type: method
    langs:
      - typeScript
    summary: 機関のインスタンスを返します
    syntax:
      content: function getAuthorityInstance()
      parameters: []
      return:
        type:
          - Authority
    package: msal
  - uid: msal.UserAgentApplication.getCurrentConfiguration
    name: getCurrentConfiguration()
    children: []
    type: method
    langs:
      - typeScript
    summary: '使用して、現在の取得<xref:Configuration>MSAL 内のオブジェクト'
    syntax:
      content: function getCurrentConfiguration()
      parameters: []
      return:
        type:
          - msal.Configuration
    package: msal
  - uid: msal.UserAgentApplication.getLoginInProgress
    name: getLoginInProgress()
    children: []
    type: method
    langs:
      - typeScript
    summary: ログインが実行中である場合に通知するために開発者にブール型のフラグを返す
    syntax:
      content: function getLoginInProgress()
      parameters: []
      return:
        type:
          - boolean
    package: msal
  - uid: msal.UserAgentApplication.getPostLogoutRedirectUri
    name: getPostLogoutRedirectUri()
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      使用すると、MSAL または null で構成されている投稿ログアウト リダイレクト uri を取得します。
      評価 postLogoutredirectUri 場合は関数の場合、それ以外の場合単にその値を返します。
    syntax:
      content: function getPostLogoutRedirectUri()
      parameters: []
      return:
        type:
          - string
    package: msal
  - uid: msal.UserAgentApplication.getRedirectUri
    name: getRedirectUri()
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      使用すると、MSAL または null で構成されているリダイレクト uri を取得します。
      評価 redirectUri 場合は関数の場合、それ以外の場合単にその値を返します。
    syntax:
      content: function getRedirectUri()
      parameters: []
      return:
        type:
          - string
    package: msal
  - uid: msal.UserAgentApplication.handleRedirectCallback_1
    name: handleRedirectCallback(authResponseCallback)
    children: []
    type: method
    langs:
      - typeScript
    summary: 成功またはエラー オブジェクトを返信するリダイレクトのフローのコールバック関数を設定します。
    syntax:
      content: 'function handleRedirectCallback(authCallback: authResponseCallback)'
      parameters:
        - id: authCallback
          type:
            - authResponseCallback
          description: ''
    package: msal
  - uid: msal.UserAgentApplication.handleRedirectCallback
    name: 'handleRedirectCallback(tokenReceivedCallback, errorReceivedCallback)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 成功またはエラー オブジェクトを返信するリダイレクトのフローのコールバック関数を設定します。
    syntax:
      content: 'function handleRedirectCallback(tokenReceivedCallback: tokenReceivedCallback, errorReceivedCallback: errorReceivedCallback)'
      parameters:
        - id: tokenReceivedCallback
          type:
            - tokenReceivedCallback
          description: ''
        - id: errorReceivedCallback
          type:
            - errorReceivedCallback
          description: ''
    package: msal
  - uid: msal.UserAgentApplication.loginPopup
    name: loginPopup(AuthenticationParameters)
    children: []
    type: method
    langs:
      - typeScript
    summary: ユーザーのブラウザーでポップアップ ウィンドウを開きを使用してログイン プロセスを開始するときに使用
    syntax:
      content: 'function loginPopup(request?: AuthenticationParameters)'
      parameters:
        - id: request
          type:
            - msal.AuthenticationParameters
          description: ''
          optional: true
      return:
        type:
          - Promise<msal.AuthResponse>
    package: msal
  - uid: msal.UserAgentApplication.loginRedirect
    name: loginRedirect(AuthenticationParameters)
    children: []
    type: method
    langs:
      - typeScript
    summary: ユーザーのブラウザーを承認エンドポイントにリダイレクトすることで、ログイン プロセスを開始するときに使用します。
    syntax:
      content: 'function loginRedirect(request?: AuthenticationParameters)'
      parameters:
        - id: request
          type:
            - msal.AuthenticationParameters
          description: ''
          optional: true
    package: msal
  - uid: msal.UserAgentApplication.logout
    name: logout()
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      現在のユーザーをログアウトし、postLogoutRedirectUri にユーザーをリダイレクトするために使用します。
      既定の動作では、ユーザーをリダイレクトに`window.location.href`します。
    syntax:
      content: function logout()
      parameters: []
    package: msal
  - uid: msal.UserAgentApplication.constructor
    name: UserAgentApplication(Configuration)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: 'コンス トラクター、<xref:UserAgentApplication>オブジェクトのこのインスタンス化できるため、<xref:UserAgentApplication>オブジェクト'
    syntax:
      content: 'new UserAgentApplication(configuration: Configuration)'
      parameters:
        - id: configuration
          type:
            - msal.Configuration
          description: |
            MSAL UserAgentApplication インスタンスのオブジェクト
    package: msal
references:
  - uid: msal.Configuration
    name: Configuration
    spec.typeScript:
      - name: Configuration
        fullName: Configuration
        uid: msal.Configuration
  - uid: msal.AuthenticationParameters
    name: AuthenticationParameters
    spec.typeScript:
      - name: AuthenticationParameters
        fullName: AuthenticationParameters
        uid: msal.AuthenticationParameters
  - uid: Promise<msal.AuthResponse>
    name: AuthResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: AuthResponse
        fullName: AuthResponse
        uid: msal.AuthResponse
      - name: '>'
        fullName: '>'
  - uid: msal.Account
    name: Account
    spec.typeScript:
      - name: Account
        fullName: Account
        uid: msal.Account
  - uid: Array<msal.Account>
    name: Account>
    spec.typeScript:
      - name: Array<
        fullName: Array<
      - name: Account
        fullName: Account
        uid: msal.Account
      - name: '>'
        fullName: '>'