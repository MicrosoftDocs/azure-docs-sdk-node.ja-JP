### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-face.SnapshotOperations'
    name: SnapshotOperations
    fullName: SnapshotOperations
    children:
      - '@azure/cognitiveservices-face.SnapshotOperations.apply'
      - '@azure/cognitiveservices-face.SnapshotOperations.apply_1'
      - '@azure/cognitiveservices-face.SnapshotOperations.apply_2'
      - '@azure/cognitiveservices-face.SnapshotOperations.deleteMethod'
      - '@azure/cognitiveservices-face.SnapshotOperations.deleteMethod_2'
      - '@azure/cognitiveservices-face.SnapshotOperations.deleteMethod_1'
      - '@azure/cognitiveservices-face.SnapshotOperations.get'
      - '@azure/cognitiveservices-face.SnapshotOperations.get_2'
      - '@azure/cognitiveservices-face.SnapshotOperations.get_1'
      - '@azure/cognitiveservices-face.SnapshotOperations.getOperationStatus'
      - '@azure/cognitiveservices-face.SnapshotOperations.getOperationStatus_2'
      - '@azure/cognitiveservices-face.SnapshotOperations.getOperationStatus_1'
      - '@azure/cognitiveservices-face.SnapshotOperations.list'
      - '@azure/cognitiveservices-face.SnapshotOperations.list_1'
      - '@azure/cognitiveservices-face.SnapshotOperations.list_2'
      - '@azure/cognitiveservices-face.SnapshotOperations.constructor'
      - '@azure/cognitiveservices-face.SnapshotOperations.take'
      - '@azure/cognitiveservices-face.SnapshotOperations.take_1'
      - '@azure/cognitiveservices-face.SnapshotOperations.take_2'
      - '@azure/cognitiveservices-face.SnapshotOperations.update'
      - '@azure/cognitiveservices-face.SnapshotOperations.update_1'
      - '@azure/cognitiveservices-face.SnapshotOperations.update_2'
    langs:
      - typeScript
    type: class
    summary: SnapshotOperations を表すクラスです。
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.apply'
    name: 'apply(string, string, Models.SnapshotApplyOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      現在のサブスクリプションにスナップショットを適用するための操作を送信します。 各スナップショットはスナップショット - の applyScope に含まれるサブスクリプションのみを適用できます。<br />
      バックアップし、同じリージョン内またはリージョン間で、サブスクリプションの 1 つの面から、顔のデータを復元するユーザーは、スナップショット インターフェイスです。 ワークフローには、2 つのフェーズでは、スナップショットのソース オブジェクトのコピーを作成し、スナップショットとして保存するにはスナップショットを呼び出して、ユーザーの最初の呼び出しが含まれています。-ターゲット サブスクリプションにスナップショットを貼り付けるに適用されます。 スナップショットは、アカウントとリージョンのクロス適用可能になるように、(Azure インスタンスごと)、一元的な場所に格納されます。<br />
      スナップショットの適用は、非同期操作です。 OperationStatus - スナップショットの適用の進行状況を追跡するための Get で使用される、応答ヘッダーの「操作の場所」フィールドから、操作 id を取得できます。 ターゲット オブジェクトの id は、OperationStatus - 操作の状態が「成功」するときの Get 応答で"resourceLocation"フィールドに含まれます。<br />
      スナップショットの時間を適用することは、スナップショットのオブジェクトで人物および顔のエントリの数によって異なります。
      秒単位にまたは複数人の顔を 1,000,000 担当者は最大 1 時間にできませんでした。<br />
      自動的に有効期限が切れたし、スナップショットを作成した後 48 時間でクリーンアップがスナップショット
      - します。 これの作成後 48 時間のスナップショットを適用する対象のサブスクリプションが必要です。<br />
      スナップショットを適用するは禁止されていません、ターゲットに対して、他の操作オブジェクト、ただしこれは推奨されませんスナップショットの適用中には、正確性を保証できないためです。 スナップショットの適用が完了したら後、は、対象のオブジェクトに対するすべての操作が通常どおり操作できます。
      スナップショットには、ターゲット サブスクリプションにはない必要がありますが再トレーニング ターゲット オブジェクトを特定する/FindSimilar を呼び出す前に適用されるスナップショットをソース オブジェクトのトレーニングの結果も含まれています。<br />
      1 つのスナップショットできます複数回適用する、並列で現在は CreateNew 適用モードがサポート対象サブスクリプションが既にには、同じ型と同じの objectId を使用してのオブジェクトが含まれている場合、適用操作が失敗することを意味します。 ユーザーは、このような競合を回避するために、要求本文で"objectId"を指定できます。<br />
      * 無料レベルのサブスクリプション クォータ:100 では、1 か月あたりの操作を適用します。
      * S0 レベルのサブスクリプション クォータ:100 では、1 日あたりの操作が適用されます。
    syntax:
      content: 'function apply(snapshotId: string, objectId: string, options?: Models.SnapshotApplyOptionalParams)'
      parameters:
        - id: snapshotId
          type:
            - string
          description: 特定のスナップショットを参照する id です。
        - id: objectId
          type:
            - string
          description: ユーザーは、スナップショットから作成する対象のオブジェクト id を指定します。
        - id: options
          type:
            - Models.SnapshotApplyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SnapshotApplyResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.apply_1'
    name: 'apply(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function apply(snapshotId: string, objectId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: snapshotId
          type:
            - string
          description: 特定のスナップショットを参照する id です。
        - id: objectId
          type:
            - string
          description: ユーザーは、スナップショットから作成する対象のオブジェクト id を指定します。
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            コールバック
      return:
        type:
          - Promise<Models.SnapshotApplyResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.apply_2'
    name: 'apply(string, string, SnapshotApplyOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function apply(snapshotId: string, objectId: string, options: SnapshotApplyOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: snapshotId
          type:
            - string
          description: 特定のスナップショットを参照する id です。
        - id: objectId
          type:
            - string
          description: ユーザーは、スナップショットから作成する対象のオブジェクト id を指定します。
        - id: options
          type:
            - '@azure/cognitiveservices-face.SnapshotApplyOptionalParams'
          description: 省略可能なパラメーター
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            コールバック
      return:
        type:
          - Promise<Models.SnapshotApplyResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.deleteMethod'
    name: 'deleteMethod(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: スナップショット Id に従って既存のスナップショットを削除します。 すべてのオブジェクトのデータとスナップショット内の情報も削除されます。 ソース サブスクリプション、スナップショットを取得するには、スナップショットを削除できます。 ユーザーがこの API を使用したスナップショットを削除していない場合、スナップショットはまだ自動的に削除されます作成後に 48 時間。
    syntax:
      content: 'function deleteMethod(snapshotId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: snapshotId
          type:
            - string
          description: 特定のスナップショットを参照する id です。
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.deleteMethod_2'
    name: 'deleteMethod(string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(snapshotId: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: snapshotId
          type:
            - string
          description: 特定のスナップショットを参照する id です。
        - id: options
          type:
            - RequestOptionsBase
          description: 省略可能なパラメーター
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            コールバック
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.deleteMethod_1'
    name: 'deleteMethod(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(snapshotId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: snapshotId
          type:
            - string
          description: 特定のスナップショットを参照する id です。
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            コールバック
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.get'
    name: 'get(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: スナップショットに関する情報を取得します。 スナップショットだけを受け取り、元のサブスクリプションにアクセスできるとがターゲットのサブスクリプションで applyScope に含まれるスナップショット - います。
    syntax:
      content: 'function get(snapshotId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: snapshotId
          type:
            - string
          description: 特定のスナップショットを参照する id です。
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SnapshotGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.get_2'
    name: 'get(string, RequestOptionsBase, ServiceCallback<Snapshot>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(snapshotId: string, options: RequestOptionsBase, callback: ServiceCallback<Snapshot>)'
      parameters:
        - id: snapshotId
          type:
            - string
          description: 特定のスナップショットを参照する id です。
        - id: options
          type:
            - RequestOptionsBase
          description: 省略可能なパラメーター
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.Snapshot>
          description: |
            コールバック
      return:
        type:
          - Promise<Models.SnapshotGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.get_1'
    name: 'get(string, ServiceCallback<Snapshot>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(snapshotId: string, callback: ServiceCallback<Snapshot>)'
      parameters:
        - id: snapshotId
          type:
            - string
          description: 特定のスナップショットを参照する id です。
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.Snapshot>
          description: |
            コールバック
      return:
        type:
          - Promise<Models.SnapshotGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.getOperationStatus'
    name: 'getOperationStatus(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: スナップショットが、適用操作の状態を取得します。
    syntax:
      content: 'function getOperationStatus(operationId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: operationId
          type:
            - string
          description: 特定の実行/適用スナップショット操作を参照する id です。
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SnapshotGetOperationStatusResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.getOperationStatus_2'
    name: 'getOperationStatus(string, RequestOptionsBase, ServiceCallback<OperationStatus>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getOperationStatus(operationId: string, options: RequestOptionsBase, callback: ServiceCallback<OperationStatus>)'
      parameters:
        - id: operationId
          type:
            - string
          description: 特定の実行/適用スナップショット操作を参照する id です。
        - id: options
          type:
            - RequestOptionsBase
          description: 省略可能なパラメーター
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.OperationStatus>
          description: |
            コールバック
      return:
        type:
          - Promise<Models.SnapshotGetOperationStatusResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.getOperationStatus_1'
    name: 'getOperationStatus(string, ServiceCallback<OperationStatus>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getOperationStatus(operationId: string, callback: ServiceCallback<OperationStatus>)'
      parameters:
        - id: operationId
          type:
            - string
          description: 特定の実行/適用スナップショット操作を参照する id です。
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.OperationStatus>
          description: |
            コールバック
      return:
        type:
          - Promise<Models.SnapshotGetOperationStatusResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.list'
    name: list(Models.SnapshotListOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: 関連の情報をユーザーによって実行されたスナップショットまたは、ユーザーに適用されるスナップショットを含むすべてのアクセス可能なスナップショットの一覧 (サブスクリプション id は、スナップショットで applyScope に含まれていた - 実行)。
    syntax:
      content: 'function list(options?: Models.SnapshotListOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.SnapshotListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SnapshotListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.list_1'
    name: 'list(ServiceCallback<Snapshot[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<Snapshot[]>)'
      parameters:
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.Snapshot[]>'
          description: |
            コールバック
      return:
        type:
          - Promise<Models.SnapshotListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.list_2'
    name: 'list(SnapshotListOptionalParams, ServiceCallback<Snapshot[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(options: SnapshotListOptionalParams, callback: ServiceCallback<Snapshot[]>)'
      parameters:
        - id: options
          type:
            - '@azure/cognitiveservices-face.SnapshotListOptionalParams'
          description: 省略可能なパラメーター
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.Snapshot[]>'
          description: |
            コールバック
      return:
        type:
          - Promise<Models.SnapshotListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.constructor'
    name: SnapshotOperations(FaceClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: SnapshotOperations を作成します。
    syntax:
      content: 'new SnapshotOperations(client: FaceClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/cognitiveservices-face.FaceClientContext'
          description: |
            サービス クライアントへの参照。
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.take'
    name: 'take(Models.SnapshotObjectType, string, string[], Models.SnapshotTakeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      顔リスト、大規模な顔リスト、人物グループまたは大きなユーザー グループのスナップショットをユーザーが指定したスナップショットの種類、ソース オブジェクト id、スコープと省略可能なユーザー データを適用するための操作を送信します。<br />
      バックアップし、同じリージョン内またはリージョン間で、サブスクリプションの 1 つの面から、顔のデータを復元するユーザーは、スナップショット インターフェイスです。 ワークフローには、2 つのフェーズでは、スナップショットのソース オブジェクトのコピーを作成し、スナップショットとして保存するにはスナップショットを呼び出して、ユーザーの最初の呼び出しが含まれています。-ターゲット サブスクリプションにスナップショットを貼り付けるに適用されます。 スナップショットは、アカウントとリージョンのクロス適用可能になるように、(Azure インスタンスごと)、一元的な場所に格納されます。<br />
      スナップショットの作成は、非同期操作です。 OperationStatus - スナップショットの作成の進行状況を追跡するための Get で使用される、応答ヘッダーの「操作の場所」フィールドから、操作 id を取得できます。 スナップショット id は、"resourceLocation"フィールドで OperationStatus - Get 応答操作の状態が「成功」が含まれます。<br />
      スナップショットの作成時は、ソース オブジェクト内の人物および顔のエントリの数によって異なります。 秒単位またはまで複数人の顔を 1,000,000 担当者は数時間かかる可能性があります。<br />
      自動的に有効期限が切れたし、スナップショットを作成した後 48 時間でクリーンアップがスナップショット
      - します。 ユーザーは、スナップショットの有効期限より前に、であれば単独で Delete を使用してスナップショットを削除できます。<br />
      特定のオブジェクトのスナップショットを取得しても、オブジェクトに対して他の操作はブロックされません。 すべて読み取り専用の操作 (/一覧の取得と特定/FindSimilar/検証) を通常どおりに実施できます。 追加/更新/削除、ソース オブジェクトまたはその担当者/面と、トレーニングなど、すべての書き込み可能な操作には、ブロックされませんが、その作成時に、スナップショットに書き込み可能な更新プログラムが反映されない可能性がありますので使用しないでは。 スナップショットの作成が完了すると、すべての読み取りと書き込みの操作は通常どおり操作できます。 スナップショットは、ターゲット サブスクリプションにはない必要がありますが再トレーニング ターゲット オブジェクトを特定する/FindSimilar を呼び出す前に適用されるスナップショットをソース オブジェクトのトレーニングの結果も含まれます。<br />
      * 無料レベルのサブスクリプション クォータ:100 では、1 か月あたりの操作を実行します。
      * S0 レベルのサブスクリプション クォータ:100 では、1 日あたりの操作を実行します。
    syntax:
      content: 'function take(type: Models.SnapshotObjectType, objectId: string, applyScope: string[], options?: Models.SnapshotTakeOptionalParams)'
      parameters:
        - id: type
          type:
            - Models.SnapshotObjectType
          description: 'ユーザーからスナップショットを作成するソース オブジェクトの種類を指定します。 現在 FaceList、つの PersonGroup、LargeFaceList および LargePersonGroup はサポートされています。 指定できる値は、次のとおりです。''FaceList'', ''LargeFaceList'', ''LargePersonGroup'', ''PersonGroup'''
        - id: objectId
          type:
            - string
          description: ユーザーからスナップショットを作成するソース オブジェクトの id を指定します。
        - id: applyScope
          type:
            - 'string[]'
          description: ユーザーは、スナップショットのターゲット顔のサブスクリプション id の配列を指定します。 各スナップショットはスナップショット - の applyScope に含まれるサブスクリプションのみを適用できます。
        - id: options
          type:
            - Models.SnapshotTakeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SnapshotTakeResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.take_1'
    name: 'take(Models.SnapshotObjectType, string, string[], ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function take(type: Models.SnapshotObjectType, objectId: string, applyScope: string[], callback: ServiceCallback<void>)'
      parameters:
        - id: type
          type:
            - Models.SnapshotObjectType
          description: 'ユーザーからスナップショットを作成するソース オブジェクトの種類を指定します。 現在 FaceList、つの PersonGroup、LargeFaceList および LargePersonGroup はサポートされています。 指定できる値は、次のとおりです。''FaceList'', ''LargeFaceList'', ''LargePersonGroup'', ''PersonGroup'''
        - id: objectId
          type:
            - string
          description: ユーザーからスナップショットを作成するソース オブジェクトの id を指定します。
        - id: applyScope
          type:
            - 'string[]'
          description: ユーザーは、スナップショットのターゲット顔のサブスクリプション id の配列を指定します。 各スナップショットはスナップショット - の applyScope に含まれるサブスクリプションのみを適用できます。
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            コールバック
      return:
        type:
          - Promise<Models.SnapshotTakeResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.take_2'
    name: 'take(Models.SnapshotObjectType, string, string[], SnapshotTakeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function take(type: Models.SnapshotObjectType, objectId: string, applyScope: string[], options: SnapshotTakeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: type
          type:
            - Models.SnapshotObjectType
          description: 'ユーザーからスナップショットを作成するソース オブジェクトの種類を指定します。 現在 FaceList、つの PersonGroup、LargeFaceList および LargePersonGroup はサポートされています。 指定できる値は、次のとおりです。''FaceList'', ''LargeFaceList'', ''LargePersonGroup'', ''PersonGroup'''
        - id: objectId
          type:
            - string
          description: ユーザーからスナップショットを作成するソース オブジェクトの id を指定します。
        - id: applyScope
          type:
            - 'string[]'
          description: ユーザーは、スナップショットのターゲット顔のサブスクリプション id の配列を指定します。 各スナップショットはスナップショット - の applyScope に含まれるサブスクリプションのみを適用できます。
        - id: options
          type:
            - '@azure/cognitiveservices-face.SnapshotTakeOptionalParams'
          description: 省略可能なパラメーター
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            コールバック
      return:
        type:
          - Promise<Models.SnapshotTakeResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.update'
    name: 'update(string, Models.SnapshotUpdateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: スナップショットの情報を更新します。 ソース サブスクリプション、スナップショットを取得するには、スナップショットを更新できます。
    syntax:
      content: 'function update(snapshotId: string, options?: Models.SnapshotUpdateOptionalParams)'
      parameters:
        - id: snapshotId
          type:
            - string
          description: 特定のスナップショットを参照する id です。
        - id: options
          type:
            - Models.SnapshotUpdateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.update_1'
    name: 'update(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(snapshotId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: snapshotId
          type:
            - string
          description: 特定のスナップショットを参照する id です。
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            コールバック
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.update_2'
    name: 'update(string, SnapshotUpdateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(snapshotId: string, options: SnapshotUpdateOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: snapshotId
          type:
            - string
          description: 特定のスナップショットを参照する id です。
        - id: options
          type:
            - '@azure/cognitiveservices-face.SnapshotUpdateOptionalParams'
          description: 省略可能なパラメーター
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            コールバック
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
references:
  - uid: '@azure/cognitiveservices-face.FaceClientContext'
    name: FaceClientContext
    spec.typeScript:
      - name: FaceClientContext
        fullName: FaceClientContext
        uid: '@azure/cognitiveservices-face.FaceClientContext'
  - uid: '@azure/cognitiveservices-face.SnapshotApplyOptionalParams'
    name: SnapshotApplyOptionalParams
    spec.typeScript:
      - name: SnapshotApplyOptionalParams
        fullName: SnapshotApplyOptionalParams
        uid: '@azure/cognitiveservices-face.SnapshotApplyOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-face.Snapshot>
    name: Snapshot>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Snapshot
        fullName: Snapshot
        uid: '@azure/cognitiveservices-face.Snapshot'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/cognitiveservices-face.OperationStatus>
    name: OperationStatus>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: OperationStatus
        fullName: OperationStatus
        uid: '@azure/cognitiveservices-face.OperationStatus'
      - name: '>'
        fullName: '>'
  - uid: 'ServiceCallback<@azure/cognitiveservices-face.Snapshot[]>'
    name: 'Snapshot[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Snapshot
        fullName: Snapshot
        uid: '@azure/cognitiveservices-face.Snapshot'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/cognitiveservices-face.SnapshotListOptionalParams'
    name: SnapshotListOptionalParams
    spec.typeScript:
      - name: SnapshotListOptionalParams
        fullName: SnapshotListOptionalParams
        uid: '@azure/cognitiveservices-face.SnapshotListOptionalParams'
  - uid: '@azure/cognitiveservices-face.SnapshotTakeOptionalParams'
    name: SnapshotTakeOptionalParams
    spec.typeScript:
      - name: SnapshotTakeOptionalParams
        fullName: SnapshotTakeOptionalParams
        uid: '@azure/cognitiveservices-face.SnapshotTakeOptionalParams'
  - uid: '@azure/cognitiveservices-face.SnapshotUpdateOptionalParams'
    name: SnapshotUpdateOptionalParams
    spec.typeScript:
      - name: SnapshotUpdateOptionalParams
        fullName: SnapshotUpdateOptionalParams
        uid: '@azure/cognitiveservices-face.SnapshotUpdateOptionalParams'