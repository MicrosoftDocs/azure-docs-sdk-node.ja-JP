### YamlMime:UniversalReference
items:
  - uid: '@azure/batch.Schedule'
    name: Schedule
    fullName: Schedule
    children:
      - '@azure/batch.Schedule.doNotRunAfter'
      - '@azure/batch.Schedule.doNotRunUntil'
      - '@azure/batch.Schedule.recurrenceInterval'
      - '@azure/batch.Schedule.startWindow'
    langs:
      - typeScript
    type: interface
    summary: <span data-ttu-id="6f633-101">スケジュールを表すインターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="6f633-101">An interface representing Schedule.</span></span>
    package: '@azure/batch'
  - uid: '@azure/batch.Schedule.doNotRunAfter'
    name: doNotRunAfter
    fullName: doNotRunAfter
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="6f633-102">までジョブは作成されませんでこのジョブ スケジュール時間。</span><span class="sxs-lookup"><span data-stu-id="6f633-102">A time after which no job will be created under this job schedule.</span></span> <span data-ttu-id="6f633-103">スケジュールは、この期限を過ぎると、このジョブ スケジュールのアクティブなジョブがないとすぐに完了した状態に移行されます。</span><span class="sxs-lookup"><span data-stu-id="6f633-103">The schedule will move to the completed state as soon as this deadline is past and there is no active job under this job schedule.</span></span> <span data-ttu-id="6f633-104">DoNotRunAfter 時刻を指定しないと、定期的なジョブ スケジュールを作成しての場合は、明示的に終了するまで、ジョブ スケジュールがアクティブな残ります。</span><span class="sxs-lookup"><span data-stu-id="6f633-104">If you do not specify a doNotRunAfter time, and you are creating a recurring job schedule, the job schedule will remain active until you explicitly terminate it.</span></span>'
    optional: true
    syntax:
      content: 'doNotRunAfter?: Date'
      return:
        type:
          - Date
    package: '@azure/batch'
  - uid: '@azure/batch.Schedule.doNotRunUntil'
    name: doNotRunUntil
    fullName: doNotRunUntil
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="6f633-105">最も早い時刻を任意のジョブをこのジョブのスケジュールで作成可能性があります。</span><span class="sxs-lookup"><span data-stu-id="6f633-105">The earliest time at which any job may be created under this job schedule.</span></span> <span data-ttu-id="6f633-106">DoNotRunUntil 時間を指定しない場合、スケジュールがジョブをすぐに作成する準備ができてになります。</span><span class="sxs-lookup"><span data-stu-id="6f633-106">If you do not specify a doNotRunUntil time, the schedule becomes ready to create jobs immediately.</span></span>'
    optional: true
    syntax:
      content: 'doNotRunUntil?: Date'
      return:
        type:
          - Date
    package: '@azure/batch'
  - uid: '@azure/batch.Schedule.recurrenceInterval'
    name: recurrenceInterval
    fullName: recurrenceInterval
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="6f633-107">2 つの連続するジョブのスケジュール ジョブの開始時刻の時間間隔。</span><span class="sxs-lookup"><span data-stu-id="6f633-107">The time interval between the start times of two successive jobs under the job schedule.</span></span> <span data-ttu-id="6f633-108">ジョブのスケジュールを特定の時点でその下にある 1 つのアクティブなジョブことができます。</span><span class="sxs-lookup"><span data-stu-id="6f633-108">A job schedule can have at most one active job under it at any given time.</span></span> <span data-ttu-id="6f633-109">ジョブのスケジュールを持てないため最大でその下にある 1 つのアクティブなジョブ、特定の時点はジョブのスケジュールでは、新しいジョブの作成に時間が前のジョブが実行中の場合は、前のジョブが完了するまで、Batch サービスはしない新しいジョブを作成は。</span><span class="sxs-lookup"><span data-stu-id="6f633-109">Because a job schedule can have at most one active job under it at any given time, if it is time to create a new job under a job schedule, but the previous job is still running, the Batch service will not create the new job until the previous job finishes.</span></span> <span data-ttu-id="6f633-110">前のジョブが新しい recurrenceInterval の startWindow 期間内で完了しなかった場合は、新しいジョブがその間隔でスケジュールいません。</span><span class="sxs-lookup"><span data-stu-id="6f633-110">If the previous job does not finish within the startWindow period of the new recurrenceInterval, then no new job will be scheduled for that interval.</span></span> <span data-ttu-id="6f633-111">定期的なジョブの場合は、通常、jobSpecification で、jobManagerTask を指定してください。</span><span class="sxs-lookup"><span data-stu-id="6f633-111">For recurring jobs, you should normally specify a jobManagerTask in the jobSpecification.</span></span> <span data-ttu-id="6f633-112">JobManagerTask を使用しない場合、外部のプロセス監視ジョブが作成されたときに、ジョブにタスクを追加および次の定期実行の準備完了のジョブを終了する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6f633-112">If you do not use jobManagerTask, you will need an external process to monitor when jobs are created, add tasks to the jobs and terminate the jobs ready for the next recurrence.</span></span> <span data-ttu-id="6f633-113">既定値は、スケジュールが再発しない: doNotRunUntil 時間の後の startWindow 内で 1 つのジョブが作成され、そのジョブが完了するとすぐには、スケジュールが完了します。</span><span class="sxs-lookup"><span data-stu-id="6f633-113">The default is that the schedule does not recur: one job is created, within the startWindow after the doNotRunUntil time, and the schedule is complete as soon as that job finishes.</span></span> <span data-ttu-id="6f633-114">最小値は、1 分です。</span><span class="sxs-lookup"><span data-stu-id="6f633-114">The minimum value is 1 minute.</span></span> <span data-ttu-id="6f633-115">下限値を指定する場合、Batch サービスはエラー; でスケジュールを拒否します。REST API を直接呼び出す、HTTP 状態コードは 400 (Bad Request) です。</span><span class="sxs-lookup"><span data-stu-id="6f633-115">If you specify a lower value, the Batch service rejects the schedule with an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request).</span></span>'
    optional: true
    syntax:
      content: 'recurrenceInterval?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/batch'
  - uid: '@azure/batch.Schedule.startWindow'
    name: startWindow
    fullName: startWindow
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="6f633-116">の時間間隔を、ジョブをスケジュールすることを示します。 時刻から開始する必要があります内に作成、ジョブを作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6f633-116">The time interval, starting from the time at which the schedule indicates a job should be created, within which a job must be created.</span></span> <span data-ttu-id="6f633-117">ジョブは、startWindow 間隔内で作成されていない場合、''機会'' は失われます。次の繰り返しのスケジュールまでジョブは作成されません。</span><span class="sxs-lookup"><span data-stu-id="6f633-117">If a job is not created within the startWindow interval, then the ''opportunity'' is lost; no job will be created until the next recurrence of the schedule.</span></span> <span data-ttu-id="6f633-118">スケジュールは定期的に実行、startWindow が繰り返し間隔よりも長い場合は、し、これと同じです、無限の startWindow に次の定期的な間隔の 1 つ recurrenceInterval で '' 期限'' ジョブはフォワード実行されないためです。</span><span class="sxs-lookup"><span data-stu-id="6f633-118">If the schedule is recurring, and the startWindow is longer than the recurrence interval, then this is equivalent to an infinite startWindow, because the job that is ''due'' in one recurrenceInterval is not carried forward into the next recurrence interval.</span></span> <span data-ttu-id="6f633-119">既定値は有限ではありません。</span><span class="sxs-lookup"><span data-stu-id="6f633-119">The default is infinite.</span></span> <span data-ttu-id="6f633-120">最小値は、1 分です。</span><span class="sxs-lookup"><span data-stu-id="6f633-120">The minimum value is 1 minute.</span></span> <span data-ttu-id="6f633-121">下限値を指定する場合、Batch サービスはエラー; でスケジュールを拒否します。REST API を直接呼び出す、HTTP 状態コードは 400 (Bad Request) です。</span><span class="sxs-lookup"><span data-stu-id="6f633-121">If you specify a lower value, the Batch service rejects the schedule with an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request).</span></span>'
    optional: true
    syntax:
      content: 'startWindow?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/batch'