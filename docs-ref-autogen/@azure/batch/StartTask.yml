### YamlMime:UniversalReference
items:
  - uid: '@azure/batch.StartTask'
    name: StartTask
    fullName: StartTask
    children:
      - '@azure/batch.StartTask.commandLine'
      - '@azure/batch.StartTask.containerSettings'
      - '@azure/batch.StartTask.environmentSettings'
      - '@azure/batch.StartTask.maxTaskRetryCount'
      - '@azure/batch.StartTask.resourceFiles'
      - '@azure/batch.StartTask.userIdentity'
      - '@azure/batch.StartTask.waitForSuccess'
    langs:
      - typeScript
    type: interface
    summary: '<span data-ttu-id="88869-101">コンピューティング ノードで、復旧操作がトリガーされたときに、batch はタスクを再試行します。</span><span class="sxs-lookup"><span data-stu-id="88869-101">Batch will retry tasks when a recovery operation is triggered on a compute node.</span></span> <span data-ttu-id="88869-102">回復操作の例が含まれます (ただしこれらに限定されません)、異常なコンピューティング ノードが再起動またはホスト エラーにより、コンピューティング ノードが表示されなくなったとします。</span><span class="sxs-lookup"><span data-stu-id="88869-102">Examples of recovery operations include (but are not limited to) when an unhealthy compute node is rebooted or a compute node disappeared due to host failure.</span></span> <span data-ttu-id="88869-103">操作は依存しないと、maxTaskRetryCount 照らし合わせてカウントされることはありません、回復を再試行します。</span><span class="sxs-lookup"><span data-stu-id="88869-103">Retries due to recovery operations are independent of and are not counted against the maxTaskRetryCount.</span></span> <span data-ttu-id="88869-104">MaxTaskRetryCount が 0 の場合でも、復旧操作のための内部の再試行が発生します。</span><span class="sxs-lookup"><span data-stu-id="88869-104">Even if the maxTaskRetryCount is 0, an internal retry due to a recovery operation may occur.</span></span> <span data-ttu-id="88869-105">このため、すべてのタスクにべき等であることがあります。</span><span class="sxs-lookup"><span data-stu-id="88869-105">Because of this, all tasks should be idempotent.</span></span> <span data-ttu-id="88869-106">つまり、タスクが許容されているが中断され、任意の破損またはデータの重複を発生させることがなく再起動する必要があります。</span><span class="sxs-lookup"><span data-stu-id="88869-106">This means tasks need to tolerate being interrupted and restarted without causing any corruption or duplicate data.</span></span> <span data-ttu-id="88869-107">最適な練習を何らかの形式のチェックポイント処理を使用するには時間の長いタスクを実行します。</span><span class="sxs-lookup"><span data-stu-id="88869-107">The best practice for long running tasks is to use some form of checkpointing.</span></span> <span data-ttu-id="88869-108">場合によっては、開始タスク可能性がありますを再実行場合でも、ノードを再起動できませんでした。</span><span class="sxs-lookup"><span data-stu-id="88869-108">In some cases the start task may be re-run even though the node was not rebooted.</span></span> <span data-ttu-id="88869-109">これは、バッチが開始タスクを再実行することからブロックされます離脱プロセスを作成または開始タスクの作業ディレクトリからサービスをインストールまたは起動する開始タスクを回避する特別な注意を実行する必要があります。</span><span class="sxs-lookup"><span data-stu-id="88869-109">Special care should be taken to avoid start tasks which create breakaway process or install/launch services from the start task working directory, as this will block Batch from being able to re-run the start task.</span></span>'
    package: '@azure/batch'
  - uid: '@azure/batch.StartTask.commandLine'
    name: commandLine
    fullName: commandLine
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="88869-110">開始タスクのコマンドラインです。</span><span class="sxs-lookup"><span data-stu-id="88869-110">The command line of the start task.</span></span> <span data-ttu-id="88869-111">コマンド ライン シェルで動作しないためことはできません活用してください環境変数の拡張などのシェルの機能。</span><span class="sxs-lookup"><span data-stu-id="88869-111">The command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion.</span></span> <span data-ttu-id="88869-112">このような機能を活用する場合を呼び出す必要があります、コマンドラインでシェル例 "cmd/c MyCommand"を使用して Windows でまたは"//bin/sh-c MyCommand"linux。</span><span class="sxs-lookup"><span data-stu-id="88869-112">If you want to take advantage of such features, you should invoke the shell in the command line, for example using "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.</span></span> <span data-ttu-id="88869-113">コマンドラインは、ファイルのパスを参照している場合、(タスク作業ディレクトリを基準)、相対パスを使うか、バッチの指定された環境変数を使用して (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables)します。</span><span class="sxs-lookup"><span data-stu-id="88869-113">If the command line refers to file paths, it should use a relative path (relative to the task working directory), or use the Batch provided environment variable (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables).</span></span>'
    syntax:
      content: 'commandLine: string'
      return:
        type:
          - string
    package: '@azure/batch'
  - uid: '@azure/batch.StartTask.containerSettings'
    name: containerSettings
    fullName: containerSettings
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="88869-114">開始タスクを実行するコンテナーの設定。</span><span class="sxs-lookup"><span data-stu-id="88869-114">The settings for the container under which the start task runs.</span></span> <span data-ttu-id="88869-115">これは、指定した場合、AZ_BATCH_NODE_ROOT_DIR (ノード上の Azure Batch ディレクトリのルート) の下のすべてのディレクトリに再帰的には、コンテナーにマップする、すべてのタスクの環境変数は、コンテナーにマップしてタスクのコマンドラインは、コンテナー内で実行します。</span><span class="sxs-lookup"><span data-stu-id="88869-115">When this is specified, all directories recursively below the AZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the node) are mapped into the container, all task environment variables are mapped into the container, and the task command line is executed in the container.</span></span>'
    optional: true
    syntax:
      content: 'containerSettings?: TaskContainerSettings'
      return:
        type:
          - '@azure/batch.TaskContainerSettings'
    package: '@azure/batch'
  - uid: '@azure/batch.StartTask.environmentSettings'
    name: environmentSettings
    fullName: environmentSettings
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="88869-116">開始タスクの環境変数設定の一覧。</span><span class="sxs-lookup"><span data-stu-id="88869-116">A list of environment variable settings for the start task.</span></span>
    optional: true
    syntax:
      content: 'environmentSettings?: EnvironmentSetting[]'
      return:
        type:
          - '@azure/batch.EnvironmentSetting[]'
    package: '@azure/batch'
  - uid: '@azure/batch.StartTask.maxTaskRetryCount'
    name: maxTaskRetryCount
    fullName: maxTaskRetryCount
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      <span data-ttu-id="88869-117">タスクを再試行できる最大回数。</span><span class="sxs-lookup"><span data-stu-id="88869-117">The maximum number of times the task may be retried.</span></span> <span data-ttu-id="88869-118">Batch サービスは、終了コードが 0 以外の場合にタスクを再試行します。</span><span class="sxs-lookup"><span data-stu-id="88869-118">The Batch service retries a task if its exit code is nonzero.</span></span> <span data-ttu-id="88869-119">この値によって再試行の回数が限定されますのでご注意ください。</span><span class="sxs-lookup"><span data-stu-id="88869-119">Note that this value specifically controls the number of retries.</span></span> <span data-ttu-id="88869-120">Batch サービスはタスクを 1 回試行してから、上限に達するまで再試行できます。</span><span class="sxs-lookup"><span data-stu-id="88869-120">The Batch service will try the task once, and may then retry up to this limit.</span></span> <span data-ttu-id="88869-121">たとえば、最大再試行回数が 3 の場合は、バッチ タスク最大 4 回試行 (初回試行 1 回と再試行 3 回)。</span><span class="sxs-lookup"><span data-stu-id="88869-121">For example, if the maximum retry count is 3, Batch tries the task up to 4 times (one initial try and 3 retries).</span></span>
      <span data-ttu-id="88869-122">最大再試行回数が 0 の場合、Batch サービスは、タスクを再試行しません。</span><span class="sxs-lookup"><span data-stu-id="88869-122">If the maximum retry count is 0, the Batch service does not retry the task.</span></span> <span data-ttu-id="88869-123">最大再試行回数が-1 で、Batch サービスの再試行制限のないタスクです。</span><span class="sxs-lookup"><span data-stu-id="88869-123">If the maximum retry count is -1, the Batch service retries the task without limit.</span></span>
    optional: true
    syntax:
      content: 'maxTaskRetryCount?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/batch'
  - uid: '@azure/batch.StartTask.resourceFiles'
    name: resourceFiles
    fullName: resourceFiles
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="88869-124">コマンドラインを実行する前に、Batch サービスをコンピューティング ノードにダウンロードするファイルの一覧。</span><span class="sxs-lookup"><span data-stu-id="88869-124">A list of files that the Batch service will download to the compute node before running the command line.</span></span>  <span data-ttu-id="88869-125">リソース ファイルの一覧の最大サイズがあります。</span><span class="sxs-lookup"><span data-stu-id="88869-125">There is a maximum size for the list of resource files.</span></span> <span data-ttu-id="88869-126">最大サイズを超えると、要求は失敗し、RequestEntityTooLarge が応答のエラー コードになります。</span><span class="sxs-lookup"><span data-stu-id="88869-126">When the max size is exceeded, the request will fail and the response error code will be RequestEntityTooLarge.</span></span> <span data-ttu-id="88869-127">このような場合は、サイズの ResourceFiles コレクションを減らす必要があります。</span><span class="sxs-lookup"><span data-stu-id="88869-127">If this occurs, the collection of ResourceFiles must be reduced in size.</span></span> <span data-ttu-id="88869-128">これは、.zip ファイル、アプリケーションのパッケージまたは Docker コンテナーを使用して実現できます。</span><span class="sxs-lookup"><span data-stu-id="88869-128">This can be achieved using .zip files, Application Packages, or Docker Containers.</span></span> <span data-ttu-id="88869-129">この要素の下に示されているファイルは、タスクの作業ディレクトリ内にあります。</span><span class="sxs-lookup"><span data-stu-id="88869-129">Files listed under this element are located in the task''s working directory.</span></span>'
    optional: true
    syntax:
      content: 'resourceFiles?: ResourceFile[]'
      return:
        type:
          - '@azure/batch.ResourceFile[]'
    package: '@azure/batch'
  - uid: '@azure/batch.StartTask.userIdentity'
    name: userIdentity
    fullName: userIdentity
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="88869-130">開始タスクを実行するユーザーの id。</span><span class="sxs-lookup"><span data-stu-id="88869-130">The user identity under which the start task runs.</span></span> <span data-ttu-id="88869-131">省略した場合、タスクは、タスクに一意の非管理者ユーザーとして実行されます。</span><span class="sxs-lookup"><span data-stu-id="88869-131">If omitted, the task runs as a non-administrative user unique to the task.</span></span>'
    optional: true
    syntax:
      content: 'userIdentity?: UserIdentity'
      return:
        type:
          - '@azure/batch.UserIdentity'
    package: '@azure/batch'
  - uid: '@azure/batch.StartTask.waitForSuccess'
    name: waitForSuccess
    fullName: waitForSuccess
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      <span data-ttu-id="88869-132">開始タスクが正常に完了するため、Batch サービスが待機するかどうか (つまり、終了コード 0 で終了する)、コンピューティング ノード上のすべてのタスクをスケジュールする前にします。</span><span class="sxs-lookup"><span data-stu-id="88869-132">Whether the Batch service should wait for the start task to complete successfully (that is, to exit with exit code 0) before scheduling any tasks on the compute node.</span></span> <span data-ttu-id="88869-133">コンピューティング ノードで true で、開始タスクが失敗した場合、バッチ サービスは、その最大再試行回数 (maxTaskRetryCount) まで開始タスクを再試行します。</span><span class="sxs-lookup"><span data-stu-id="88869-133">If true and the start task fails on a compute node, the Batch service retries the start task up to its maximum retry count (maxTaskRetryCount).</span></span> <span data-ttu-id="88869-134">タスクがまだない正常に完了し、すべての再試行、Batch のサービス マークした後、コンピューティング ノードを使用できない場合とにタスクをスケジュールしません。</span><span class="sxs-lookup"><span data-stu-id="88869-134">If the task has still not completed successfully after all retries, then the Batch service marks the compute node unusable, and will not schedule tasks to it.</span></span>
      <span data-ttu-id="88869-135">この条件は、ノードの状態とエラー情報の詳細を使用して検出できます。</span><span class="sxs-lookup"><span data-stu-id="88869-135">This condition can be detected via the node state and failure info details.</span></span> <span data-ttu-id="88869-136">False の場合、Batch サービスは、開始タスクを完了するは待機しません。</span><span class="sxs-lookup"><span data-stu-id="88869-136">If false, the Batch service will not wait for the start task to complete.</span></span> <span data-ttu-id="88869-137">この場合、その他のタスクが開始タスクがまだ実行中、コンピューティング ノードで実行されているを開始することができます。開始タスクが失敗した場合でも新しいタスクがノードにあるスケジュール続行されます。</span><span class="sxs-lookup"><span data-stu-id="88869-137">In this case, other tasks can start executing on the compute node while the start task is still running; and even if the start task fails, new tasks will continue to be scheduled on the node.</span></span> <span data-ttu-id="88869-138">既定値は false です。</span><span class="sxs-lookup"><span data-stu-id="88869-138">The default is false.</span></span>
    optional: true
    syntax:
      content: 'waitForSuccess?: undefined | false | true'
      return:
        type:
          - undefined | false | true
    package: '@azure/batch'
references:
  - uid: '@azure/batch.TaskContainerSettings'
    name: TaskContainerSettings
    spec.typeScript:
      - name: TaskContainerSettings
        fullName: TaskContainerSettings
        uid: '@azure/batch.TaskContainerSettings'
  - uid: '@azure/batch.EnvironmentSetting[]'
    name: 'EnvironmentSetting[]'
    spec.typeScript:
      - name: EnvironmentSetting
        fullName: EnvironmentSetting
        uid: '@azure/batch.EnvironmentSetting'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/batch.ResourceFile[]'
    name: 'ResourceFile[]'
    spec.typeScript:
      - name: ResourceFile
        fullName: ResourceFile
        uid: '@azure/batch.ResourceFile'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/batch.UserIdentity'
    name: UserIdentity
    spec.typeScript:
      - name: UserIdentity
        fullName: UserIdentity
        uid: '@azure/batch.UserIdentity'