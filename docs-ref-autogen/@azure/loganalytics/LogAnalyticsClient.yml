### YamlMime:UniversalReference
items:
  - uid: '@azure/loganalytics.LogAnalyticsClient'
    name: LogAnalyticsClient
    fullName: LogAnalyticsClient
    children:
      - '@azure/loganalytics.LogAnalyticsClient.credentials'
      - '@azure/loganalytics.LogAnalyticsClient.constructor'
      - '@azure/loganalytics.LogAnalyticsClient.query'
      - '@azure/loganalytics.LogAnalyticsClient.sendOperationRequest'
      - '@azure/loganalytics.LogAnalyticsClient.sendRequest'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@azure/loganalytics.LogAnalyticsClientContext'
    package: '@azure/loganalytics'
  - uid: '@azure/loganalytics.LogAnalyticsClient.credentials'
    name: credentials
    fullName: credentials
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type:
          - ServiceClientCredentials
    package: '@azure/loganalytics'
  - uid: '@azure/loganalytics.LogAnalyticsClient.constructor'
    name: 'LogAnalyticsClient(ServiceClientCredentials, Models.LogAnalyticsClientOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: LogAnalyticsClient クラスの新しいインスタンスを初期化します。
    syntax:
      content: 'new LogAnalyticsClient(credentials: ServiceClientCredentials, options?: Models.LogAnalyticsClientOptions)'
      parameters:
        - id: credentials
          type:
            - ServiceClientCredentials
          description: サブスクリプションの資格情報をクライアント サブスクリプションを一意に識別します。
        - id: options
          type:
            - Models.LogAnalyticsClientOptions
          description: ''
          optional: true
    package: '@azure/loganalytics'
  - uid: '@azure/loganalytics.LogAnalyticsClient.query'
    name: query
    fullName: query
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'query: Query'
      return:
        type:
          - '@azure/loganalytics.Query'
    package: '@azure/loganalytics'
  - uid: '@azure/loganalytics.LogAnalyticsClient.sendOperationRequest'
    name: 'sendOperationRequest(OperationArguments, OperationSpec, ServiceCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 指定された OperationSpec を使用して設定される HTTP 要求を送信します。
    syntax:
      content: 'function sendOperationRequest(operationArguments: OperationArguments, operationSpec: OperationSpec, callback?: ServiceCallback<any>)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: この引数から HTTP 要求のテンプレート化された値が設定されます。
        - id: operationSpec
          type:
            - OperationSpec
          description: 使用して設定、httpRequest OperationSpec します。
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            応答が受信されたときに呼び出すコールバック。
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/loganalytics'
  - uid: '@azure/loganalytics.LogAnalyticsClient.sendRequest'
    name: sendRequest(RequestPrepareOptions | WebResource)
    children: []
    type: method
    langs:
      - typeScript
    summary: 指定された httpRequest を送信します。
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResource)'
      parameters:
        - id: options
          type:
            - RequestPrepareOptions | WebResource
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/loganalytics'
references:
  - uid: '@azure/loganalytics.LogAnalyticsClientContext'
    name: LogAnalyticsClientContext
    spec.typeScript:
      - name: LogAnalyticsClientContext
        fullName: LogAnalyticsClientContext
        uid: '@azure/loganalytics.LogAnalyticsClientContext'
  - uid: '@azure/loganalytics.Query'
    name: Query
    spec.typeScript:
      - name: Query
        fullName: Query
        uid: '@azure/loganalytics.Query'