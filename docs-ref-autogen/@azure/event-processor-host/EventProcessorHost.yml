### YamlMime:UniversalReference
ms.openlocfilehash: 6ba5ac3c693177f8af42e6a22afe2d7805016620
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 12/13/2018
ms.locfileid: "52095627"
items:
- uid: '@azure/event-processor-host.EventProcessorHost'
  name: EventProcessorHost
  fullName: EventProcessorHost
  children:
  - '@azure/event-processor-host.EventProcessorHost.consumerGroup'
  - '@azure/event-processor-host.EventProcessorHost.createFromAadTokenCredentials'
  - '@azure/event-processor-host.EventProcessorHost.createFromAadTokenCredentialsWithCustomCheckpointAndLeaseManager'
  - '@azure/event-processor-host.EventProcessorHost.createFromConnectionString'
  - '@azure/event-processor-host.EventProcessorHost.createFromConnectionStringWithCustomCheckpointAndLeaseManager'
  - '@azure/event-processor-host.EventProcessorHost.createFromIotHubConnectionString'
  - '@azure/event-processor-host.EventProcessorHost.createFromIotHubConnectionStringWithCustomCheckpointAndLeaseManager'
  - '@azure/event-processor-host.EventProcessorHost.createFromTokenProvider'
  - '@azure/event-processor-host.EventProcessorHost.createFromTokenProviderWithCustomCheckpointAndLeaseManager'
  - '@azure/event-processor-host.EventProcessorHost.createHostName'
  - '@azure/event-processor-host.EventProcessorHost.constructor'
  - '@azure/event-processor-host.EventProcessorHost.getHubRuntimeInformation'
  - '@azure/event-processor-host.EventProcessorHost.getPartitionIds'
  - '@azure/event-processor-host.EventProcessorHost.getPartitionInformation'
  - '@azure/event-processor-host.EventProcessorHost.hostName'
  - '@azure/event-processor-host.EventProcessorHost.receivingFromPartitions'
  - '@azure/event-processor-host.EventProcessorHost.start'
  - '@azure/event-processor-host.EventProcessorHost.stop'
  langs:
  - typeScript
  type: class
  summary: EventHub からイベントを処理するイベント プロセッサ ホストについて説明します。
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.EventProcessorHost.consumerGroup'
  name: consumerGroup
  fullName: consumerGroup
  children: []
  langs:
  - typeScript
  type: property
  summary: イベント プロセッサ ホストのグループ名をコンシューマーに提供します。
  syntax:
    content: 'consumerGroup: string'
    return:
      type:
      - string
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.EventProcessorHost.createFromAadTokenCredentials'
  name: createFromAadTokenCredentials(string, string, string, string, string, ApplicationTokenCredentials | UserTokenCredentials | DeviceTokenCredentials | MSITokenCredentials, FromTokenProviderOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: AAD トークン資格情報から EventProcessorHost インスタンスを作成します。
  syntax:
    content: 'static function createFromAadTokenCredentials(hostName: string, storageConnectionString: string, storageContainerName: string, namespace: string, eventHubPath: string, credentials: ApplicationTokenCredentials | UserTokenCredentials | DeviceTokenCredentials | MSITokenCredentials, options?: FromTokenProviderOptions)'
    parameters:
    - id: hostName
      type:
      - string
      description: >-
        プロセッサ ホストの名前です。 一意である必要があります。

        一意性を確保するには、Guid または guid を持つプレフィックスを含むを強くお勧めします。 使用することができます`EventProcessorHost.createHostName("your-prefix")`;既定値:`js-host-${uuid()}`します。
    - id: storageConnectionString
      type:
      - string
      description: リースと、チェックポイントに使用される Azure Storage アカウントへの接続文字列。 例 DefaultEndpointsProtocol = https;AccountName = < アカウント名 >;AccountKey = < アカウント キー >;EndpointSuffix=core.windows.net
    - id: storageContainerName
      type:
      - string
      description: 組み込みのリースとチェックポイント マネージャーで使用するための azure ストレージ コンテナー名。
    - id: namespace
      type:
      - string
      description: >-
        Event Hubs の完全修飾ドメイン名。

        例:"{your-sb-名前空間}. &#42;.servicebus.windows.net"
    - id: eventHubPath
      type:
      - string
      description: イベント ハブの名前。
    - id: credentials
      type:
      - ApplicationTokenCredentials | UserTokenCredentials | DeviceTokenCredentials | MSITokenCredentials
      description: AAD トークン資格情報。 次のいずれかを指定できます。ApplicationTokenCredentials |UserTokenCredentials |DeviceTokenCredentials |MSITokenCredentials します。
    - id: options
      type:
      - '@azure/event-processor-host.FromTokenProviderOptions'
      description: ''
      optional: true
    return:
      type:
      - '@azure/event-processor-host.EventProcessorHost'
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.EventProcessorHost.createFromAadTokenCredentialsWithCustomCheckpointAndLeaseManager'
  name: createFromAadTokenCredentialsWithCustomCheckpointAndLeaseManager(string, string, string, ApplicationTokenCredentials | UserTokenCredentials | DeviceTokenCredentials | MSITokenCredentials, CheckpointManager, LeaseManager, FromTokenProviderOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: 指定されたチェックポイント マネージャーおよびリース マネージャーの AAD トークン資格情報から EventProcessorHost インスタンスを作成します。
  syntax:
    content: 'static function createFromAadTokenCredentialsWithCustomCheckpointAndLeaseManager(hostName: string, namespace: string, eventHubPath: string, credentials: ApplicationTokenCredentials | UserTokenCredentials | DeviceTokenCredentials | MSITokenCredentials, checkpointManager: CheckpointManager, leaseManager: LeaseManager, options?: FromTokenProviderOptions)'
    parameters:
    - id: hostName
      type:
      - string
      description: >-
        プロセッサ ホストの名前です。 一意である必要があります。

        一意性を確保するには、Guid または guid を持つプレフィックスを含むを強くお勧めします。 使用することができます`EventProcessorHost.createHostName("your-prefix")`;既定値:`js-host-${uuid()}`します。
    - id: namespace
      type:
      - string
      description: >-
        Event Hubs の完全修飾ドメイン名。

        例:"{your-sb-名前空間}. &#42;.servicebus.windows.net"
    - id: eventHubPath
      type:
      - string
      description: イベント ハブの名前。
    - id: credentials
      type:
      - ApplicationTokenCredentials | UserTokenCredentials | DeviceTokenCredentials | MSITokenCredentials
      description: AAD トークン資格情報。 次のいずれかを指定できます。ApplicationTokenCredentials |UserTokenCredentials |DeviceTokenCredentials |MSITokenCredentials します。
    - id: checkpointManager
      type:
      - '@azure/event-processor-host.CheckpointManager'
      description: チェックポイントを管理するマネージャー。
    - id: leaseManager
      type:
      - '@azure/event-processor-host.LeaseManager'
      description: リースを管理するマネージャー。
    - id: options
      type:
      - '@azure/event-processor-host.FromTokenProviderOptions'
      description: ''
      optional: true
    return:
      type:
      - '@azure/event-processor-host.EventProcessorHost'
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.EventProcessorHost.createFromConnectionString'
  name: createFromConnectionString(string, string, string, string, FromConnectionStringOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: EventHub 接続文字列から EventProcessorHost インスタンスを作成します。
  syntax:
    content: 'static function createFromConnectionString(hostName: string, storageConnectionString: string, storageContainerName: string, eventHubConnectionString: string, options?: FromConnectionStringOptions)'
    parameters:
    - id: hostName
      type:
      - string
      description: >-
        プロセッサ ホストの名前です。 一意である必要があります。

        一意性を確保するには、Guid または guid を持つプレフィックスを含むを強くお勧めします。 使用することができます`EventProcessorHost.createHostName("your-prefix")`;既定値:`js-host-${uuid()}`します。
    - id: storageConnectionString
      type:
      - string
      description: リースと、チェックポイントに使用される Azure Storage アカウントへの接続文字列。 例 DefaultEndpointsProtocol = https;AccountName = < アカウント名 >;AccountKey = < アカウント キー >;EndpointSuffix=core.windows.net
    - id: storageContainerName
      type:
      - string
      description: 組み込みのリースとチェックポイント マネージャーで使用するための azure ストレージ コンテナー名。
    - id: eventHubConnectionString
      type:
      - string
      description: >-
        受信する Event Hub の接続文字列。

        例:' Endpoint=sb://my-servicebus-namespace.servicebus.windows.net/;SharedAccessKeyName = my、SA の名前。SharedAccessKey マイ SA のキーを ='
    - id: options
      type:
      - '@azure/event-processor-host.FromConnectionStringOptions'
      description: ''
      optional: true
    return:
      type:
      - '@azure/event-processor-host.EventProcessorHost'
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.EventProcessorHost.createFromConnectionStringWithCustomCheckpointAndLeaseManager'
  name: createFromConnectionStringWithCustomCheckpointAndLeaseManager(string, string, CheckpointManager, LeaseManager, FromConnectionStringOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: 指定されたチェックポイント マネージャーおよびリース マネージャー EventHub 接続文字列から EventProcessorHost インスタンスを作成します。
  syntax:
    content: 'static function createFromConnectionStringWithCustomCheckpointAndLeaseManager(hostName: string, eventHubConnectionString: string, checkpointManager: CheckpointManager, leaseManager: LeaseManager, options?: FromConnectionStringOptions)'
    parameters:
    - id: hostName
      type:
      - string
      description: >-
        プロセッサ ホストの名前です。 一意である必要があります。

        一意性を確保するには、Guid または guid を持つプレフィックスを含むを強くお勧めします。 使用することができます`EventProcessorHost.createHostName("your-prefix")`;既定値:`js-host-${uuid()}`します。
    - id: eventHubConnectionString
      type:
      - string
      description: >-
        受信する Event Hub の接続文字列。

        例:' Endpoint=sb://my-servicebus-namespace.servicebus.windows.net/;SharedAccessKeyName = my、SA の名前。SharedAccessKey マイ SA のキーを ='
    - id: checkpointManager
      type:
      - '@azure/event-processor-host.CheckpointManager'
      description: チェックポイントを管理するマネージャー。
    - id: leaseManager
      type:
      - '@azure/event-processor-host.LeaseManager'
      description: リースを管理するマネージャー。
    - id: options
      type:
      - '@azure/event-processor-host.FromConnectionStringOptions'
      description: ''
      optional: true
    return:
      type:
      - '@azure/event-processor-host.EventProcessorHost'
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.EventProcessorHost.createFromIotHubConnectionString'
  name: createFromIotHubConnectionString(string, string, string, string, FromIotHubConnectionStringOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: IotHub の接続文字列から EventProcessorHost インスタンスを作成します。
  syntax:
    content: 'static function createFromIotHubConnectionString(hostName: string, storageConnectionString: string, storageContainerName: string, iotHubConnectionString: string, options?: FromIotHubConnectionStringOptions)'
    parameters:
    - id: hostName
      type:
      - string
      description: >-
        プロセッサ ホストの名前です。 一意である必要があります。

        一意性を確保するには、Guid または guid を持つプレフィックスを含むを強くお勧めします。 使用することができます`EventProcessorHost.createHostName("your-prefix")`;既定値:`js-host-${uuid()}`します。
    - id: storageConnectionString
      type:
      - string
      description: リースと、チェックポイントに使用される Azure Storage アカウントへの接続文字列。 例 DefaultEndpointsProtocol = https;AccountName = < アカウント名 >;AccountKey = < アカウント キー >;EndpointSuffix=core.windows.net
    - id: storageContainerName
      type:
      - string
      description: 組み込みのリースとチェックポイント マネージャーで使用するための azure ストレージ コンテナー名。
    - id: iotHubConnectionString
      type:
      - string
      description: >-
        Iothub の場合、接続文字列。

        例:' エンドポイント = iot のホスト名です。SharedAccessKeyName = my、SA の名前。SharedAccessKey マイ SA のキーを ='
    - id: options
      type:
      - '@azure/event-processor-host.FromIotHubConnectionStringOptions'
      description: ''
      optional: true
    return:
      type:
      - Promise<@azure/event-processor-host.EventProcessorHost>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.EventProcessorHost.createFromIotHubConnectionStringWithCustomCheckpointAndLeaseManager'
  name: createFromIotHubConnectionStringWithCustomCheckpointAndLeaseManager(string, string, CheckpointManager, LeaseManager, FromIotHubConnectionStringOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: 指定されたチェックポイント マネージャーおよびリース マネージャー IotHub の接続文字列から EventProcessorHost インスタンスを作成します。
  syntax:
    content: 'static function createFromIotHubConnectionStringWithCustomCheckpointAndLeaseManager(hostName: string, iotHubConnectionString: string, checkpointManager: CheckpointManager, leaseManager: LeaseManager, options?: FromIotHubConnectionStringOptions)'
    parameters:
    - id: hostName
      type:
      - string
      description: >-
        プロセッサ ホストの名前です。 一意である必要があります。

        一意性を確保するには、Guid または guid を持つプレフィックスを含むを強くお勧めします。 使用することができます`EventProcessorHost.createHostName("your-prefix")`;既定値:`js-host-${uuid()}`します。
    - id: iotHubConnectionString
      type:
      - string
      description: >-
        Iothub の場合、接続文字列。

        例:' エンドポイント = iot のホスト名です。SharedAccessKeyName = my、SA の名前。SharedAccessKey マイ SA のキーを ='
    - id: checkpointManager
      type:
      - '@azure/event-processor-host.CheckpointManager'
      description: チェックポイントを管理するマネージャー。
    - id: leaseManager
      type:
      - '@azure/event-processor-host.LeaseManager'
      description: リースを管理するマネージャー。
    - id: options
      type:
      - '@azure/event-processor-host.FromIotHubConnectionStringOptions'
      description: ''
      optional: true
    return:
      type:
      - Promise<@azure/event-processor-host.EventProcessorHost>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.EventProcessorHost.createFromTokenProvider'
  name: createFromTokenProvider(string, string, string, string, string, TokenProvider, FromTokenProviderOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: TokenProvider から EventProcessorHost インスタンスを作成します。
  syntax:
    content: 'static function createFromTokenProvider(hostName: string, storageConnectionString: string, storageContainerName: string, namespace: string, eventHubPath: string, tokenProvider: TokenProvider, options?: FromTokenProviderOptions)'
    parameters:
    - id: hostName
      type:
      - string
      description: >-
        プロセッサ ホストの名前です。 一意である必要があります。

        一意性を確保するには、Guid または guid を持つプレフィックスを含むを強くお勧めします。 使用することができます`EventProcessorHost.createHostName("your-prefix")`;既定値:`js-host-${uuid()}`します。
    - id: storageConnectionString
      type:
      - string
      description: リースと、チェックポイントに使用される Azure Storage アカウントへの接続文字列。 例 DefaultEndpointsProtocol = https;AccountName = < アカウント名 >;AccountKey = < アカウント キー >;EndpointSuffix=core.windows.net
    - id: storageContainerName
      type:
      - string
      description: 組み込みのリースとチェックポイント マネージャーで使用するための azure ストレージ コンテナー名。
    - id: namespace
      type:
      - string
      description: >-
        Event Hubs の完全修飾ドメイン名。

        例:"{your-sb-名前空間}. &#42;.servicebus.windows.net"
    - id: eventHubPath
      type:
      - string
      description: イベント ハブの名前。
    - id: tokenProvider
      type:
      - TokenProvider
      description: TokenProvider インターフェイスを実装する、トークン プロバイダー。
    - id: options
      type:
      - '@azure/event-processor-host.FromTokenProviderOptions'
      description: ''
      optional: true
    return:
      type:
      - '@azure/event-processor-host.EventProcessorHost'
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.EventProcessorHost.createFromTokenProviderWithCustomCheckpointAndLeaseManager'
  name: createFromTokenProviderWithCustomCheckpointAndLeaseManager(string, string, string, TokenProvider, CheckpointManager, LeaseManager, FromTokenProviderOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: 指定されたチェックポイント マネージャーおよびリース マネージャー TokenProvider から EventProcessorHost インスタンスを作成します。
  syntax:
    content: 'static function createFromTokenProviderWithCustomCheckpointAndLeaseManager(hostName: string, namespace: string, eventHubPath: string, tokenProvider: TokenProvider, checkpointManager: CheckpointManager, leaseManager: LeaseManager, options?: FromTokenProviderOptions)'
    parameters:
    - id: hostName
      type:
      - string
      description: >-
        プロセッサ ホストの名前です。 一意である必要があります。

        一意性を確保するには、Guid または guid を持つプレフィックスを含むを強くお勧めします。 使用することができます`EventProcessorHost.createHostName("your-prefix")`;既定値:`js-host-${uuid()}`します。
    - id: namespace
      type:
      - string
      description: >-
        Event Hubs の完全修飾ドメイン名。

        例:"{your-sb-名前空間}. &#42;.servicebus.windows.net"
    - id: eventHubPath
      type:
      - string
      description: イベント ハブの名前。
    - id: tokenProvider
      type:
      - TokenProvider
      description: TokenProvider インターフェイスを実装する、トークン プロバイダー。
    - id: checkpointManager
      type:
      - '@azure/event-processor-host.CheckpointManager'
      description: チェックポイントを管理するマネージャー。
    - id: leaseManager
      type:
      - '@azure/event-processor-host.LeaseManager'
      description: リースを管理するマネージャー。
    - id: options
      type:
      - '@azure/event-processor-host.FromTokenProviderOptions'
      description: ''
      optional: true
    return:
      type:
      - '@azure/event-processor-host.EventProcessorHost'
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.EventProcessorHost.createHostName'
  name: createHostName(undefined | string)
  children: []
  type: method
  langs:
  - typeScript
  summary: 一意のホスト名を生成するための便利なメソッド。
  syntax:
    content: 'static function createHostName(prefix?: undefined | string)'
    parameters:
    - id: prefix
      type:
      - undefined | string
      description: ''
      optional: true
    return:
      type:
      - string
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.EventProcessorHost.constructor'
  name: EventProcessorHost(string, EventProcessorHostOptions)
  children: []
  type: constructor
  langs:
  - typeScript
  summary: イベント ハブからイベントを処理する新しいホストを作成します。
  syntax:
    content: 'new EventProcessorHost(hostName: string, options?: EventProcessorHostOptions)'
    parameters:
    - id: hostName
      type:
      - string
      description: >-
        プロセッサ ホストの名前です。 一意である必要があります。

        一意性を確保するには、Guid または guid を持つプレフィックスを含むを強くお勧めします。 使用することができます`EventProcessorHost.createHostName("your-prefix")`;既定値:`js-host-${uuid()}`します。
    - id: options
      type:
      - '@azure/event-processor-host.EventProcessorHostOptions'
      description: ''
      optional: true
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.EventProcessorHost.getHubRuntimeInformation'
  name: getHubRuntimeInformation()
  children: []
  type: method
  langs:
  - typeScript
  summary: Eventhub のランタイム情報を提供します。
  syntax:
    content: function getHubRuntimeInformation()
    parameters: []
    return:
      type:
      - Promise<EventHubRuntimeInformation>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.EventProcessorHost.getPartitionIds'
  name: getPartitionIds()
  children: []
  type: method
  langs:
  - typeScript
  summary: PartitionIds の配列を提供します。
  syntax:
    content: function getPartitionIds()
    parameters: []
    return:
      type:
      - Promise<string[]>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.EventProcessorHost.getPartitionInformation'
  name: getPartitionInformation(string | number)
  children: []
  type: method
  langs:
  - typeScript
  summary: 指定したパーティションに関する情報を提供します。
  syntax:
    content: 'function getPartitionInformation(partitionId: string | number)'
    parameters:
    - id: partitionId
      type:
      - string | number
      description: >
        パーティション ID がパーティションの情報が必要です。
    return:
      type:
      - Promise<EventHubPartitionRuntimeInformation>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.EventProcessorHost.hostName'
  name: hostName
  fullName: hostName
  children: []
  langs:
  - typeScript
  type: property
  summary: イベント プロセッサ ホストのホスト名を提供します。
  syntax:
    content: 'hostName: string'
    return:
      type:
      - string
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.EventProcessorHost.receivingFromPartitions'
  name: receivingFromPartitions
  fullName: receivingFromPartitions
  children: []
  langs:
  - typeScript
  type: property
  summary: >
    メッセージが現在受信して、EPH パーティションの一覧を示します。

    EPH はすべて (構成されている) のリース更新秒後に発生する各スキャン中に複数のパーティションのリースを取得しようとします。 同時に実行されている、event hub 内の同じコンシューマー グループからメッセージを受信する複数の EPH インスタンスの数は、この EPH のインスタンスからのメッセージを受信積極的にパーティションの数にも影響します。
  syntax:
    content: 'receivingFromPartitions: string[]'
    return:
      type:
      - string[]
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.EventProcessorHost.start'
  name: start(OnReceivedMessage, OnReceivedError)
  children: []
  type: method
  langs:
  - typeScript
  summary: パーティションの一覧をフェッチしています、イベント プロセッサ ホストを開始し、成功した各リースのリースを取得しようとすると、blob から詳細を取得し、箇所から以前の時点で、受信側の開始。
  syntax:
    content: 'function start(onMessage: OnReceivedMessage, onError: OnReceivedError)'
    parameters:
    - id: onMessage
      type:
      - '@azure/event-processor-host.OnReceivedMessage'
      description: ''
    - id: onError
      type:
      - '@azure/event-processor-host.OnReceivedError'
      description: ''
    return:
      type:
      - Promise<void>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.EventProcessorHost.stop'
  name: stop()
  children: []
  type: method
  langs:
  - typeScript
  summary: メッセージの処理から EventProcessorHost を停止します。
  syntax:
    content: function stop()
    parameters: []
    return:
      type:
      - Promise<void>
  package: '@azure/event-processor-host'
references:
- uid: '@azure/event-processor-host.EventProcessorHostOptions'
  name: EventProcessorHostOptions
  spec.typeScript:
  - name: EventProcessorHostOptions
    fullName: EventProcessorHostOptions
    uid: '@azure/event-processor-host.EventProcessorHostOptions'
- uid: '@azure/event-processor-host.OnReceivedMessage'
  name: OnReceivedMessage
  spec.typeScript:
  - name: OnReceivedMessage
    fullName: OnReceivedMessage
    uid: '@azure/event-processor-host.OnReceivedMessage'
- uid: '@azure/event-processor-host.OnReceivedError'
  name: OnReceivedError
  spec.typeScript:
  - name: OnReceivedError
    fullName: OnReceivedError
    uid: '@azure/event-processor-host.OnReceivedError'
- uid: '@azure/event-processor-host.FromTokenProviderOptions'
  name: FromTokenProviderOptions
  spec.typeScript:
  - name: FromTokenProviderOptions
    fullName: FromTokenProviderOptions
    uid: '@azure/event-processor-host.FromTokenProviderOptions'
- uid: '@azure/event-processor-host.EventProcessorHost'
  name: EventProcessorHost
  spec.typeScript:
  - name: EventProcessorHost
    fullName: EventProcessorHost
    uid: '@azure/event-processor-host.EventProcessorHost'
- uid: '@azure/event-processor-host.CheckpointManager'
  name: CheckpointManager
  spec.typeScript:
  - name: CheckpointManager
    fullName: CheckpointManager
    uid: '@azure/event-processor-host.CheckpointManager'
- uid: '@azure/event-processor-host.LeaseManager'
  name: LeaseManager
  spec.typeScript:
  - name: LeaseManager
    fullName: LeaseManager
    uid: '@azure/event-processor-host.LeaseManager'
- uid: '@azure/event-processor-host.FromConnectionStringOptions'
  name: FromConnectionStringOptions
  spec.typeScript:
  - name: FromConnectionStringOptions
    fullName: FromConnectionStringOptions
    uid: '@azure/event-processor-host.FromConnectionStringOptions'
- uid: '@azure/event-processor-host.FromIotHubConnectionStringOptions'
  name: FromIotHubConnectionStringOptions
  spec.typeScript:
  - name: FromIotHubConnectionStringOptions
    fullName: FromIotHubConnectionStringOptions
    uid: '@azure/event-processor-host.FromIotHubConnectionStringOptions'
- uid: Promise<@azure/event-processor-host.EventProcessorHost>
  name: EventProcessorHost>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: EventProcessorHost
    fullName: EventProcessorHost
    uid: '@azure/event-processor-host.EventProcessorHost'
  - name: '>'
    fullName: '>'
