### YamlMime:UniversalReference
items:
  - uid: '@azure/servicefabric.ChaosParameters'
    name: ChaosParameters
    fullName: ChaosParameters
    children:
      - '@azure/servicefabric.ChaosParameters.chaosTargetFilter'
      - '@azure/servicefabric.ChaosParameters.clusterHealthPolicy'
      - '@azure/servicefabric.ChaosParameters.context'
      - '@azure/servicefabric.ChaosParameters.enableMoveReplicaFaults'
      - '@azure/servicefabric.ChaosParameters.maxClusterStabilizationTimeoutInSeconds'
      - '@azure/servicefabric.ChaosParameters.maxConcurrentFaults'
      - '@azure/servicefabric.ChaosParameters.timeToRunInSeconds'
      - '@azure/servicefabric.ChaosParameters.waitTimeBetweenFaultsInSeconds'
      - '@azure/servicefabric.ChaosParameters.waitTimeBetweenIterationsInSeconds'
    langs:
      - typeScript
    type: interface
    summary: 混乱の実行を構成するすべてのパラメーターを定義します。
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ChaosParameters.chaosTargetFilter'
    name: chaosTargetFilter
    fullName: chaosTargetFilter
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      対象混乱による障害のクラスター エンティティの一覧です。
      このフィルターを使用して、混乱による障害のターゲットを特定のノードの種類またはアプリケーション インスタンスに限定することができます。 ChaosTargetFilter が使用されない場合、混乱による障害のターゲットはすべてのクラスターのエンティティになります。
      ChaosTargetFilter が使用された場合、ChaosTargetFilter の指定に合致するエンティティのみに、混乱による障害が発生します。
    optional: true
    syntax:
      content: 'chaosTargetFilter?: ChaosTargetFilter'
      return:
        type:
          - '@azure/servicefabric.ChaosTargetFilter'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ChaosParameters.clusterHealthPolicy'
    name: clusterHealthPolicy
    fullName: clusterHealthPolicy
    children: []
    langs:
      - typeScript
    type: property
    summary: 渡されたクラスターの正常性ポリシーは、混乱の反復の間にクラスターの正常性の検証に使用されます。 -障害の実行中に予期しない例外が発生した場合またはクラスターの正常性がエラーの場合--の回収するまでに時間をクラスターを提供するでは混乱は、次の正常性チェックの前に 30 分間待機します。
    optional: true
    syntax:
      content: 'clusterHealthPolicy?: ClusterHealthPolicy'
      return:
        type:
          - '@azure/servicefabric.ClusterHealthPolicy'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ChaosParameters.context'
    name: context
    fullName: context
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      (文字列, 文字列) のコレクションである、マップをについて説明します。 キー/値ペアを入力します。 マップを使用して、混乱の実行に関する情報を記録できます。 このようなペアが 100 を超えることはできませんし、各文字列 (キーまたは値) の最大は 4095 文字です。
      このマップは、オプションで特定の実行に関するコンテキストを格納するために、混乱実行を開始するユーザーによって設定されます。
    optional: true
    syntax:
      content: 'context?: ChaosContext'
      return:
        type:
          - '@azure/servicefabric.ChaosContext'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ChaosParameters.enableMoveReplicaFaults'
    name: enableMoveReplicaFaults
    fullName: enableMoveReplicaFaults
    children: []
    langs:
      - typeScript
    type: property
    summary: 'により、またはプライマリの移動を無効にし、move secondary の障害。 既定値: true。'
    optional: true
    syntax:
      content: 'enableMoveReplicaFaults?: undefined | false | true'
      return:
        type:
          - undefined | false | true
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ChaosParameters.maxClusterStabilizationTimeoutInSeconds'
    name: maxClusterStabilizationTimeoutInSeconds
    fullName: maxClusterStabilizationTimeoutInSeconds
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      すべてのクラスター エンティティが安定し正常な状態になるまで待機する最長時間。
      Chaos は、繰り返して実行し、各繰り返しの開始時にクラスターのエンティティの正常性を検証します。
      検証中に、クラスターのエンティティが MaxClusterStabilizationTimeoutInSeconds の時間内に安定して正常にならない場合、Chaos は検証失敗イベントを生成します。 ［既定値］:60.
    optional: true
    syntax:
      content: 'maxClusterStabilizationTimeoutInSeconds?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ChaosParameters.maxConcurrentFaults'
    name: maxConcurrentFaults
    fullName: maxConcurrentFaults
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      MaxConcurrentFaults は、イテレーションごとに誘発される同時実行の障害の最大数です。
      Chaos は繰り返して実行し、2 つの連続する繰り返しは検証フェーズで区切られます。
      同時実行性が高いほどより積極的な障害、バグの検出をさらに複雑な一連の状態を誘導する先頭の挿入します。
      2 または 3 の値で始めて、注意しながら値を増やすことをお勧めします。
      ［既定値］:1.
    optional: true
    syntax:
      content: 'maxConcurrentFaults?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ChaosParameters.timeToRunInSeconds'
    name: timeToRunInSeconds
    fullName: timeToRunInSeconds
    children: []
    langs:
      - typeScript
    type: property
    summary: '自動停止するまでに Chaos が実行される合計時間 (秒)。 最大許容値は、4,294,967,295 (System.UInt32.MaxValue) です。 ［既定値］:''4294967295''.'
    optional: true
    syntax:
      content: 'timeToRunInSeconds?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ChaosParameters.waitTimeBetweenFaultsInSeconds'
    name: waitTimeBetweenFaultsInSeconds
    fullName: waitTimeBetweenFaultsInSeconds
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      1 つのイテレーション内で連続する障害の間の時間 (秒単位)。
      値が大きいほど、障害間のオーバーラップは少なくなり、クラスターの状態遷移のシーケンスは単純になります。
      1 ～ 5 の値で始めて、注意しながら値を増やすことをお勧めします。 ［既定値］:20.
    optional: true
    syntax:
      content: 'waitTimeBetweenFaultsInSeconds?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ChaosParameters.waitTimeBetweenIterationsInSeconds'
    name: waitTimeBetweenIterationsInSeconds
    fullName: waitTimeBetweenIterationsInSeconds
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Chaos の 2 つの連続するイテレーション間の時間区切り (秒単位)。
      値が大きいほど、障害挿入率は低くなります。 ［既定値］:30.
    optional: true
    syntax:
      content: 'waitTimeBetweenIterationsInSeconds?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/servicefabric'
references:
  - uid: '@azure/servicefabric.ChaosTargetFilter'
    name: ChaosTargetFilter
    spec.typeScript:
      - name: ChaosTargetFilter
        fullName: ChaosTargetFilter
        uid: '@azure/servicefabric.ChaosTargetFilter'
  - uid: '@azure/servicefabric.ClusterHealthPolicy'
    name: ClusterHealthPolicy
    spec.typeScript:
      - name: ClusterHealthPolicy
        fullName: ClusterHealthPolicy
        uid: '@azure/servicefabric.ClusterHealthPolicy'
  - uid: '@azure/servicefabric.ChaosContext'
    name: ChaosContext
    spec.typeScript:
      - name: ChaosContext
        fullName: ChaosContext
        uid: '@azure/servicefabric.ChaosContext'