### YamlMime:UniversalReference
items:
  - uid: '@azure/servicefabric.ChaosTargetFilter'
    name: ChaosTargetFilter
    fullName: ChaosTargetFilter
    children:
      - '@azure/servicefabric.ChaosTargetFilter.applicationInclusionList'
      - '@azure/servicefabric.ChaosTargetFilter.nodeTypeInclusionList'
    langs:
      - typeScript
    type: interface
    summary: |-
      <span data-ttu-id="73307-101">対象となる Chaos 障害などの特定のノード タイプの障害発生や、特定のアプリケーションの障害発生のすべてのフィルターを定義します。</span><span class="sxs-lookup"><span data-stu-id="73307-101">Defines all filters for targeted Chaos faults, for example, faulting only certain node types or faulting only certain applications.</span></span>
      <span data-ttu-id="73307-102">ChaosTargetFilter が使用されない場合、混乱による障害のターゲットはすべてのクラスターのエンティティになります。</span><span class="sxs-lookup"><span data-stu-id="73307-102">If ChaosTargetFilter is not used, Chaos faults all cluster entities.</span></span> <span data-ttu-id="73307-103">ChaosTargetFilter が使用された場合、ChaosTargetFilter の指定に合致するエンティティのみに、混乱による障害が発生します。</span><span class="sxs-lookup"><span data-stu-id="73307-103">If ChaosTargetFilter is used, Chaos faults only the entities that meet the ChaosTargetFilter specification.</span></span> <span data-ttu-id="73307-104">NodeTypeInclusionList と ApplicationInclusionList では、和集合セマンティクスのみが可能です。</span><span class="sxs-lookup"><span data-stu-id="73307-104">NodeTypeInclusionList and ApplicationInclusionList allow a union semantics only.</span></span>
      <span data-ttu-id="73307-105">NodeTypeInclusionList と ApplicationInclusionList の積集合を指定することはできません。</span><span class="sxs-lookup"><span data-stu-id="73307-105">It is not possible to specify an intersection of NodeTypeInclusionList and ApplicationInclusionList.</span></span> <span data-ttu-id="73307-106">たとえば、"アプリケーションが特定のノードの種類上にある場合のみ障害を発生させる" と指定することはできません。</span><span class="sxs-lookup"><span data-stu-id="73307-106">For example, it is not possible to specify "fault this application only when it is on that node type."</span></span>
      <span data-ttu-id="73307-107">エンティティが NodeTypeInclusionList または ApplicationInclusionList のどちらかに含まれている時点で、ChaosTargetFilter を使用してエンティティを除外することはできません。</span><span class="sxs-lookup"><span data-stu-id="73307-107">Once an entity is included in either NodeTypeInclusionList or ApplicationInclusionList, that entity cannot be excluded using ChaosTargetFilter.</span></span> <span data-ttu-id="73307-108">applicationX が ApplicationInclusionList に含まれていない場合でも、そのアプリケーションが NodeTypeInclusionList に含まれている nodeTypeY のノード上にあるという理由で、何らかの混乱の反復処理中にそのアプリケーションで障害が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="73307-108">Even if applicationX does not appear in ApplicationInclusionList, in some Chaos iteration applicationX can be faulted because it happens to be on a node of nodeTypeY that is included in NodeTypeInclusionList.</span></span> <span data-ttu-id="73307-109">NodeTypeInclusionList と ApplicationInclusionList の両方が null または空の場合は、ArgumentException がスローされます。</span><span class="sxs-lookup"><span data-stu-id="73307-109">If both NodeTypeInclusionList and ApplicationInclusionList are null or empty, an ArgumentException is thrown.</span></span>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ChaosTargetFilter.applicationInclusionList'
    name: applicationInclusionList
    fullName: applicationInclusionList
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      <span data-ttu-id="73307-110">混乱による障害のターゲットとなるアプリケーションの URI の一覧。</span><span class="sxs-lookup"><span data-stu-id="73307-110">A list of application URIs to include in Chaos faults.</span></span>
      <span data-ttu-id="73307-111">指定されたアプリケーションのサービスに属すすべてのレプリカは、混乱によって誘発されるレプリカ障害 (レプリカの再起動、レプリカの削除、プライマリの移動、およびセカンダリの移動) を受け入れます。</span><span class="sxs-lookup"><span data-stu-id="73307-111">All replicas belonging to services of these applications are amenable to replica faults (restart replica, remove replica, move primary, and move secondary) by Chaos.</span></span>
      <span data-ttu-id="73307-112">コード パッケージがこれらのアプリケーションのレプリカをホストしている場合のみ、混乱は、コード パッケージを再起動できます。</span><span class="sxs-lookup"><span data-stu-id="73307-112">Chaos may restart a code package only if the code package hosts replicas of these applications only.</span></span>
      <span data-ttu-id="73307-113">アプリケーションがこの一覧に含まれていない場合でも、NodeTypeInclusionList に含まれるノードの種類のノード上にアプリケーションが存在する場合は、混乱の反復処理によって障害が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="73307-113">If an application does not appear in this list, it can still be faulted in some Chaos iteration if the application ends up on a node of a node type that is included in NodeTypeInclusionList.</span></span>
      <span data-ttu-id="73307-114">ただし、applicationX に関連付けられている場合に、applicationX 配置の制約によって nodeTypeY が存在しないから ApplicationInclusionList になく、nodeTypeY が存在しない NodeTypeInclusionList から、applicationX 決しては失敗します。</span><span class="sxs-lookup"><span data-stu-id="73307-114">However, if applicationX is tied to nodeTypeY through placement constraints and applicationX is absent from ApplicationInclusionList and nodeTypeY is absent from NodeTypeInclusionList, then applicationX will never be faulted.</span></span>
      <span data-ttu-id="73307-115">この一覧には最大 1,000 個のアプリケーションの名前を含めることができ、この数を増やすには、MaxNumberOfApplicationsInChaosEntityFilter 構成をアップグレードする必要があります。</span><span class="sxs-lookup"><span data-stu-id="73307-115">At most 1000 application names can be included in this list, to increase this number, a config upgrade is required for MaxNumberOfApplicationsInChaosEntityFilter configuration.</span></span>
    optional: true
    syntax:
      content: 'applicationInclusionList?: string[]'
      return:
        type:
          - 'string[]'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ChaosTargetFilter.nodeTypeInclusionList'
    name: nodeTypeInclusionList
    fullName: nodeTypeInclusionList
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      <span data-ttu-id="73307-116">混乱による障害のターゲットとなるノードの種類の一覧。</span><span class="sxs-lookup"><span data-stu-id="73307-116">A list of node types to include in Chaos faults.</span></span>
      <span data-ttu-id="73307-117">すべての種類の障害 (ノードの再起動、コード パッケージの再起動、レプリカの削除、レプリカの再起動、プライマリの移動、およびセカンダリの移動) は、指定されたノードの種類のノードで有効になります。</span><span class="sxs-lookup"><span data-stu-id="73307-117">All types of faults (restart node, restart code package, remove replica, restart replica, move primary, and move secondary) are enabled for the nodes of these node types.</span></span>
      <span data-ttu-id="73307-118">ノードの種類 (たとえば NodeTypeX) がない、NodeTypeInclusionList し、NodeTypeX のノードに対してノード レベルの障害 (ノードの再起動など) を有効にすることはありませんでアプリケーションの場合、コード パッケージ障害とレプリカ障害を含まれて有効まだことができる場合、ApplicationInclusionList です。</span><span class="sxs-lookup"><span data-stu-id="73307-118">If a node type (say NodeTypeX) does not appear in the NodeTypeInclusionList, then node level faults (like NodeRestart) will never be enabled for the nodes of NodeTypeX, but code package and replica faults can still be enabled for NodeTypeX if an application in the ApplicationInclusionList.</span></span>
      <span data-ttu-id="73307-119">NodeTypeX のノード上に存在する場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="73307-119">happens to reside on a node of NodeTypeX.</span></span>
      <span data-ttu-id="73307-120">この一覧には最大 100 種のノードの種類を含めることができ、この数を増やすには、MaxNumberOfNodeTypesInChaosEntityFilter 構成をアップグレードする必要があります。</span><span class="sxs-lookup"><span data-stu-id="73307-120">At most 100 node type names can be included in this list, to increase this number, a config upgrade is required for MaxNumberOfNodeTypesInChaosEntityFilter configuration.</span></span>
    optional: true
    syntax:
      content: 'nodeTypeInclusionList?: string[]'
      return:
        type:
          - 'string[]'
    package: '@azure/servicefabric'