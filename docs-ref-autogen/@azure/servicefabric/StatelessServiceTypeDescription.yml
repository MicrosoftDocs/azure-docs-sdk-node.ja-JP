### YamlMime:UniversalReference
items:
  - uid: '@azure/servicefabric.StatelessServiceTypeDescription'
    name: StatelessServiceTypeDescription
    fullName: StatelessServiceTypeDescription
    children:
      - '@azure/servicefabric.StatelessServiceTypeDescription.extensions'
      - '@azure/servicefabric.StatelessServiceTypeDescription.isStateful'
      - '@azure/servicefabric.StatelessServiceTypeDescription.kind'
      - '@azure/servicefabric.StatelessServiceTypeDescription.loadMetrics'
      - '@azure/servicefabric.StatelessServiceTypeDescription.placementConstraints'
      - '@azure/servicefabric.StatelessServiceTypeDescription.servicePlacementPolicies'
      - '@azure/servicefabric.StatelessServiceTypeDescription.serviceTypeName'
      - '@azure/servicefabric.StatelessServiceTypeDescription.useImplicitHost'
    langs:
      - typeScript
    type: interface
    summary: <span data-ttu-id="b29e4-101">プロビジョニング済みのアプリケーションの種類のサービス マニフェストで定義されているステートレス サービスの種類について説明します。</span><span class="sxs-lookup"><span data-stu-id="b29e4-101">Describes a stateless service type defined in the service manifest of a provisioned application type.</span></span>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceTypeDescription.extensions'
    name: extensions
    fullName: extensions
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="b29e4-102">サービスの種類の拡張機能の一覧です。</span><span class="sxs-lookup"><span data-stu-id="b29e4-102">List of service type extensions.</span></span>
    optional: true
    syntax:
      content: 'extensions?: ServiceTypeExtensionDescription[]'
      return:
        type:
          - '@azure/servicefabric.ServiceTypeExtensionDescription[]'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceTypeDescription.isStateful'
    name: isStateful
    fullName: isStateful
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      <span data-ttu-id="b29e4-103">サービスの種類がステートフル サービスの種類またはステートレス サービスの種類であるかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="b29e4-103">Indicates whether the service type is a stateful service type or a stateless service type.</span></span>
      <span data-ttu-id="b29e4-104">このプロパティは、サービスの種類は、false、ステートフル サービスの種類をそれ以外の場合は true です。</span><span class="sxs-lookup"><span data-stu-id="b29e4-104">This property is true if the service type is a stateful service type, false otherwise.</span></span>
    optional: true
    syntax:
      content: 'isStateful?: undefined | false | true'
      return:
        type:
          - undefined | false | true
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceTypeDescription.kind'
    name: kind
    fullName: kind
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="b29e4-105">ポリモーフィックな識別子</span><span class="sxs-lookup"><span data-stu-id="b29e4-105">Polymorphic Discriminator</span></span>
    syntax:
      content: 'kind: "Stateless"'
      return:
        type:
          - '"Stateless"'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceTypeDescription.loadMetrics'
    name: loadMetrics
    fullName: loadMetrics
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="b29e4-106">サービスの負荷メトリックは、ServiceLoadMetricDescription オブジェクトの配列として指定されます。</span><span class="sxs-lookup"><span data-stu-id="b29e4-106">The service load metrics is given as an array of ServiceLoadMetricDescription objects.</span></span>
    optional: true
    syntax:
      content: 'loadMetrics?: ServiceLoadMetricDescription[]'
      return:
        type:
          - '@azure/servicefabric.ServiceLoadMetricDescription[]'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceTypeDescription.placementConstraints'
    name: placementConstraints
    fullName: placementConstraints
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="b29e4-107">Service Fabric クラスターでは、このサービスをインスタンス化するときに使用される配置の制約。</span><span class="sxs-lookup"><span data-stu-id="b29e4-107">The placement constraint to be used when instantiating this service in a Service Fabric cluster.</span></span>
    optional: true
    syntax:
      content: 'placementConstraints?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceTypeDescription.servicePlacementPolicies'
    name: servicePlacementPolicies
    fullName: servicePlacementPolicies
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="b29e4-108">サービス配置ポリシーの説明の一覧です。</span><span class="sxs-lookup"><span data-stu-id="b29e4-108">List of service placement policy descriptions.</span></span>
    optional: true
    syntax:
      content: 'servicePlacementPolicies?: ServicePlacementPolicyDescriptionUnion[]'
      return:
        type:
          - '@azure/servicefabric.ServicePlacementPolicyDescriptionUnion[]'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceTypeDescription.serviceTypeName'
    name: serviceTypeName
    fullName: serviceTypeName
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="b29e4-109">サービス マニフェストで指定されているサービスの種類の名前です。</span><span class="sxs-lookup"><span data-stu-id="b29e4-109">Name of the service type as specified in the service manifest.</span></span>
    optional: true
    syntax:
      content: 'serviceTypeName?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceTypeDescription.useImplicitHost'
    name: useImplicitHost
    fullName: useImplicitHost
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="b29e4-110">示すフラグこの型が実装およびサービスのユーザー プロセスによってホストされている場合は暗黙的に作成されたシステム プロセスをホストします。</span><span class="sxs-lookup"><span data-stu-id="b29e4-110">A flag indicating if this type is not implemented and hosted by a user service process, but is implicitly hosted by a system created process.</span></span> <span data-ttu-id="b29e4-111">この値は、ゲスト実行可能サービスをそれ以外の場合で false を使用してサービスの場合は true です。</span><span class="sxs-lookup"><span data-stu-id="b29e4-111">This value is true for services using the guest executable services, false otherwise.</span></span>'
    optional: true
    syntax:
      content: 'useImplicitHost?: undefined | false | true'
      return:
        type:
          - undefined | false | true
    package: '@azure/servicefabric'
references:
  - uid: '@azure/servicefabric.ServiceTypeExtensionDescription[]'
    name: 'ServiceTypeExtensionDescription[]'
    spec.typeScript:
      - name: ServiceTypeExtensionDescription
        fullName: ServiceTypeExtensionDescription
        uid: '@azure/servicefabric.ServiceTypeExtensionDescription'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/servicefabric.ServiceLoadMetricDescription[]'
    name: 'ServiceLoadMetricDescription[]'
    spec.typeScript:
      - name: ServiceLoadMetricDescription
        fullName: ServiceLoadMetricDescription
        uid: '@azure/servicefabric.ServiceLoadMetricDescription'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/servicefabric.ServicePlacementPolicyDescriptionUnion[]'
    name: 'ServicePlacementPolicyDescriptionUnion[]'
    spec.typeScript:
      - name: ServicePlacementPolicyDescriptionUnion
        fullName: ServicePlacementPolicyDescriptionUnion
        uid: '@azure/servicefabric.ServicePlacementPolicyDescriptionUnion'
      - name: '[]'
        fullName: '[]'