### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-batchai.FileServerListResult'
    name: FileServerListResult
    fullName: FileServerListResult
    children:
      - '@azure/arm-batchai.FileServerListResult.Array'
      - '@azure/arm-batchai.FileServerListResult.concat'
      - '@azure/arm-batchai.FileServerListResult.concat_1'
      - '@azure/arm-batchai.FileServerListResult.copyWithin'
      - '@azure/arm-batchai.FileServerListResult.entries'
      - '@azure/arm-batchai.FileServerListResult.every'
      - '@azure/arm-batchai.FileServerListResult.fill'
      - '@azure/arm-batchai.FileServerListResult.filter_1'
      - '@azure/arm-batchai.FileServerListResult.filter'
      - '@azure/arm-batchai.FileServerListResult.find'
      - '@azure/arm-batchai.FileServerListResult.find_1'
      - '@azure/arm-batchai.FileServerListResult.findIndex'
      - '@azure/arm-batchai.FileServerListResult.forEach'
      - '@azure/arm-batchai.FileServerListResult.indexOf'
      - '@azure/arm-batchai.FileServerListResult.join'
      - '@azure/arm-batchai.FileServerListResult.keys'
      - '@azure/arm-batchai.FileServerListResult.lastIndexOf'
      - '@azure/arm-batchai.FileServerListResult.length'
      - '@azure/arm-batchai.FileServerListResult.map'
      - '@azure/arm-batchai.FileServerListResult.nextLink'
      - '@azure/arm-batchai.FileServerListResult.pop'
      - '@azure/arm-batchai.FileServerListResult.push'
      - '@azure/arm-batchai.FileServerListResult.reduce'
      - '@azure/arm-batchai.FileServerListResult.reduce_1'
      - '@azure/arm-batchai.FileServerListResult.reduce_2'
      - '@azure/arm-batchai.FileServerListResult.reduceRight'
      - '@azure/arm-batchai.FileServerListResult.reduceRight_1'
      - '@azure/arm-batchai.FileServerListResult.reduceRight_2'
      - '@azure/arm-batchai.FileServerListResult.reverse'
      - '@azure/arm-batchai.FileServerListResult.shift'
      - '@azure/arm-batchai.FileServerListResult.slice'
      - '@azure/arm-batchai.FileServerListResult.some'
      - '@azure/arm-batchai.FileServerListResult.sort'
      - '@azure/arm-batchai.FileServerListResult.splice_1'
      - '@azure/arm-batchai.FileServerListResult.splice'
      - '@azure/arm-batchai.FileServerListResult.toLocaleString'
      - '@azure/arm-batchai.FileServerListResult.toString'
      - '@azure/arm-batchai.FileServerListResult.unshift'
      - '@azure/arm-batchai.FileServerListResult.values'
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: Array<@azure/arm-batchai.FileServer>
    package: '@azure/arm-batchai'
  - uid: '@azure/arm-batchai.FileServerListResult.Array'
    name: Array
    fullName: Array
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Array: ArrayConstructor'
      return:
        type:
          - ArrayConstructor
    package: '@azure/arm-batchai'
  - uid: '@azure/arm-batchai.FileServerListResult.concat'
    name: 'concat(ConcatArray<FileServer>[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="dc532-101">2 つ以上の配列を結合します。</span><span class="sxs-lookup"><span data-stu-id="dc532-101">Combines two or more arrays.</span></span>
    syntax:
      content: 'function concat(items: ConcatArray<FileServer>[])'
      parameters:
        - id: items
          type:
            - 'ConcatArray<@azure/arm-batchai.FileServer>[]'
          description: |
            <span data-ttu-id="dc532-102">配列 1 の末尾に追加する項目。</span><span class="sxs-lookup"><span data-stu-id="dc532-102">Additional items to add to the end of array1.</span></span>
      return:
        type:
          - '@azure/arm-batchai.FileServer[]'
    package: '@azure/arm-batchai'
  - uid: '@azure/arm-batchai.FileServerListResult.concat_1'
    name: 'concat(T | ConcatArray<T>[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="dc532-103">2 つ以上の配列を結合します。</span><span class="sxs-lookup"><span data-stu-id="dc532-103">Combines two or more arrays.</span></span>
    syntax:
      content: 'function concat(items: T | ConcatArray<T>[])'
      parameters:
        - id: items
          type:
            - 'T | ConcatArray<T>[]'
          description: |
            <span data-ttu-id="dc532-104">配列 1 の末尾に追加する項目。</span><span class="sxs-lookup"><span data-stu-id="dc532-104">Additional items to add to the end of array1.</span></span>
      return:
        type:
          - '@azure/arm-batchai.FileServer[]'
    package: '@azure/arm-batchai'
  - uid: '@azure/arm-batchai.FileServerListResult.copyWithin'
    name: 'copyWithin(number, number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="dc532-105">識別される配列のセクションをコピーした後、このオブジェクトを返しますが開始し、終了位置のターゲットで始まる同じ配列を</span><span class="sxs-lookup"><span data-stu-id="dc532-105">Returns the this object after copying a section of the array identified by start and end to the same array starting at position target</span></span>
    syntax:
      content: 'function copyWithin(target: number, start: number, end?: undefined | number)'
      parameters:
        - id: target
          type:
            - number
          description: '<span data-ttu-id="dc532-106">ターゲットが負の場合は、長さを加えた長さが、配列の長さのターゲットとして扱われます。</span><span class="sxs-lookup"><span data-stu-id="dc532-106">If target is negative, it is treated as length+target where length is the length of the array.</span></span>'
        - id: start
          type:
            - number
          description: '<span data-ttu-id="dc532-107">開始が負の場合は、長さ + スタートとして扱われます。</span><span class="sxs-lookup"><span data-stu-id="dc532-107">If start is negative, it is treated as length+start.</span></span> <span data-ttu-id="dc532-108">End が負の場合は、長さ + 終了として扱われます。</span><span class="sxs-lookup"><span data-stu-id="dc532-108">If end is negative, it is treated as length+end.</span></span>'
        - id: end
          type:
            - undefined | number
          description: |
            <span data-ttu-id="dc532-109">この長さを指定しない場合は、オブジェクトの既定値として使用されます。</span><span class="sxs-lookup"><span data-stu-id="dc532-109">If not specified, length of the this object is used as its default value.</span></span>
          optional: true
      return:
        type:
          - this
    package: '@azure/arm-batchai'
  - uid: '@azure/arm-batchai.FileServerListResult.entries'
    name: entries()
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="dc532-110">可能なすべてのエントリのキーと値のペアの配列を返します</span><span class="sxs-lookup"><span data-stu-id="dc532-110">Returns an iterable of key, value pairs for every entry in the array</span></span>'
    syntax:
      content: function entries()
      parameters: []
      return:
        type:
          - IterableIterator<Object>
    package: '@azure/arm-batchai'
  - uid: '@azure/arm-batchai.FileServerListResult.every'
    name: 'every((value: FileServer, index: number, array: FileServer[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="dc532-111">配列のすべてのメンバーが指定されたテストを満たすかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="dc532-111">Determines whether all the members of an array satisfy the specified test.</span></span>
    syntax:
      content: 'function every(callbackfn: (value: FileServer, index: number, array: FileServer[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: FileServer, index: number, array: FileServer[]) => boolean'
          description: '<span data-ttu-id="dc532-112">最大 3 つの引数を受け取る関数。</span><span class="sxs-lookup"><span data-stu-id="dc532-112">A function that accepts up to three arguments.</span></span> <span data-ttu-id="dc532-113">各メソッドは、配列の末尾まで、または、callbackfn が false を返すまで配列 1 の各要素に対して callbackfn 関数を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="dc532-113">The every method calls the callbackfn function for each element in array1 until the callbackfn returns false, or until the end of the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="dc532-114">オブジェクトをこのキーワードは callbackfn 関数で参照できます。</span><span class="sxs-lookup"><span data-stu-id="dc532-114">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="dc532-115">ThisArg を省略すると、次のように定義されていないこのとして提供される値。</span><span class="sxs-lookup"><span data-stu-id="dc532-115">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - boolean
    package: '@azure/arm-batchai'
  - uid: '@azure/arm-batchai.FileServerListResult.fill'
    name: 'fill(FileServer, undefined | number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="dc532-116">識別されるセクションのデータを読み込んだ後、このオブジェクトを返します。 開始日と終了値を持つ</span><span class="sxs-lookup"><span data-stu-id="dc532-116">Returns the this object after filling the section identified by start and end with value</span></span>
    syntax:
      content: 'function fill(value: FileServer, start?: undefined | number, end?: undefined | number)'
      parameters:
        - id: value
          type:
            - '@azure/arm-batchai.FileServer'
          description: <span data-ttu-id="dc532-117">配列のセクションを入力する値</span><span class="sxs-lookup"><span data-stu-id="dc532-117">value to fill array section with</span></span>
        - id: start
          type:
            - undefined | number
          description: '<span data-ttu-id="dc532-118">配列の入力を開始するインデックス。</span><span class="sxs-lookup"><span data-stu-id="dc532-118">index to start filling the array at.</span></span> <span data-ttu-id="dc532-119">開始が負の場合は、長さ + 開始 length は、配列の長さとして扱われます。</span><span class="sxs-lookup"><span data-stu-id="dc532-119">If start is negative, it is treated as length+start where length is the length of the array.</span></span>'
          optional: true
        - id: end
          type:
            - undefined | number
          description: |
            <span data-ttu-id="dc532-120">配列の入力を停止するインデックス。</span><span class="sxs-lookup"><span data-stu-id="dc532-120">index to stop filling the array at.</span></span> <span data-ttu-id="dc532-121">End が負の場合は、長さ + 終了として扱われます。</span><span class="sxs-lookup"><span data-stu-id="dc532-121">If end is negative, it is treated as length+end.</span></span>
          optional: true
      return:
        type:
          - this
    package: '@azure/arm-batchai'
  - uid: '@azure/arm-batchai.FileServerListResult.filter_1'
    name: 'filter((value: FileServer, index: number, array: FileServer[]) => any, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="dc532-122">コールバック関数で指定された条件を満たす、配列の要素を返します。</span><span class="sxs-lookup"><span data-stu-id="dc532-122">Returns the elements of an array that meet the condition specified in a callback function.</span></span>
    syntax:
      content: 'function filter(callbackfn: (value: FileServer, index: number, array: FileServer[]) => any, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: FileServer, index: number, array: FileServer[]) => any'
          description: <span data-ttu-id="dc532-123">最大 3 つの引数を受け取る関数。</span><span class="sxs-lookup"><span data-stu-id="dc532-123">A function that accepts up to three arguments.</span></span> <span data-ttu-id="dc532-124">フィルター メソッドは、配列内の各要素に対して 1 回の callbackfn 関数を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="dc532-124">The filter method calls the callbackfn function one time for each element in the array.</span></span>
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="dc532-125">オブジェクトをこのキーワードは callbackfn 関数で参照できます。</span><span class="sxs-lookup"><span data-stu-id="dc532-125">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="dc532-126">ThisArg を省略すると、次のように定義されていないこのとして提供される値。</span><span class="sxs-lookup"><span data-stu-id="dc532-126">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - '@azure/arm-batchai.FileServer[]'
    package: '@azure/arm-batchai'
  - uid: '@azure/arm-batchai.FileServerListResult.filter'
    name: 'filter((value: FileServer, index: number, array: FileServer[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="dc532-127">コールバック関数で指定された条件を満たす、配列の要素を返します。</span><span class="sxs-lookup"><span data-stu-id="dc532-127">Returns the elements of an array that meet the condition specified in a callback function.</span></span>
    syntax:
      content: 'function filter<S>(callbackfn: (value: FileServer, index: number, array: FileServer[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: FileServer, index: number, array: FileServer[]) => boolean'
          description: <span data-ttu-id="dc532-128">最大 3 つの引数を受け取る関数。</span><span class="sxs-lookup"><span data-stu-id="dc532-128">A function that accepts up to three arguments.</span></span> <span data-ttu-id="dc532-129">フィルター メソッドは、配列内の各要素に対して 1 回の callbackfn 関数を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="dc532-129">The filter method calls the callbackfn function one time for each element in the array.</span></span>
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="dc532-130">オブジェクトをこのキーワードは callbackfn 関数で参照できます。</span><span class="sxs-lookup"><span data-stu-id="dc532-130">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="dc532-131">ThisArg を省略すると、次のように定義されていないこのとして提供される値。</span><span class="sxs-lookup"><span data-stu-id="dc532-131">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - 'S[]'
    package: '@azure/arm-batchai'
  - uid: '@azure/arm-batchai.FileServerListResult.find'
    name: 'find((this: void, value: FileServer, index: number, obj: FileServer[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="dc532-132">述語が true の場合、および未定義それ以外の場合、配列内の最初の要素の値を返します。</span><span class="sxs-lookup"><span data-stu-id="dc532-132">Returns the value of the first element in the array where predicate is true, and undefined otherwise.</span></span>'
    syntax:
      content: 'function find<S>(predicate: (this: void, value: FileServer, index: number, obj: FileServer[]) => boolean, thisArg?: any)'
      parameters:
        - id: predicate
          type:
            - '(this: void, value: FileServer, index: number, obj: FileServer[]) => boolean'
          description: '<span data-ttu-id="dc532-133">いずれかの述語が true を返すが見つかるまで順を昇順で、配列の各要素の 1 回の呼び出しの述語を検索します。</span><span class="sxs-lookup"><span data-stu-id="dc532-133">find calls predicate once for each element of the array, in ascending order, until it finds one where predicate returns true.</span></span> <span data-ttu-id="dc532-134">このような要素が見つかると、検索はすぐにその要素の値を返します。</span><span class="sxs-lookup"><span data-stu-id="dc532-134">If such an element is found, find immediately returns that element value.</span></span> <span data-ttu-id="dc532-135">それ以外の場合、検索は undefined を返します。</span><span class="sxs-lookup"><span data-stu-id="dc532-135">Otherwise, find returns undefined.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="dc532-136">これは、このとして使用する指定した場合、述語の呼び出しごとの値。</span><span class="sxs-lookup"><span data-stu-id="dc532-136">If provided, it will be used as the this value for each invocation of predicate.</span></span> <span data-ttu-id="dc532-137">指定されていない場合は、未定義の代わりに使用されます。</span><span class="sxs-lookup"><span data-stu-id="dc532-137">If it is not provided, undefined is used instead.</span></span>
          optional: true
      return:
        type:
          - S | undefined
    package: '@azure/arm-batchai'
  - uid: '@azure/arm-batchai.FileServerListResult.find_1'
    name: 'find((value: FileServer, index: number, obj: FileServer[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="dc532-138">述語が true の場合、および未定義それ以外の場合、配列内の最初の要素の値を返します。</span><span class="sxs-lookup"><span data-stu-id="dc532-138">Returns the value of the first element in the array where predicate is true, and undefined otherwise.</span></span>'
    syntax:
      content: 'function find(predicate: (value: FileServer, index: number, obj: FileServer[]) => boolean, thisArg?: any)'
      parameters:
        - id: predicate
          type:
            - '(value: FileServer, index: number, obj: FileServer[]) => boolean'
          description: ''
        - id: thisArg
          type:
            - any
          description: ''
          optional: true
      return:
        type:
          - '@azure/arm-batchai.FileServer | undefined'
    package: '@azure/arm-batchai'
  - uid: '@azure/arm-batchai.FileServerListResult.findIndex'
    name: 'findIndex((value: FileServer, index: number, obj: FileServer[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="dc532-139">述語が true で、それ以外の場合は-1 を配列の最初の要素のインデックスを返します。</span><span class="sxs-lookup"><span data-stu-id="dc532-139">Returns the index of the first element in the array where predicate is true, and -1 otherwise.</span></span>'
    syntax:
      content: 'function findIndex(predicate: (value: FileServer, index: number, obj: FileServer[]) => boolean, thisArg?: any)'
      parameters:
        - id: predicate
          type:
            - '(value: FileServer, index: number, obj: FileServer[]) => boolean'
          description: '<span data-ttu-id="dc532-140">いずれかの述語が true を返すが見つかるまで順を昇順で、配列の各要素の 1 回の呼び出しの述語を検索します。</span><span class="sxs-lookup"><span data-stu-id="dc532-140">find calls predicate once for each element of the array, in ascending order, until it finds one where predicate returns true.</span></span> <span data-ttu-id="dc532-141">このような要素が見つかると、findIndex はすぐにその要素のインデックスを返します。</span><span class="sxs-lookup"><span data-stu-id="dc532-141">If such an element is found, findIndex immediately returns that element index.</span></span> <span data-ttu-id="dc532-142">それ以外の場合、findIndex は-1 を返します。</span><span class="sxs-lookup"><span data-stu-id="dc532-142">Otherwise, findIndex returns -1.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="dc532-143">これは、このとして使用する指定した場合、述語の呼び出しごとの値。</span><span class="sxs-lookup"><span data-stu-id="dc532-143">If provided, it will be used as the this value for each invocation of predicate.</span></span> <span data-ttu-id="dc532-144">指定されていない場合は、未定義の代わりに使用されます。</span><span class="sxs-lookup"><span data-stu-id="dc532-144">If it is not provided, undefined is used instead.</span></span>
          optional: true
      return:
        type:
          - number
    package: '@azure/arm-batchai'
  - uid: '@azure/arm-batchai.FileServerListResult.forEach'
    name: 'forEach((value: FileServer, index: number, array: FileServer[]) => void, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="dc532-145">配列内の各要素の指定したアクションを実行します。</span><span class="sxs-lookup"><span data-stu-id="dc532-145">Performs the specified action for each element in an array.</span></span>
    syntax:
      content: 'function forEach(callbackfn: (value: FileServer, index: number, array: FileServer[]) => void, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: FileServer, index: number, array: FileServer[]) => void'
          description: <span data-ttu-id="dc532-146">最大 3 つの引数を受け取る関数。</span><span class="sxs-lookup"><span data-stu-id="dc532-146">A function that accepts up to three arguments.</span></span> <span data-ttu-id="dc532-147">forEach は、配列内の各要素に対して 1 回の callbackfn 関数を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="dc532-147">forEach calls the callbackfn function one time for each element in the array.</span></span>
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="dc532-148">オブジェクトをこのキーワードは callbackfn 関数で参照できます。</span><span class="sxs-lookup"><span data-stu-id="dc532-148">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="dc532-149">ThisArg を省略すると、次のように定義されていないこのとして提供される値。</span><span class="sxs-lookup"><span data-stu-id="dc532-149">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
    package: '@azure/arm-batchai'
  - uid: '@azure/arm-batchai.FileServerListResult.indexOf'
    name: 'indexOf(FileServer, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="dc532-150">配列内の値を最初に見つかった位置のインデックスを返します。</span><span class="sxs-lookup"><span data-stu-id="dc532-150">Returns the index of the first occurrence of a value in an array.</span></span>
    syntax:
      content: 'function indexOf(searchElement: FileServer, fromIndex?: undefined | number)'
      parameters:
        - id: searchElement
          type:
            - '@azure/arm-batchai.FileServer'
          description: <span data-ttu-id="dc532-151">配列内で検索する値。</span><span class="sxs-lookup"><span data-stu-id="dc532-151">The value to locate in the array.</span></span>
        - id: fromIndex
          type:
            - undefined | number
          description: |
            <span data-ttu-id="dc532-152">検索の開始位置を示す配列インデックス。</span><span class="sxs-lookup"><span data-stu-id="dc532-152">The array index at which to begin the search.</span></span> <span data-ttu-id="dc532-153">FromIndex を省略すると、インデックス 0 位置にある検索を開始します。</span><span class="sxs-lookup"><span data-stu-id="dc532-153">If fromIndex is omitted, the search starts at index 0.</span></span>
          optional: true
      return:
        type:
          - number
    package: '@azure/arm-batchai'
  - uid: '@azure/arm-batchai.FileServerListResult.join'
    name: join(undefined | string)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="dc532-154">指定した区切り記号文字列で区切られた配列のすべての要素を追加します。</span><span class="sxs-lookup"><span data-stu-id="dc532-154">Adds all the elements of an array separated by the specified separator string.</span></span>
    syntax:
      content: 'function join(separator?: undefined | string)'
      parameters:
        - id: separator
          type:
            - undefined | string
          description: |
            <span data-ttu-id="dc532-155">次の結果の文字列から、配列の 1 つの要素を区切るために使用する文字列。</span><span class="sxs-lookup"><span data-stu-id="dc532-155">A string used to separate one element of an array from the next in the resulting String.</span></span> <span data-ttu-id="dc532-156">省略した場合、配列の要素は、コンマで区切られます。</span><span class="sxs-lookup"><span data-stu-id="dc532-156">If omitted, the array elements are separated with a comma.</span></span>
          optional: true
      return:
        type:
          - string
    package: '@azure/arm-batchai'
  - uid: '@azure/arm-batchai.FileServerListResult.keys'
    name: keys()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="dc532-157">配列の反復可能のキーを返します</span><span class="sxs-lookup"><span data-stu-id="dc532-157">Returns an iterable of keys in the array</span></span>
    syntax:
      content: function keys()
      parameters: []
      return:
        type:
          - IterableIterator<number>
    package: '@azure/arm-batchai'
  - uid: '@azure/arm-batchai.FileServerListResult.lastIndexOf'
    name: 'lastIndexOf(FileServer, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="dc532-158">配列で指定された値の最後に見つかった位置のインデックスを返します。</span><span class="sxs-lookup"><span data-stu-id="dc532-158">Returns the index of the last occurrence of a specified value in an array.</span></span>
    syntax:
      content: 'function lastIndexOf(searchElement: FileServer, fromIndex?: undefined | number)'
      parameters:
        - id: searchElement
          type:
            - '@azure/arm-batchai.FileServer'
          description: <span data-ttu-id="dc532-159">配列内で検索する値。</span><span class="sxs-lookup"><span data-stu-id="dc532-159">The value to locate in the array.</span></span>
        - id: fromIndex
          type:
            - undefined | number
          description: |
            <span data-ttu-id="dc532-160">検索の開始位置を示す配列インデックス。</span><span class="sxs-lookup"><span data-stu-id="dc532-160">The array index at which to begin the search.</span></span> <span data-ttu-id="dc532-161">FromIndex を省略した場合、配列内の最後のインデックス位置にある検索を開始します。</span><span class="sxs-lookup"><span data-stu-id="dc532-161">If fromIndex is omitted, the search starts at the last index in the array.</span></span>
          optional: true
      return:
        type:
          - number
    package: '@azure/arm-batchai'
  - uid: '@azure/arm-batchai.FileServerListResult.length'
    name: length
    fullName: length
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="dc532-162">取得または配列の長さを設定します。</span><span class="sxs-lookup"><span data-stu-id="dc532-162">Gets or sets the length of the array.</span></span> <span data-ttu-id="dc532-163">これは、配列で定義されている最上位の要素より大きい番号 1 です。</span><span class="sxs-lookup"><span data-stu-id="dc532-163">This is a number one higher than the highest element defined in an array.</span></span>
    syntax:
      content: 'length: number'
      return:
        type:
          - number
    package: '@azure/arm-batchai'
  - uid: '@azure/arm-batchai.FileServerListResult.map'
    name: 'map((value: FileServer, index: number, array: FileServer[]) => U, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="dc532-164">、配列の各要素に対して定義されたコールバック関数を呼び出すし、結果を含む配列を返します。</span><span class="sxs-lookup"><span data-stu-id="dc532-164">Calls a defined callback function on each element of an array, and returns an array that contains the results.</span></span>'
    syntax:
      content: 'function map<U>(callbackfn: (value: FileServer, index: number, array: FileServer[]) => U, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: FileServer, index: number, array: FileServer[]) => U'
          description: <span data-ttu-id="dc532-165">最大 3 つの引数を受け取る関数。</span><span class="sxs-lookup"><span data-stu-id="dc532-165">A function that accepts up to three arguments.</span></span> <span data-ttu-id="dc532-166">Map メソッドは、配列内の各要素に対して 1 回の callbackfn 関数を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="dc532-166">The map method calls the callbackfn function one time for each element in the array.</span></span>
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="dc532-167">オブジェクトをこのキーワードは callbackfn 関数で参照できます。</span><span class="sxs-lookup"><span data-stu-id="dc532-167">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="dc532-168">ThisArg を省略すると、次のように定義されていないこのとして提供される値。</span><span class="sxs-lookup"><span data-stu-id="dc532-168">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - 'U[]'
    package: '@azure/arm-batchai'
  - uid: '@azure/arm-batchai.FileServerListResult.nextLink'
    name: nextLink
    fullName: nextLink
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'nextLink?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-batchai'
  - uid: '@azure/arm-batchai.FileServerListResult.pop'
    name: pop()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="dc532-169">配列から最後の要素を削除し、返します。</span><span class="sxs-lookup"><span data-stu-id="dc532-169">Removes the last element from an array and returns it.</span></span>
    syntax:
      content: function pop()
      parameters: []
      return:
        type:
          - '@azure/arm-batchai.FileServer | undefined'
    package: '@azure/arm-batchai'
  - uid: '@azure/arm-batchai.FileServerListResult.push'
    name: 'push(FileServer[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="dc532-170">、配列に新しい要素を追加し、配列の長さを返します。</span><span class="sxs-lookup"><span data-stu-id="dc532-170">Appends new elements to an array, and returns the new length of the array.</span></span>'
    syntax:
      content: 'function push(items: FileServer[])'
      parameters:
        - id: items
          type:
            - '@azure/arm-batchai.FileServer[]'
          description: |
            <span data-ttu-id="dc532-171">配列の新しい要素。</span><span class="sxs-lookup"><span data-stu-id="dc532-171">New elements of the Array.</span></span>
      return:
        type:
          - number
    package: '@azure/arm-batchai'
  - uid: '@azure/arm-batchai.FileServerListResult.reduce'
    name: 'reduce((previousValue: FileServer, currentValue: FileServer, currentIndex: number, array: FileServer[]) => FileServer)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="dc532-172">配列内のすべての要素に対して指定されたコールバック関数を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="dc532-172">Calls the specified callback function for all the elements in an array.</span></span> <span data-ttu-id="dc532-173">コールバック関数の戻り値、累積された結果であり、コールバック関数に次の呼び出しの引数として提供されます。</span><span class="sxs-lookup"><span data-stu-id="dc532-173">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduce(callbackfn: (previousValue: FileServer, currentValue: FileServer, currentIndex: number, array: FileServer[]) => FileServer)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: FileServer, currentValue: FileServer, currentIndex: number, array: FileServer[]) => FileServer'
          description: <span data-ttu-id="dc532-174">最大 4 つの引数を受け取る関数。</span><span class="sxs-lookup"><span data-stu-id="dc532-174">A function that accepts up to four arguments.</span></span> <span data-ttu-id="dc532-175">Reduce メソッドは、配列内の各要素に対して 1 回の callbackfn 関数を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="dc532-175">The reduce method calls the callbackfn function one time for each element in the array.</span></span>
      return:
        type:
          - '@azure/arm-batchai.FileServer'
    package: '@azure/arm-batchai'
  - uid: '@azure/arm-batchai.FileServerListResult.reduce_1'
    name: 'reduce((previousValue: FileServer, currentValue: FileServer, currentIndex: number, array: FileServer[]) => FileServer, FileServer)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="dc532-176">配列内のすべての要素に対して指定されたコールバック関数を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="dc532-176">Calls the specified callback function for all the elements in an array.</span></span> <span data-ttu-id="dc532-177">コールバック関数の戻り値、累積された結果であり、コールバック関数に次の呼び出しの引数として提供されます。</span><span class="sxs-lookup"><span data-stu-id="dc532-177">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduce(callbackfn: (previousValue: FileServer, currentValue: FileServer, currentIndex: number, array: FileServer[]) => FileServer, initialValue: FileServer)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: FileServer, currentValue: FileServer, currentIndex: number, array: FileServer[]) => FileServer'
          description: ''
        - id: initialValue
          type:
            - '@azure/arm-batchai.FileServer'
          description: ''
      return:
        type:
          - '@azure/arm-batchai.FileServer'
    package: '@azure/arm-batchai'
  - uid: '@azure/arm-batchai.FileServerListResult.reduce_2'
    name: 'reduce((previousValue: U, currentValue: FileServer, currentIndex: number, array: FileServer[]) => U, U)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="dc532-178">配列内のすべての要素に対して指定されたコールバック関数を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="dc532-178">Calls the specified callback function for all the elements in an array.</span></span> <span data-ttu-id="dc532-179">コールバック関数の戻り値、累積された結果であり、コールバック関数に次の呼び出しの引数として提供されます。</span><span class="sxs-lookup"><span data-stu-id="dc532-179">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduce<U>(callbackfn: (previousValue: U, currentValue: FileServer, currentIndex: number, array: FileServer[]) => U, initialValue: U)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: U, currentValue: FileServer, currentIndex: number, array: FileServer[]) => U'
          description: <span data-ttu-id="dc532-180">最大 4 つの引数を受け取る関数。</span><span class="sxs-lookup"><span data-stu-id="dc532-180">A function that accepts up to four arguments.</span></span> <span data-ttu-id="dc532-181">Reduce メソッドは、配列内の各要素に対して 1 回の callbackfn 関数を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="dc532-181">The reduce method calls the callbackfn function one time for each element in the array.</span></span>
        - id: initialValue
          type:
            - U
          description: |
            <span data-ttu-id="dc532-182">初期値が指定されている場合、累積を開始する初期値として使用されます。</span><span class="sxs-lookup"><span data-stu-id="dc532-182">If initialValue is specified, it is used as the initial value to start the accumulation.</span></span> <span data-ttu-id="dc532-183">Callbackfn 関数の最初の呼び出しでは、配列の値ではなく引数としてこの値を提供します。</span><span class="sxs-lookup"><span data-stu-id="dc532-183">The first call to the callbackfn function provides this value as an argument instead of an array value.</span></span>
      return:
        type:
          - U
    package: '@azure/arm-batchai'
  - uid: '@azure/arm-batchai.FileServerListResult.reduceRight'
    name: 'reduceRight((previousValue: FileServer, currentValue: FileServer, currentIndex: number, array: FileServer[]) => FileServer)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="dc532-184">降順で、配列内のすべての要素に対して指定されたコールバック関数を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="dc532-184">Calls the specified callback function for all the elements in an array, in descending order.</span></span> <span data-ttu-id="dc532-185">コールバック関数の戻り値、累積された結果であり、コールバック関数に次の呼び出しの引数として提供されます。</span><span class="sxs-lookup"><span data-stu-id="dc532-185">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduceRight(callbackfn: (previousValue: FileServer, currentValue: FileServer, currentIndex: number, array: FileServer[]) => FileServer)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: FileServer, currentValue: FileServer, currentIndex: number, array: FileServer[]) => FileServer'
          description: <span data-ttu-id="dc532-186">最大 4 つの引数を受け取る関数。</span><span class="sxs-lookup"><span data-stu-id="dc532-186">A function that accepts up to four arguments.</span></span> <span data-ttu-id="dc532-187">ReduceRight メソッドは、配列内の各要素に対して 1 回の callbackfn 関数を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="dc532-187">The reduceRight method calls the callbackfn function one time for each element in the array.</span></span>
      return:
        type:
          - '@azure/arm-batchai.FileServer'
    package: '@azure/arm-batchai'
  - uid: '@azure/arm-batchai.FileServerListResult.reduceRight_1'
    name: 'reduceRight((previousValue: FileServer, currentValue: FileServer, currentIndex: number, array: FileServer[]) => FileServer, FileServer)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="dc532-188">降順で、配列内のすべての要素に対して指定されたコールバック関数を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="dc532-188">Calls the specified callback function for all the elements in an array, in descending order.</span></span> <span data-ttu-id="dc532-189">コールバック関数の戻り値、累積された結果であり、コールバック関数に次の呼び出しの引数として提供されます。</span><span class="sxs-lookup"><span data-stu-id="dc532-189">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduceRight(callbackfn: (previousValue: FileServer, currentValue: FileServer, currentIndex: number, array: FileServer[]) => FileServer, initialValue: FileServer)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: FileServer, currentValue: FileServer, currentIndex: number, array: FileServer[]) => FileServer'
          description: ''
        - id: initialValue
          type:
            - '@azure/arm-batchai.FileServer'
          description: ''
      return:
        type:
          - '@azure/arm-batchai.FileServer'
    package: '@azure/arm-batchai'
  - uid: '@azure/arm-batchai.FileServerListResult.reduceRight_2'
    name: 'reduceRight((previousValue: U, currentValue: FileServer, currentIndex: number, array: FileServer[]) => U, U)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="dc532-190">降順で、配列内のすべての要素に対して指定されたコールバック関数を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="dc532-190">Calls the specified callback function for all the elements in an array, in descending order.</span></span> <span data-ttu-id="dc532-191">コールバック関数の戻り値、累積された結果であり、コールバック関数に次の呼び出しの引数として提供されます。</span><span class="sxs-lookup"><span data-stu-id="dc532-191">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduceRight<U>(callbackfn: (previousValue: U, currentValue: FileServer, currentIndex: number, array: FileServer[]) => U, initialValue: U)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: U, currentValue: FileServer, currentIndex: number, array: FileServer[]) => U'
          description: <span data-ttu-id="dc532-192">最大 4 つの引数を受け取る関数。</span><span class="sxs-lookup"><span data-stu-id="dc532-192">A function that accepts up to four arguments.</span></span> <span data-ttu-id="dc532-193">ReduceRight メソッドは、配列内の各要素に対して 1 回の callbackfn 関数を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="dc532-193">The reduceRight method calls the callbackfn function one time for each element in the array.</span></span>
        - id: initialValue
          type:
            - U
          description: |
            <span data-ttu-id="dc532-194">初期値が指定されている場合、累積を開始する初期値として使用されます。</span><span class="sxs-lookup"><span data-stu-id="dc532-194">If initialValue is specified, it is used as the initial value to start the accumulation.</span></span> <span data-ttu-id="dc532-195">Callbackfn 関数の最初の呼び出しでは、配列の値ではなく引数としてこの値を提供します。</span><span class="sxs-lookup"><span data-stu-id="dc532-195">The first call to the callbackfn function provides this value as an argument instead of an array value.</span></span>
      return:
        type:
          - U
    package: '@azure/arm-batchai'
  - uid: '@azure/arm-batchai.FileServerListResult.reverse'
    name: reverse()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="dc532-196">配列内の要素を反転させます。</span><span class="sxs-lookup"><span data-stu-id="dc532-196">Reverses the elements in an Array.</span></span>
    syntax:
      content: function reverse()
      parameters: []
      return:
        type:
          - '@azure/arm-batchai.FileServer[]'
    package: '@azure/arm-batchai'
  - uid: '@azure/arm-batchai.FileServerListResult.shift'
    name: shift()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="dc532-197">最初の要素を配列から削除し、返します。</span><span class="sxs-lookup"><span data-stu-id="dc532-197">Removes the first element from an array and returns it.</span></span>
    syntax:
      content: function shift()
      parameters: []
      return:
        type:
          - '@azure/arm-batchai.FileServer | undefined'
    package: '@azure/arm-batchai'
  - uid: '@azure/arm-batchai.FileServerListResult.slice'
    name: 'slice(undefined | number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="dc532-198">配列のセクションを返します。</span><span class="sxs-lookup"><span data-stu-id="dc532-198">Returns a section of an array.</span></span>
    syntax:
      content: 'function slice(start?: undefined | number, end?: undefined | number)'
      parameters:
        - id: start
          type:
            - undefined | number
          description: <span data-ttu-id="dc532-199">配列の指定した部分の先頭。</span><span class="sxs-lookup"><span data-stu-id="dc532-199">The beginning of the specified portion of the array.</span></span>
          optional: true
        - id: end
          type:
            - undefined | number
          description: |
            <span data-ttu-id="dc532-200">配列の指定した部分の末尾。</span><span class="sxs-lookup"><span data-stu-id="dc532-200">The end of the specified portion of the array.</span></span>
          optional: true
      return:
        type:
          - '@azure/arm-batchai.FileServer[]'
    package: '@azure/arm-batchai'
  - uid: '@azure/arm-batchai.FileServerListResult.some'
    name: 'some((value: FileServer, index: number, array: FileServer[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="dc532-201">指定されたコールバック関数が返す配列の任意の要素に対して true かどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="dc532-201">Determines whether the specified callback function returns true for any element of an array.</span></span>
    syntax:
      content: 'function some(callbackfn: (value: FileServer, index: number, array: FileServer[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: FileServer, index: number, array: FileServer[]) => boolean'
          description: '<span data-ttu-id="dc532-202">最大 3 つの引数を受け取る関数。</span><span class="sxs-lookup"><span data-stu-id="dc532-202">A function that accepts up to three arguments.</span></span> <span data-ttu-id="dc532-203">Some メソッドは、true を返します、callbackfn まで配列 1 のまたは配列の末尾までの各要素に対して callbackfn 関数を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="dc532-203">The some method calls the callbackfn function for each element in array1 until the callbackfn returns true, or until the end of the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="dc532-204">オブジェクトをこのキーワードは callbackfn 関数で参照できます。</span><span class="sxs-lookup"><span data-stu-id="dc532-204">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="dc532-205">ThisArg を省略すると、次のように定義されていないこのとして提供される値。</span><span class="sxs-lookup"><span data-stu-id="dc532-205">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - boolean
    package: '@azure/arm-batchai'
  - uid: '@azure/arm-batchai.FileServerListResult.sort'
    name: 'sort(undefined | (a: FileServer, b: FileServer) => number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="dc532-206">配列を並べ替えます。</span><span class="sxs-lookup"><span data-stu-id="dc532-206">Sorts an array.</span></span>
    syntax:
      content: 'function sort(compareFn?: undefined | (a: FileServer, b: FileServer) => number)'
      parameters:
        - id: compareFn
          type:
            - 'undefined | (a: FileServer, b: FileServer) => number'
          description: |
            <span data-ttu-id="dc532-207">要素の順序を決定するための関数の名前。</span><span class="sxs-lookup"><span data-stu-id="dc532-207">The name of the function used to determine the order of the elements.</span></span> <span data-ttu-id="dc532-208">省略した場合、要素は、ASCII 文字の並び順を昇順で並べ替えられます。</span><span class="sxs-lookup"><span data-stu-id="dc532-208">If omitted, the elements are sorted in ascending, ASCII character order.</span></span>
          optional: true
      return:
        type:
          - this
    package: '@azure/arm-batchai'
  - uid: '@azure/arm-batchai.FileServerListResult.splice_1'
    name: 'splice(number, number, FileServer[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="dc532-209">配列から要素を削除し、必要に応じて、要素の新しい位置に挿入し、削除の要素を返します。</span><span class="sxs-lookup"><span data-stu-id="dc532-209">Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.</span></span>'
    syntax:
      content: 'function splice(start: number, deleteCount: number, items: FileServer[])'
      parameters:
        - id: start
          type:
            - number
          description: <span data-ttu-id="dc532-210">要素の削除を開始する配列内の 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="dc532-210">The zero-based location in the array from which to start removing elements.</span></span>
        - id: deleteCount
          type:
            - number
          description: <span data-ttu-id="dc532-211">削除する要素の数。</span><span class="sxs-lookup"><span data-stu-id="dc532-211">The number of elements to remove.</span></span>
        - id: items
          type:
            - '@azure/arm-batchai.FileServer[]'
          description: |
            <span data-ttu-id="dc532-212">削除した要素の代わりに、配列に挿入する要素。</span><span class="sxs-lookup"><span data-stu-id="dc532-212">Elements to insert into the array in place of the deleted elements.</span></span>
      return:
        type:
          - '@azure/arm-batchai.FileServer[]'
    package: '@azure/arm-batchai'
  - uid: '@azure/arm-batchai.FileServerListResult.splice'
    name: 'splice(number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="dc532-213">配列から要素を削除し、必要に応じて、要素の新しい位置に挿入し、削除の要素を返します。</span><span class="sxs-lookup"><span data-stu-id="dc532-213">Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.</span></span>'
    syntax:
      content: 'function splice(start: number, deleteCount?: undefined | number)'
      parameters:
        - id: start
          type:
            - number
          description: <span data-ttu-id="dc532-214">要素の削除を開始する配列内の 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="dc532-214">The zero-based location in the array from which to start removing elements.</span></span>
        - id: deleteCount
          type:
            - undefined | number
          description: |
            <span data-ttu-id="dc532-215">削除する要素の数。</span><span class="sxs-lookup"><span data-stu-id="dc532-215">The number of elements to remove.</span></span>
          optional: true
      return:
        type:
          - '@azure/arm-batchai.FileServer[]'
    package: '@azure/arm-batchai'
  - uid: '@azure/arm-batchai.FileServerListResult.toLocaleString'
    name: toLocaleString()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="dc532-216">配列の文字列表現を返します。</span><span class="sxs-lookup"><span data-stu-id="dc532-216">Returns a string representation of an array.</span></span> <span data-ttu-id="dc532-217">要素は、その toLocalString メソッドを使用して文字列に変換されます。</span><span class="sxs-lookup"><span data-stu-id="dc532-217">The elements are converted to string using their toLocalString methods.</span></span>
    syntax:
      content: function toLocaleString()
      parameters: []
      return:
        type:
          - string
    package: '@azure/arm-batchai'
  - uid: '@azure/arm-batchai.FileServerListResult.toString'
    name: toString()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="dc532-218">配列の文字列表現を返します。</span><span class="sxs-lookup"><span data-stu-id="dc532-218">Returns a string representation of an array.</span></span>
    syntax:
      content: function toString()
      parameters: []
      return:
        type:
          - string
    package: '@azure/arm-batchai'
  - uid: '@azure/arm-batchai.FileServerListResult.unshift'
    name: 'unshift(FileServer[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="dc532-219">配列の先頭には、新しい要素を挿入します。</span><span class="sxs-lookup"><span data-stu-id="dc532-219">Inserts new elements at the start of an array.</span></span>
    syntax:
      content: 'function unshift(items: FileServer[])'
      parameters:
        - id: items
          type:
            - '@azure/arm-batchai.FileServer[]'
          description: |
            <span data-ttu-id="dc532-220">配列の先頭に挿入する要素。</span><span class="sxs-lookup"><span data-stu-id="dc532-220">Elements to insert at the start of the Array.</span></span>
      return:
        type:
          - number
    package: '@azure/arm-batchai'
  - uid: '@azure/arm-batchai.FileServerListResult.values'
    name: values()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="dc532-221">反復可能値の配列を返します</span><span class="sxs-lookup"><span data-stu-id="dc532-221">Returns an iterable of values in the array</span></span>
    syntax:
      content: function values()
      parameters: []
      return:
        type:
          - IterableIterator<@azure/arm-batchai.FileServer>
    package: '@azure/arm-batchai'
references:
  - uid: Array<@azure/arm-batchai.FileServer>
    name: FileServer>
    spec.typeScript:
      - name: Array<
        fullName: Array<
      - name: FileServer
        fullName: FileServer
        uid: '@azure/arm-batchai.FileServer'
      - name: '>'
        fullName: '>'
  - uid: 'ConcatArray<@azure/arm-batchai.FileServer>[]'
    name: 'FileServer>[]'
    spec.typeScript:
      - name: ConcatArray<
        fullName: ConcatArray<
      - name: FileServer
        fullName: FileServer
        uid: '@azure/arm-batchai.FileServer'
      - name: '>[]'
        fullName: '>[]'
  - uid: '@azure/arm-batchai.FileServer[]'
    name: 'FileServer[]'
    spec.typeScript:
      - name: FileServer
        fullName: FileServer
        uid: '@azure/arm-batchai.FileServer'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/arm-batchai.FileServer'
    name: FileServer
    spec.typeScript:
      - name: FileServer
        fullName: FileServer
        uid: '@azure/arm-batchai.FileServer'
  - uid: '@azure/arm-batchai.FileServer | undefined'
    name: FileServer | undefined
    spec.typeScript:
      - name: FileServer
        fullName: FileServer
        uid: '@azure/arm-batchai.FileServer'
      - name: ' | undefined'
        fullName: ' | undefined'
  - uid: IterableIterator<@azure/arm-batchai.FileServer>
    name: FileServer>
    spec.typeScript:
      - name: IterableIterator<
        fullName: IterableIterator<
      - name: FileServer
        fullName: FileServer
        uid: '@azure/arm-batchai.FileServer'
      - name: '>'
        fullName: '>'