### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-commerce.UsageAggregatesListOptionalParams'
    name: UsageAggregatesListOptionalParams
    fullName: UsageAggregatesListOptionalParams
    children:
      - '@azure/arm-commerce.UsageAggregatesListOptionalParams.abortSignal'
      - '@azure/arm-commerce.UsageAggregatesListOptionalParams.aggregationGranularity'
      - '@azure/arm-commerce.UsageAggregatesListOptionalParams.continuationToken'
      - '@azure/arm-commerce.UsageAggregatesListOptionalParams.customHeaders'
      - '@azure/arm-commerce.UsageAggregatesListOptionalParams.onDownloadProgress'
      - '@azure/arm-commerce.UsageAggregatesListOptionalParams.onUploadProgress'
      - '@azure/arm-commerce.UsageAggregatesListOptionalParams.showDetails'
      - '@azure/arm-commerce.UsageAggregatesListOptionalParams.timeout'
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: RequestOptionsBase
    package: '@azure/arm-commerce'
  - uid: '@azure/arm-commerce.UsageAggregatesListOptionalParams.abortSignal'
    name: abortSignal
    fullName: abortSignal
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="b7c1d-101">要求を中止するために使用される信号。</span><span class="sxs-lookup"><span data-stu-id="b7c1d-101">The signal which can be used to abort requests.</span></span>
    optional: true
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        type:
          - AbortSignalLike
    package: '@azure/arm-commerce'
  - uid: '@azure/arm-commerce.UsageAggregatesListOptionalParams.aggregationGranularity'
    name: aggregationGranularity
    fullName: aggregationGranularity
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'aggregationGranularity?: AggregationGranularity'
      return:
        type:
          - '@azure/arm-commerce.AggregationGranularity'
    package: '@azure/arm-commerce'
  - uid: '@azure/arm-commerce.UsageAggregatesListOptionalParams.continuationToken'
    name: continuationToken
    fullName: continuationToken
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'continuationToken?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-commerce'
  - uid: '@azure/arm-commerce.UsageAggregatesListOptionalParams.customHeaders'
    name: customHeaders
    fullName: customHeaders
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="b7c1d-102">{オブジェクト}[customHeaders]ユーザーは、要求が送信される前に適用されるカスタム要求ヘッダーを定義します。</span><span class="sxs-lookup"><span data-stu-id="b7c1d-102">{object} [customHeaders] User defined custom request headers that will be applied before the request is sent.</span></span>'
    optional: true
    syntax:
      content: 'customHeaders?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
    package: '@azure/arm-commerce'
  - uid: '@azure/arm-commerce.UsageAggregatesListOptionalParams.onDownloadProgress'
    name: onDownloadProgress
    fullName: onDownloadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="b7c1d-103">ダウンロードの進行状況の発生時に開始するコールバック。</span><span class="sxs-lookup"><span data-stu-id="b7c1d-103">Callback which fires upon download progress.</span></span>
    optional: true
    syntax:
      content: 'onDownloadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/arm-commerce'
  - uid: '@azure/arm-commerce.UsageAggregatesListOptionalParams.onUploadProgress'
    name: onUploadProgress
    fullName: onUploadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="b7c1d-104">アップロードの進行状況の発生時に開始するコールバック。</span><span class="sxs-lookup"><span data-stu-id="b7c1d-104">Callback which fires upon upload progress.</span></span>
    optional: true
    syntax:
      content: 'onUploadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/arm-commerce'
  - uid: '@azure/arm-commerce.UsageAggregatesListOptionalParams.showDetails'
    name: showDetails
    fullName: showDetails
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'showDetails?: undefined | false | true'
      return:
        type:
          - undefined | false | true
    package: '@azure/arm-commerce'
  - uid: '@azure/arm-commerce.UsageAggregatesListOptionalParams.timeout'
    name: timeout
    fullName: timeout
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="b7c1d-105">要求が自動的に終了されるまでにかかる時間をミリ秒単位の数。</span><span class="sxs-lookup"><span data-stu-id="b7c1d-105">The number of milliseconds a request can take before automatically being terminated.</span></span>
    optional: true
    syntax:
      content: 'timeout?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/arm-commerce'
references:
  - uid: '@azure/arm-commerce.AggregationGranularity'
    name: AggregationGranularity
    spec.typeScript:
      - name: AggregationGranularity
        fullName: AggregationGranularity
        uid: '@azure/arm-commerce.AggregationGranularity'