### YamlMime:UniversalReference
items:
  - uid: '@azure/service-bus.Sender'
    name: Sender
    fullName: Sender
    children:
      - '@azure/service-bus.Sender.cancelScheduledMessage'
      - '@azure/service-bus.Sender.cancelScheduledMessages'
      - '@azure/service-bus.Sender.close'
      - '@azure/service-bus.Sender.isClosed'
      - '@azure/service-bus.Sender.scheduleMessage'
      - '@azure/service-bus.Sender.scheduleMessages'
      - '@azure/service-bus.Sender.send'
      - '@azure/service-bus.Sender.sendBatch'
    langs:
      - typeScript
    type: class
    summary: |-
      <span data-ttu-id="f95e7-101">メッセージを送信し、後で送信され、このようなスケジュール設定されたメッセージをキャンセルするメッセージのスケジュール、送信元のクラスを使用できます。</span><span class="sxs-lookup"><span data-stu-id="f95e7-101">The Sender class can be used to send messages, schedule messages to be sent at a later time and cancel such scheduled messages.</span></span>
      <span data-ttu-id="f95e7-102">使用して、`createSender`送信者をインスタンス化するには、QueueClient または TopicClient 関数。</span><span class="sxs-lookup"><span data-stu-id="f95e7-102">Use the `createSender` function on the QueueClient or TopicClient to instantiate a Sender.</span></span>
      <span data-ttu-id="f95e7-103">送信者クラスは、基になる AMQP 送信者リンク経由で抽象化です。</span><span class="sxs-lookup"><span data-stu-id="f95e7-103">The Sender class is an abstraction over the underlying AMQP sender link.</span></span>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Sender.cancelScheduledMessage'
    name: cancelScheduledMessage(Long)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="f95e7-104">ServiceBus キュー/サブスクリプション上に表示するようにスケジュールされたメッセージを取り消します。</span><span class="sxs-lookup"><span data-stu-id="f95e7-104">Cancels a message that was scheduled to appear on a ServiceBus Queue/Subscription.</span></span>
    syntax:
      content: 'function cancelScheduledMessage(sequenceNumber: Long)'
      parameters:
        - id: sequenceNumber
          type:
            - Long
          description: <span data-ttu-id="f95e7-105">キャンセルするメッセージのシーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="f95e7-105">The sequence number of the message to be cancelled.</span></span>
      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Sender.cancelScheduledMessages'
    name: 'cancelScheduledMessages(Long[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="f95e7-106">Service Bus キューまたはサブスクリプション上に表示するようにスケジュールされた複数のメッセージをキャンセルします。</span><span class="sxs-lookup"><span data-stu-id="f95e7-106">Cancels multiple messages that were scheduled to appear on a ServiceBus Queue/Subscription.</span></span>
    syntax:
      content: 'function cancelScheduledMessages(sequenceNumbers: Long[])'
      parameters:
        - id: sequenceNumbers
          type:
            - 'Long[]'
          description: <span data-ttu-id="f95e7-107">キャンセル メッセージのシーケンス番号の配列。</span><span class="sxs-lookup"><span data-stu-id="f95e7-107">An Array of sequence numbers of the messages to be cancelled.</span></span>
      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Sender.close'
    name: close()
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="f95e7-108">基になる AMQP の拒否 を閉じます。</span><span class="sxs-lookup"><span data-stu-id="f95e7-108">Closes the underlying AMQP sender link.</span></span>
      <span data-ttu-id="f95e7-109">終了すると、その他の操作の送信者は使用できません。</span><span class="sxs-lookup"><span data-stu-id="f95e7-109">Once closed, the sender cannot be used for any further operations.</span></span>
      <span data-ttu-id="f95e7-110">使用して、`createSender`新しいセンダーをインスタンス化するには、QueueClient または TopicClient 関数</span><span class="sxs-lookup"><span data-stu-id="f95e7-110">Use the `createSender` function on the QueueClient or TopicClient to instantiate a new Sender</span></span>
    syntax:
      content: function close()
      parameters: []
      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Sender.isClosed'
    name: isClosed
    fullName: isClosed
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="f95e7-111">返します`true`送信者または作成したクライアントのいずれかが閉じられている場合</span><span class="sxs-lookup"><span data-stu-id="f95e7-111">Returns `true` if either the sender or the client that created it has been closed</span></span>
    syntax:
      content: 'isClosed: boolean'
      return:
        type:
          - boolean
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Sender.scheduleMessage'
    name: 'scheduleMessage(Date, SendableMessageInfo)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="f95e7-112">スケジュールは後での Service Bus キューまたはサブスクリプションを表示するメッセージを指定します。</span><span class="sxs-lookup"><span data-stu-id="f95e7-112">Schedules given message to appear on Service Bus Queue/Subscription at a later time.</span></span>
    syntax:
      content: 'function scheduleMessage(scheduledEnqueueTimeUtc: Date, message: SendableMessageInfo)'
      parameters:
        - id: scheduledEnqueueTimeUtc
          type:
            - Date
          description: <span data-ttu-id="f95e7-113">UTC 時刻、メッセージをエンキューをする必要があります。</span><span class="sxs-lookup"><span data-stu-id="f95e7-113">The UTC time at which the message should be enqueued.</span></span>
        - id: message
          type:
            - '@azure/service-bus.SendableMessageInfo'
          description: <span data-ttu-id="f95e7-114">このメッセージは、スケジュールを設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f95e7-114">The message that needs to be scheduled.</span></span>
      return:
        type:
          - Promise<Long>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Sender.scheduleMessages'
    name: 'scheduleMessages(Date, SendableMessageInfo[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="f95e7-115">スケジュールは後での Service Bus キューまたはサブスクリプションを表示するメッセージを指定します。</span><span class="sxs-lookup"><span data-stu-id="f95e7-115">Schedules given messages to appear on Service Bus Queue/Subscription at a later time.</span></span>
    syntax:
      content: 'function scheduleMessages(scheduledEnqueueTimeUtc: Date, messages: SendableMessageInfo[])'
      parameters:
        - id: scheduledEnqueueTimeUtc
          type:
            - Date
          description: <span data-ttu-id="f95e7-116">UTC 時刻、メッセージをエンキューをする必要があります。</span><span class="sxs-lookup"><span data-stu-id="f95e7-116">The UTC time at which the messages should be enqueued.</span></span>
        - id: messages
          type:
            - '@azure/service-bus.SendableMessageInfo[]'
          description: <span data-ttu-id="f95e7-117">スケジュールを設定する必要があるメッセージの配列。</span><span class="sxs-lookup"><span data-stu-id="f95e7-117">Array of Messages that need to be scheduled.</span></span>
      return:
        type:
          - 'Promise<Long[]>'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Sender.send'
    name: send(SendableMessageInfo)
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      <span data-ttu-id="f95e7-118">存在するがまだの場合、送信者の AMQP リンクを作成した後は、特定のメッセージを送信します。</span><span class="sxs-lookup"><span data-stu-id="f95e7-118">Sends the given message after creating an AMQP Sender link if it doesnt already exists.</span></span>
      <span data-ttu-id="f95e7-119">メッセージを送信する、`session`や`partition`が有効なキュー/トピック、設定、`sessionId`や`partitionKey`メッセージにそれぞれのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="f95e7-119">To send a message to a `session` and/or `partition` enabled Queue/Topic, set the `sessionId` and/or `partitionKey` properties respectively on the message.</span></span>
    syntax:
      content: 'function send(message: SendableMessageInfo)'
      parameters:
        - id: message
          type:
            - '@azure/service-bus.SendableMessageInfo'
          description: <span data-ttu-id="f95e7-120">送信するメッセージ。</span><span class="sxs-lookup"><span data-stu-id="f95e7-120">Message to send.</span></span>
      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Sender.sendBatch'
    name: 'sendBatch(SendableMessageInfo[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      <span data-ttu-id="f95e7-121">存在するがまだの場合、送信者の AMQP リンクを作成した後、つまり 1 つの AMQP メッセージ内の 1 つのバッチで特定のメッセージを送信します。</span><span class="sxs-lookup"><span data-stu-id="f95e7-121">Sends the given messages in a single batch i.e. in a single AMQP message after creating an AMQP Sender link if it doesnt already exists.</span></span>
      - <span data-ttu-id="f95e7-122">メッセージを送信する、`session`や`partition`が有効なキュー/トピック、設定、`sessionId`や`partitionKey`メッセージにそれぞれのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="f95e7-122">To send messages to a `session` and/or `partition` enabled Queue/Topic, set the `sessionId` and/or `partitionKey` properties respectively on the messages.</span></span>
      - <span data-ttu-id="f95e7-123">バッチ内のすべてのメッセージが同じがこれを行うときに`sessionId`(セッションの使用) 場合と同じ`parititionKey`(パーティションの場合)。</span><span class="sxs-lookup"><span data-stu-id="f95e7-123">When doing so, all messages in the batch should have the same `sessionId` (if using sessions) and the same `parititionKey` (if using paritions).</span></span>
    syntax:
      content: 'function sendBatch(messages: SendableMessageInfo[])'
      parameters:
        - id: messages
          type:
            - '@azure/service-bus.SendableMessageInfo[]'
          description: <span data-ttu-id="f95e7-124">バッチのメッセージで送信される SendableMessageInfo オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="f95e7-124">An array of SendableMessageInfo objects to be sent in a Batch message.</span></span>
      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
references:
  - uid: '@azure/service-bus.SendableMessageInfo'
    name: SendableMessageInfo
    spec.typeScript:
      - name: SendableMessageInfo
        fullName: SendableMessageInfo
        uid: '@azure/service-bus.SendableMessageInfo'
  - uid: '@azure/service-bus.SendableMessageInfo[]'
    name: 'SendableMessageInfo[]'
    spec.typeScript:
      - name: SendableMessageInfo
        fullName: SendableMessageInfo
        uid: '@azure/service-bus.SendableMessageInfo'
      - name: '[]'
        fullName: '[]'