### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-sql.RecoverableDatabaseListResult'
    name: RecoverableDatabaseListResult
    fullName: RecoverableDatabaseListResult
    children:
      - '@azure/arm-sql.RecoverableDatabaseListResult.Array'
      - '@azure/arm-sql.RecoverableDatabaseListResult.concat'
      - '@azure/arm-sql.RecoverableDatabaseListResult.concat_1'
      - '@azure/arm-sql.RecoverableDatabaseListResult.copyWithin'
      - '@azure/arm-sql.RecoverableDatabaseListResult.entries'
      - '@azure/arm-sql.RecoverableDatabaseListResult.every'
      - '@azure/arm-sql.RecoverableDatabaseListResult.fill'
      - '@azure/arm-sql.RecoverableDatabaseListResult.filter_1'
      - '@azure/arm-sql.RecoverableDatabaseListResult.filter'
      - '@azure/arm-sql.RecoverableDatabaseListResult.find'
      - '@azure/arm-sql.RecoverableDatabaseListResult.find_1'
      - '@azure/arm-sql.RecoverableDatabaseListResult.findIndex'
      - '@azure/arm-sql.RecoverableDatabaseListResult.forEach'
      - '@azure/arm-sql.RecoverableDatabaseListResult.indexOf'
      - '@azure/arm-sql.RecoverableDatabaseListResult.join'
      - '@azure/arm-sql.RecoverableDatabaseListResult.keys'
      - '@azure/arm-sql.RecoverableDatabaseListResult.lastIndexOf'
      - '@azure/arm-sql.RecoverableDatabaseListResult.length'
      - '@azure/arm-sql.RecoverableDatabaseListResult.map'
      - '@azure/arm-sql.RecoverableDatabaseListResult.pop'
      - '@azure/arm-sql.RecoverableDatabaseListResult.push'
      - '@azure/arm-sql.RecoverableDatabaseListResult.reduce'
      - '@azure/arm-sql.RecoverableDatabaseListResult.reduce_1'
      - '@azure/arm-sql.RecoverableDatabaseListResult.reduce_2'
      - '@azure/arm-sql.RecoverableDatabaseListResult.reduceRight'
      - '@azure/arm-sql.RecoverableDatabaseListResult.reduceRight_1'
      - '@azure/arm-sql.RecoverableDatabaseListResult.reduceRight_2'
      - '@azure/arm-sql.RecoverableDatabaseListResult.reverse'
      - '@azure/arm-sql.RecoverableDatabaseListResult.shift'
      - '@azure/arm-sql.RecoverableDatabaseListResult.slice'
      - '@azure/arm-sql.RecoverableDatabaseListResult.some'
      - '@azure/arm-sql.RecoverableDatabaseListResult.sort'
      - '@azure/arm-sql.RecoverableDatabaseListResult.splice_1'
      - '@azure/arm-sql.RecoverableDatabaseListResult.splice'
      - '@azure/arm-sql.RecoverableDatabaseListResult.toLocaleString'
      - '@azure/arm-sql.RecoverableDatabaseListResult.toString'
      - '@azure/arm-sql.RecoverableDatabaseListResult.unshift'
      - '@azure/arm-sql.RecoverableDatabaseListResult.values'
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: Array<@azure/arm-sql.RecoverableDatabase>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.RecoverableDatabaseListResult.Array'
    name: Array
    fullName: Array
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Array: ArrayConstructor'
      return:
        type:
          - ArrayConstructor
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.RecoverableDatabaseListResult.concat'
    name: 'concat(ConcatArray<RecoverableDatabase>[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: 2 つ以上の配列を結合します。
    syntax:
      content: 'function concat(items: ConcatArray<RecoverableDatabase>[])'
      parameters:
        - id: items
          type:
            - 'ConcatArray<@azure/arm-sql.RecoverableDatabase>[]'
          description: |
            配列 1 の末尾に追加する項目。
      return:
        type:
          - '@azure/arm-sql.RecoverableDatabase[]'
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.RecoverableDatabaseListResult.concat_1'
    name: 'concat(T | ConcatArray<T>[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: 2 つ以上の配列を結合します。
    syntax:
      content: 'function concat(items: T | ConcatArray<T>[])'
      parameters:
        - id: items
          type:
            - 'T | ConcatArray<T>[]'
          description: |
            配列 1 の末尾に追加する項目。
      return:
        type:
          - '@azure/arm-sql.RecoverableDatabase[]'
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.RecoverableDatabaseListResult.copyWithin'
    name: 'copyWithin(number, number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 識別される配列のセクションをコピーした後、このオブジェクトを返しますが開始し、終了位置のターゲットで始まる同じ配列を
    syntax:
      content: 'function copyWithin(target: number, start: number, end?: undefined | number)'
      parameters:
        - id: target
          type:
            - number
          description: ターゲットが負の場合は、長さを加えた長さが、配列の長さのターゲットとして扱われます。
        - id: start
          type:
            - number
          description: 開始が負の場合は、長さ + スタートとして扱われます。 End が負の場合は、長さ + 終了として扱われます。
        - id: end
          type:
            - undefined | number
          description: |
            この長さを指定しない場合は、オブジェクトの既定値として使用されます。
          optional: true
      return:
        type:
          - this
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.RecoverableDatabaseListResult.entries'
    name: entries()
    children: []
    type: method
    langs:
      - typeScript
    summary: 可能なすべてのエントリのキーと値のペアの配列を返します
    syntax:
      content: function entries()
      parameters: []
      return:
        type:
          - IterableIterator<Object>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.RecoverableDatabaseListResult.every'
    name: 'every((value: RecoverableDatabase, index: number, array: RecoverableDatabase[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 配列のすべてのメンバーが指定されたテストを満たすかどうかを判断します。
    syntax:
      content: 'function every(callbackfn: (value: RecoverableDatabase, index: number, array: RecoverableDatabase[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: RecoverableDatabase, index: number, array: RecoverableDatabase[]) => boolean'
          description: 最大 3 つの引数を受け取る関数。 各メソッドは、配列の末尾まで、または、callbackfn が false を返すまで配列 1 の各要素に対して callbackfn 関数を呼び出します。
        - id: thisArg
          type:
            - any
          description: |
            オブジェクトをこのキーワードは callbackfn 関数で参照できます。 ThisArg を省略すると、次のように定義されていないこのとして提供される値。
          optional: true
      return:
        type:
          - boolean
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.RecoverableDatabaseListResult.fill'
    name: 'fill(RecoverableDatabase, undefined | number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 識別されるセクションのデータを読み込んだ後、このオブジェクトを返します。 開始日と終了値を持つ
    syntax:
      content: 'function fill(value: RecoverableDatabase, start?: undefined | number, end?: undefined | number)'
      parameters:
        - id: value
          type:
            - '@azure/arm-sql.RecoverableDatabase'
          description: 配列のセクションを入力する値
        - id: start
          type:
            - undefined | number
          description: 配列の入力を開始するインデックス。 開始が負の場合は、長さ + 開始 length は、配列の長さとして扱われます。
          optional: true
        - id: end
          type:
            - undefined | number
          description: |
            配列の入力を停止するインデックス。 End が負の場合は、長さ + 終了として扱われます。
          optional: true
      return:
        type:
          - this
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.RecoverableDatabaseListResult.filter_1'
    name: 'filter((value: RecoverableDatabase, index: number, array: RecoverableDatabase[]) => any, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: コールバック関数で指定された条件を満たす、配列の要素を返します。
    syntax:
      content: 'function filter(callbackfn: (value: RecoverableDatabase, index: number, array: RecoverableDatabase[]) => any, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: RecoverableDatabase, index: number, array: RecoverableDatabase[]) => any'
          description: 最大 3 つの引数を受け取る関数。 フィルター メソッドは、配列内の各要素に対して 1 回の callbackfn 関数を呼び出します。
        - id: thisArg
          type:
            - any
          description: |
            オブジェクトをこのキーワードは callbackfn 関数で参照できます。 ThisArg を省略すると、次のように定義されていないこのとして提供される値。
          optional: true
      return:
        type:
          - '@azure/arm-sql.RecoverableDatabase[]'
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.RecoverableDatabaseListResult.filter'
    name: 'filter((value: RecoverableDatabase, index: number, array: RecoverableDatabase[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: コールバック関数で指定された条件を満たす、配列の要素を返します。
    syntax:
      content: 'function filter<S>(callbackfn: (value: RecoverableDatabase, index: number, array: RecoverableDatabase[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: RecoverableDatabase, index: number, array: RecoverableDatabase[]) => boolean'
          description: 最大 3 つの引数を受け取る関数。 フィルター メソッドは、配列内の各要素に対して 1 回の callbackfn 関数を呼び出します。
        - id: thisArg
          type:
            - any
          description: |
            オブジェクトをこのキーワードは callbackfn 関数で参照できます。 ThisArg を省略すると、次のように定義されていないこのとして提供される値。
          optional: true
      return:
        type:
          - 'S[]'
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.RecoverableDatabaseListResult.find'
    name: 'find((this: void, value: RecoverableDatabase, index: number, obj: RecoverableDatabase[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 述語が true の場合、および未定義それ以外の場合、配列内の最初の要素の値を返します。
    syntax:
      content: 'function find<S>(predicate: (this: void, value: RecoverableDatabase, index: number, obj: RecoverableDatabase[]) => boolean, thisArg?: any)'
      parameters:
        - id: predicate
          type:
            - '(this: void, value: RecoverableDatabase, index: number, obj: RecoverableDatabase[]) => boolean'
          description: いずれかの述語が true を返すが見つかるまで順を昇順で、配列の各要素の 1 回の呼び出しの述語を検索します。 このような要素が見つかると、検索はすぐにその要素の値を返します。 それ以外の場合、検索は undefined を返します。
        - id: thisArg
          type:
            - any
          description: |
            これは、このとして使用する指定した場合、述語の呼び出しごとの値。 指定されていない場合は、未定義の代わりに使用されます。
          optional: true
      return:
        type:
          - S | undefined
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.RecoverableDatabaseListResult.find_1'
    name: 'find((value: RecoverableDatabase, index: number, obj: RecoverableDatabase[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 述語が true の場合、および未定義それ以外の場合、配列内の最初の要素の値を返します。
    syntax:
      content: 'function find(predicate: (value: RecoverableDatabase, index: number, obj: RecoverableDatabase[]) => boolean, thisArg?: any)'
      parameters:
        - id: predicate
          type:
            - '(value: RecoverableDatabase, index: number, obj: RecoverableDatabase[]) => boolean'
          description: ''
        - id: thisArg
          type:
            - any
          description: ''
          optional: true
      return:
        type:
          - '@azure/arm-sql.RecoverableDatabase | undefined'
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.RecoverableDatabaseListResult.findIndex'
    name: 'findIndex((value: RecoverableDatabase, index: number, obj: RecoverableDatabase[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 述語が true で、それ以外の場合は-1 を配列の最初の要素のインデックスを返します。
    syntax:
      content: 'function findIndex(predicate: (value: RecoverableDatabase, index: number, obj: RecoverableDatabase[]) => boolean, thisArg?: any)'
      parameters:
        - id: predicate
          type:
            - '(value: RecoverableDatabase, index: number, obj: RecoverableDatabase[]) => boolean'
          description: いずれかの述語が true を返すが見つかるまで順を昇順で、配列の各要素の 1 回の呼び出しの述語を検索します。 このような要素が見つかると、findIndex はすぐにその要素のインデックスを返します。 それ以外の場合、findIndex は-1 を返します。
        - id: thisArg
          type:
            - any
          description: |
            これは、このとして使用する指定した場合、述語の呼び出しごとの値。 指定されていない場合は、未定義の代わりに使用されます。
          optional: true
      return:
        type:
          - number
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.RecoverableDatabaseListResult.forEach'
    name: 'forEach((value: RecoverableDatabase, index: number, array: RecoverableDatabase[]) => void, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 配列内の各要素の指定したアクションを実行します。
    syntax:
      content: 'function forEach(callbackfn: (value: RecoverableDatabase, index: number, array: RecoverableDatabase[]) => void, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: RecoverableDatabase, index: number, array: RecoverableDatabase[]) => void'
          description: 最大 3 つの引数を受け取る関数。 forEach は、配列内の各要素に対して 1 回の callbackfn 関数を呼び出します。
        - id: thisArg
          type:
            - any
          description: |
            オブジェクトをこのキーワードは callbackfn 関数で参照できます。 ThisArg を省略すると、次のように定義されていないこのとして提供される値。
          optional: true
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.RecoverableDatabaseListResult.indexOf'
    name: 'indexOf(RecoverableDatabase, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 配列内の値を最初に見つかった位置のインデックスを返します。
    syntax:
      content: 'function indexOf(searchElement: RecoverableDatabase, fromIndex?: undefined | number)'
      parameters:
        - id: searchElement
          type:
            - '@azure/arm-sql.RecoverableDatabase'
          description: 配列内で検索する値。
        - id: fromIndex
          type:
            - undefined | number
          description: |
            検索の開始位置を示す配列インデックス。 FromIndex を省略すると、インデックス 0 位置にある検索を開始します。
          optional: true
      return:
        type:
          - number
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.RecoverableDatabaseListResult.join'
    name: join(undefined | string)
    children: []
    type: method
    langs:
      - typeScript
    summary: 指定した区切り記号文字列で区切られた配列のすべての要素を追加します。
    syntax:
      content: 'function join(separator?: undefined | string)'
      parameters:
        - id: separator
          type:
            - undefined | string
          description: |
            次の結果の文字列から、配列の 1 つの要素を区切るために使用する文字列。 省略した場合、配列の要素は、コンマで区切られます。
          optional: true
      return:
        type:
          - string
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.RecoverableDatabaseListResult.keys'
    name: keys()
    children: []
    type: method
    langs:
      - typeScript
    summary: 配列の反復可能のキーを返します
    syntax:
      content: function keys()
      parameters: []
      return:
        type:
          - IterableIterator<number>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.RecoverableDatabaseListResult.lastIndexOf'
    name: 'lastIndexOf(RecoverableDatabase, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 配列で指定された値の最後に見つかった位置のインデックスを返します。
    syntax:
      content: 'function lastIndexOf(searchElement: RecoverableDatabase, fromIndex?: undefined | number)'
      parameters:
        - id: searchElement
          type:
            - '@azure/arm-sql.RecoverableDatabase'
          description: 配列内で検索する値。
        - id: fromIndex
          type:
            - undefined | number
          description: |
            検索の開始位置を示す配列インデックス。 FromIndex を省略した場合、配列内の最後のインデックス位置にある検索を開始します。
          optional: true
      return:
        type:
          - number
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.RecoverableDatabaseListResult.length'
    name: length
    fullName: length
    children: []
    langs:
      - typeScript
    type: property
    summary: 取得または配列の長さを設定します。 これは、配列で定義されている最上位の要素より大きい番号 1 です。
    syntax:
      content: 'length: number'
      return:
        type:
          - number
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.RecoverableDatabaseListResult.map'
    name: 'map((value: RecoverableDatabase, index: number, array: RecoverableDatabase[]) => U, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 、配列の各要素に対して定義されたコールバック関数を呼び出すし、結果を含む配列を返します。
    syntax:
      content: 'function map<U>(callbackfn: (value: RecoverableDatabase, index: number, array: RecoverableDatabase[]) => U, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: RecoverableDatabase, index: number, array: RecoverableDatabase[]) => U'
          description: 最大 3 つの引数を受け取る関数。 Map メソッドは、配列内の各要素に対して 1 回の callbackfn 関数を呼び出します。
        - id: thisArg
          type:
            - any
          description: |
            オブジェクトをこのキーワードは callbackfn 関数で参照できます。 ThisArg を省略すると、次のように定義されていないこのとして提供される値。
          optional: true
      return:
        type:
          - 'U[]'
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.RecoverableDatabaseListResult.pop'
    name: pop()
    children: []
    type: method
    langs:
      - typeScript
    summary: 配列から最後の要素を削除し、返します。
    syntax:
      content: function pop()
      parameters: []
      return:
        type:
          - '@azure/arm-sql.RecoverableDatabase | undefined'
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.RecoverableDatabaseListResult.push'
    name: 'push(RecoverableDatabase[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: 、配列に新しい要素を追加し、配列の長さを返します。
    syntax:
      content: 'function push(items: RecoverableDatabase[])'
      parameters:
        - id: items
          type:
            - '@azure/arm-sql.RecoverableDatabase[]'
          description: |
            配列の新しい要素。
      return:
        type:
          - number
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.RecoverableDatabaseListResult.reduce'
    name: 'reduce((previousValue: RecoverableDatabase, currentValue: RecoverableDatabase, currentIndex: number, array: RecoverableDatabase[]) => RecoverableDatabase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 配列内のすべての要素に対して指定されたコールバック関数を呼び出します。 コールバック関数の戻り値、累積された結果であり、コールバック関数に次の呼び出しの引数として提供されます。
    syntax:
      content: 'function reduce(callbackfn: (previousValue: RecoverableDatabase, currentValue: RecoverableDatabase, currentIndex: number, array: RecoverableDatabase[]) => RecoverableDatabase)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: RecoverableDatabase, currentValue: RecoverableDatabase, currentIndex: number, array: RecoverableDatabase[]) => RecoverableDatabase'
          description: 最大 4 つの引数を受け取る関数。 Reduce メソッドは、配列内の各要素に対して 1 回の callbackfn 関数を呼び出します。
      return:
        type:
          - '@azure/arm-sql.RecoverableDatabase'
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.RecoverableDatabaseListResult.reduce_1'
    name: 'reduce((previousValue: RecoverableDatabase, currentValue: RecoverableDatabase, currentIndex: number, array: RecoverableDatabase[]) => RecoverableDatabase, RecoverableDatabase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 配列内のすべての要素に対して指定されたコールバック関数を呼び出します。 コールバック関数の戻り値、累積された結果であり、コールバック関数に次の呼び出しの引数として提供されます。
    syntax:
      content: 'function reduce(callbackfn: (previousValue: RecoverableDatabase, currentValue: RecoverableDatabase, currentIndex: number, array: RecoverableDatabase[]) => RecoverableDatabase, initialValue: RecoverableDatabase)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: RecoverableDatabase, currentValue: RecoverableDatabase, currentIndex: number, array: RecoverableDatabase[]) => RecoverableDatabase'
          description: ''
        - id: initialValue
          type:
            - '@azure/arm-sql.RecoverableDatabase'
          description: ''
      return:
        type:
          - '@azure/arm-sql.RecoverableDatabase'
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.RecoverableDatabaseListResult.reduce_2'
    name: 'reduce((previousValue: U, currentValue: RecoverableDatabase, currentIndex: number, array: RecoverableDatabase[]) => U, U)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 配列内のすべての要素に対して指定されたコールバック関数を呼び出します。 コールバック関数の戻り値、累積された結果であり、コールバック関数に次の呼び出しの引数として提供されます。
    syntax:
      content: 'function reduce<U>(callbackfn: (previousValue: U, currentValue: RecoverableDatabase, currentIndex: number, array: RecoverableDatabase[]) => U, initialValue: U)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: U, currentValue: RecoverableDatabase, currentIndex: number, array: RecoverableDatabase[]) => U'
          description: 最大 4 つの引数を受け取る関数。 Reduce メソッドは、配列内の各要素に対して 1 回の callbackfn 関数を呼び出します。
        - id: initialValue
          type:
            - U
          description: |
            初期値が指定されている場合、累積を開始する初期値として使用されます。 Callbackfn 関数の最初の呼び出しでは、配列の値ではなく引数としてこの値を提供します。
      return:
        type:
          - U
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.RecoverableDatabaseListResult.reduceRight'
    name: 'reduceRight((previousValue: RecoverableDatabase, currentValue: RecoverableDatabase, currentIndex: number, array: RecoverableDatabase[]) => RecoverableDatabase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 降順で、配列内のすべての要素に対して指定されたコールバック関数を呼び出します。 コールバック関数の戻り値、累積された結果であり、コールバック関数に次の呼び出しの引数として提供されます。
    syntax:
      content: 'function reduceRight(callbackfn: (previousValue: RecoverableDatabase, currentValue: RecoverableDatabase, currentIndex: number, array: RecoverableDatabase[]) => RecoverableDatabase)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: RecoverableDatabase, currentValue: RecoverableDatabase, currentIndex: number, array: RecoverableDatabase[]) => RecoverableDatabase'
          description: 最大 4 つの引数を受け取る関数。 ReduceRight メソッドは、配列内の各要素に対して 1 回の callbackfn 関数を呼び出します。
      return:
        type:
          - '@azure/arm-sql.RecoverableDatabase'
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.RecoverableDatabaseListResult.reduceRight_1'
    name: 'reduceRight((previousValue: RecoverableDatabase, currentValue: RecoverableDatabase, currentIndex: number, array: RecoverableDatabase[]) => RecoverableDatabase, RecoverableDatabase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 降順で、配列内のすべての要素に対して指定されたコールバック関数を呼び出します。 コールバック関数の戻り値、累積された結果であり、コールバック関数に次の呼び出しの引数として提供されます。
    syntax:
      content: 'function reduceRight(callbackfn: (previousValue: RecoverableDatabase, currentValue: RecoverableDatabase, currentIndex: number, array: RecoverableDatabase[]) => RecoverableDatabase, initialValue: RecoverableDatabase)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: RecoverableDatabase, currentValue: RecoverableDatabase, currentIndex: number, array: RecoverableDatabase[]) => RecoverableDatabase'
          description: ''
        - id: initialValue
          type:
            - '@azure/arm-sql.RecoverableDatabase'
          description: ''
      return:
        type:
          - '@azure/arm-sql.RecoverableDatabase'
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.RecoverableDatabaseListResult.reduceRight_2'
    name: 'reduceRight((previousValue: U, currentValue: RecoverableDatabase, currentIndex: number, array: RecoverableDatabase[]) => U, U)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 降順で、配列内のすべての要素に対して指定されたコールバック関数を呼び出します。 コールバック関数の戻り値、累積された結果であり、コールバック関数に次の呼び出しの引数として提供されます。
    syntax:
      content: 'function reduceRight<U>(callbackfn: (previousValue: U, currentValue: RecoverableDatabase, currentIndex: number, array: RecoverableDatabase[]) => U, initialValue: U)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: U, currentValue: RecoverableDatabase, currentIndex: number, array: RecoverableDatabase[]) => U'
          description: 最大 4 つの引数を受け取る関数。 ReduceRight メソッドは、配列内の各要素に対して 1 回の callbackfn 関数を呼び出します。
        - id: initialValue
          type:
            - U
          description: |
            初期値が指定されている場合、累積を開始する初期値として使用されます。 Callbackfn 関数の最初の呼び出しでは、配列の値ではなく引数としてこの値を提供します。
      return:
        type:
          - U
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.RecoverableDatabaseListResult.reverse'
    name: reverse()
    children: []
    type: method
    langs:
      - typeScript
    summary: 配列内の要素を反転させます。
    syntax:
      content: function reverse()
      parameters: []
      return:
        type:
          - '@azure/arm-sql.RecoverableDatabase[]'
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.RecoverableDatabaseListResult.shift'
    name: shift()
    children: []
    type: method
    langs:
      - typeScript
    summary: 最初の要素を配列から削除し、返します。
    syntax:
      content: function shift()
      parameters: []
      return:
        type:
          - '@azure/arm-sql.RecoverableDatabase | undefined'
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.RecoverableDatabaseListResult.slice'
    name: 'slice(undefined | number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 配列のセクションを返します。
    syntax:
      content: 'function slice(start?: undefined | number, end?: undefined | number)'
      parameters:
        - id: start
          type:
            - undefined | number
          description: 配列の指定した部分の先頭。
          optional: true
        - id: end
          type:
            - undefined | number
          description: |
            配列の指定した部分の末尾。
          optional: true
      return:
        type:
          - '@azure/arm-sql.RecoverableDatabase[]'
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.RecoverableDatabaseListResult.some'
    name: 'some((value: RecoverableDatabase, index: number, array: RecoverableDatabase[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 指定されたコールバック関数が返す配列の任意の要素に対して true かどうかを判断します。
    syntax:
      content: 'function some(callbackfn: (value: RecoverableDatabase, index: number, array: RecoverableDatabase[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: RecoverableDatabase, index: number, array: RecoverableDatabase[]) => boolean'
          description: 最大 3 つの引数を受け取る関数。 Some メソッドは、true を返します、callbackfn まで配列 1 のまたは配列の末尾までの各要素に対して callbackfn 関数を呼び出します。
        - id: thisArg
          type:
            - any
          description: |
            オブジェクトをこのキーワードは callbackfn 関数で参照できます。 ThisArg を省略すると、次のように定義されていないこのとして提供される値。
          optional: true
      return:
        type:
          - boolean
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.RecoverableDatabaseListResult.sort'
    name: 'sort(undefined | (a: RecoverableDatabase, b: RecoverableDatabase) => number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 配列を並べ替えます。
    syntax:
      content: 'function sort(compareFn?: undefined | (a: RecoverableDatabase, b: RecoverableDatabase) => number)'
      parameters:
        - id: compareFn
          type:
            - 'undefined | (a: RecoverableDatabase, b: RecoverableDatabase) => number'
          description: |
            要素の順序を決定するための関数の名前。 省略した場合、要素は、ASCII 文字の並び順を昇順で並べ替えられます。
          optional: true
      return:
        type:
          - this
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.RecoverableDatabaseListResult.splice_1'
    name: 'splice(number, number, RecoverableDatabase[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: 配列から要素を削除し、必要に応じて、要素の新しい位置に挿入し、削除の要素を返します。
    syntax:
      content: 'function splice(start: number, deleteCount: number, items: RecoverableDatabase[])'
      parameters:
        - id: start
          type:
            - number
          description: 要素の削除を開始する配列内の 0 から始まる位置。
        - id: deleteCount
          type:
            - number
          description: 削除する要素の数。
        - id: items
          type:
            - '@azure/arm-sql.RecoverableDatabase[]'
          description: |
            削除した要素の代わりに、配列に挿入する要素。
      return:
        type:
          - '@azure/arm-sql.RecoverableDatabase[]'
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.RecoverableDatabaseListResult.splice'
    name: 'splice(number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 配列から要素を削除し、必要に応じて、要素の新しい位置に挿入し、削除の要素を返します。
    syntax:
      content: 'function splice(start: number, deleteCount?: undefined | number)'
      parameters:
        - id: start
          type:
            - number
          description: 要素の削除を開始する配列内の 0 から始まる位置。
        - id: deleteCount
          type:
            - undefined | number
          description: |
            削除する要素の数。
          optional: true
      return:
        type:
          - '@azure/arm-sql.RecoverableDatabase[]'
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.RecoverableDatabaseListResult.toLocaleString'
    name: toLocaleString()
    children: []
    type: method
    langs:
      - typeScript
    summary: 配列の文字列表現を返します。 要素は、その toLocalString メソッドを使用して文字列に変換されます。
    syntax:
      content: function toLocaleString()
      parameters: []
      return:
        type:
          - string
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.RecoverableDatabaseListResult.toString'
    name: toString()
    children: []
    type: method
    langs:
      - typeScript
    summary: 配列の文字列表現を返します。
    syntax:
      content: function toString()
      parameters: []
      return:
        type:
          - string
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.RecoverableDatabaseListResult.unshift'
    name: 'unshift(RecoverableDatabase[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: 配列の先頭には、新しい要素を挿入します。
    syntax:
      content: 'function unshift(items: RecoverableDatabase[])'
      parameters:
        - id: items
          type:
            - '@azure/arm-sql.RecoverableDatabase[]'
          description: |
            配列の先頭に挿入する要素。
      return:
        type:
          - number
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.RecoverableDatabaseListResult.values'
    name: values()
    children: []
    type: method
    langs:
      - typeScript
    summary: 反復可能値の配列を返します
    syntax:
      content: function values()
      parameters: []
      return:
        type:
          - IterableIterator<@azure/arm-sql.RecoverableDatabase>
    package: '@azure/arm-sql'
references:
  - uid: Array<@azure/arm-sql.RecoverableDatabase>
    name: RecoverableDatabase>
    spec.typeScript:
      - name: Array<
        fullName: Array<
      - name: RecoverableDatabase
        fullName: RecoverableDatabase
        uid: '@azure/arm-sql.RecoverableDatabase'
      - name: '>'
        fullName: '>'
  - uid: 'ConcatArray<@azure/arm-sql.RecoverableDatabase>[]'
    name: 'RecoverableDatabase>[]'
    spec.typeScript:
      - name: ConcatArray<
        fullName: ConcatArray<
      - name: RecoverableDatabase
        fullName: RecoverableDatabase
        uid: '@azure/arm-sql.RecoverableDatabase'
      - name: '>[]'
        fullName: '>[]'
  - uid: '@azure/arm-sql.RecoverableDatabase[]'
    name: 'RecoverableDatabase[]'
    spec.typeScript:
      - name: RecoverableDatabase
        fullName: RecoverableDatabase
        uid: '@azure/arm-sql.RecoverableDatabase'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/arm-sql.RecoverableDatabase'
    name: RecoverableDatabase
    spec.typeScript:
      - name: RecoverableDatabase
        fullName: RecoverableDatabase
        uid: '@azure/arm-sql.RecoverableDatabase'
  - uid: '@azure/arm-sql.RecoverableDatabase | undefined'
    name: RecoverableDatabase | undefined
    spec.typeScript:
      - name: RecoverableDatabase
        fullName: RecoverableDatabase
        uid: '@azure/arm-sql.RecoverableDatabase'
      - name: ' | undefined'
        fullName: ' | undefined'
  - uid: IterableIterator<@azure/arm-sql.RecoverableDatabase>
    name: RecoverableDatabase>
    spec.typeScript:
      - name: IterableIterator<
        fullName: IterableIterator<
      - name: RecoverableDatabase
        fullName: RecoverableDatabase
        uid: '@azure/arm-sql.RecoverableDatabase'
      - name: '>'
        fullName: '>'