### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-cdn.CdnManagementClient'
    name: CdnManagementClient
    fullName: CdnManagementClient
    children:
      - '@azure/arm-cdn.CdnManagementClient.acceptLanguage'
      - '@azure/arm-cdn.CdnManagementClient.apiVersion'
      - '@azure/arm-cdn.CdnManagementClient.beginLongRunningRequest'
      - '@azure/arm-cdn.CdnManagementClient.constructor'
      - '@azure/arm-cdn.CdnManagementClient.checkNameAvailability'
      - '@azure/arm-cdn.CdnManagementClient.checkNameAvailability_2'
      - '@azure/arm-cdn.CdnManagementClient.checkNameAvailability_1'
      - '@azure/arm-cdn.CdnManagementClient.checkNameAvailabilityWithSubscription'
      - '@azure/arm-cdn.CdnManagementClient.checkNameAvailabilityWithSubscription_2'
      - '@azure/arm-cdn.CdnManagementClient.checkNameAvailabilityWithSubscription_1'
      - '@azure/arm-cdn.CdnManagementClient.credentials'
      - '@azure/arm-cdn.CdnManagementClient.customDomains'
      - '@azure/arm-cdn.CdnManagementClient.edgeNodes'
      - '@azure/arm-cdn.CdnManagementClient.endpoints'
      - '@azure/arm-cdn.CdnManagementClient.longRunningOperationRetryTimeout'
      - '@azure/arm-cdn.CdnManagementClient.operations'
      - '@azure/arm-cdn.CdnManagementClient.origins'
      - '@azure/arm-cdn.CdnManagementClient.profiles'
      - '@azure/arm-cdn.CdnManagementClient.resourceUsage'
      - '@azure/arm-cdn.CdnManagementClient.restoreLROPoller'
      - '@azure/arm-cdn.CdnManagementClient.sendLongRunningRequest'
      - '@azure/arm-cdn.CdnManagementClient.sendLRORequest'
      - '@azure/arm-cdn.CdnManagementClient.sendOperationRequest'
      - '@azure/arm-cdn.CdnManagementClient.sendRequest'
      - '@azure/arm-cdn.CdnManagementClient.subscriptionId'
      - '@azure/arm-cdn.CdnManagementClient.validateProbe'
      - '@azure/arm-cdn.CdnManagementClient.validateProbe_2'
      - '@azure/arm-cdn.CdnManagementClient.validateProbe_1'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@azure/arm-cdn.CdnManagementClientContext'
    package: '@azure/arm-cdn'
  - uid: '@azure/arm-cdn.CdnManagementClient.acceptLanguage'
    name: acceptLanguage
    fullName: acceptLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'acceptLanguage: string'
      return:
        type:
          - string
    package: '@azure/arm-cdn'
  - uid: '@azure/arm-cdn.CdnManagementClient.apiVersion'
    name: apiVersion
    fullName: apiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'apiVersion?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-cdn'
  - uid: '@azure/arm-cdn.CdnManagementClient.beginLongRunningRequest'
    name: 'beginLongRunningRequest(RequestPrepareOptions | WebResource, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: (操作の実行時間が長い) LRO の最初の要求を送信し、LRO をポーリングし、LRO が終了したかどうかをチェックするメソッドを提供する、HttpLongRunningOperationResponse を取得します。
    syntax:
      content: 'function beginLongRunningRequest(request: RequestPrepareOptions | WebResource, options?: RequestOptionsBase)'
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: 要求オブジェクト
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cdn'
  - uid: '@azure/arm-cdn.CdnManagementClient.constructor'
    name: 'CdnManagementClient(ServiceClientCredentials, string, Models.CdnManagementClientOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: CdnManagementClient クラスの新しいインスタンスを初期化します。
    syntax:
      content: 'new CdnManagementClient(credentials: ServiceClientCredentials, subscriptionId: string, options?: Models.CdnManagementClientOptions)'
      parameters:
        - id: credentials
          type:
            - ServiceClientCredentials
          description: Azure に接続するクライアントに必要な資格情報。
        - id: subscriptionId
          type:
            - string
          description: Azure サブスクリプション ID。
        - id: options
          type:
            - Models.CdnManagementClientOptions
          description: ''
          optional: true
    package: '@azure/arm-cdn'
  - uid: '@azure/arm-cdn.CdnManagementClient.checkNameAvailability'
    name: 'checkNameAvailability(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: リソース名の可用性を確認します。 これは、リソース名が CDN エンドポイントなどのグローバル一意識別に必要です。
    syntax:
      content: 'function checkNameAvailability(name: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: name
          type:
            - string
          description: 検証対象のリソース名。
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.CheckNameAvailabilityResponse>
    package: '@azure/arm-cdn'
  - uid: '@azure/arm-cdn.CdnManagementClient.checkNameAvailability_2'
    name: 'checkNameAvailability(string, RequestOptionsBase, ServiceCallback<CheckNameAvailabilityOutput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function checkNameAvailability(name: string, options: RequestOptionsBase, callback: ServiceCallback<CheckNameAvailabilityOutput>)'
      parameters:
        - id: name
          type:
            - string
          description: 検証対象のリソース名。
        - id: options
          type:
            - RequestOptionsBase
          description: 省略可能なパラメーター
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cdn.CheckNameAvailabilityOutput>
          description: |
            コールバック
      return:
        type:
          - Promise<Models.CheckNameAvailabilityResponse>
    package: '@azure/arm-cdn'
  - uid: '@azure/arm-cdn.CdnManagementClient.checkNameAvailability_1'
    name: 'checkNameAvailability(string, ServiceCallback<CheckNameAvailabilityOutput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function checkNameAvailability(name: string, callback: ServiceCallback<CheckNameAvailabilityOutput>)'
      parameters:
        - id: name
          type:
            - string
          description: 検証対象のリソース名。
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cdn.CheckNameAvailabilityOutput>
          description: |
            コールバック
      return:
        type:
          - Promise<Models.CheckNameAvailabilityResponse>
    package: '@azure/arm-cdn'
  - uid: '@azure/arm-cdn.CdnManagementClient.checkNameAvailabilityWithSubscription'
    name: 'checkNameAvailabilityWithSubscription(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: リソース名の可用性を確認します。 これは、リソース名が CDN エンドポイントなどのグローバル一意識別に必要です。
    syntax:
      content: 'function checkNameAvailabilityWithSubscription(name: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: name
          type:
            - string
          description: 検証対象のリソース名。
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.CheckNameAvailabilityWithSubscriptionResponse>
    package: '@azure/arm-cdn'
  - uid: '@azure/arm-cdn.CdnManagementClient.checkNameAvailabilityWithSubscription_2'
    name: 'checkNameAvailabilityWithSubscription(string, RequestOptionsBase, ServiceCallback<CheckNameAvailabilityOutput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function checkNameAvailabilityWithSubscription(name: string, options: RequestOptionsBase, callback: ServiceCallback<CheckNameAvailabilityOutput>)'
      parameters:
        - id: name
          type:
            - string
          description: 検証対象のリソース名。
        - id: options
          type:
            - RequestOptionsBase
          description: 省略可能なパラメーター
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cdn.CheckNameAvailabilityOutput>
          description: |
            コールバック
      return:
        type:
          - Promise<Models.CheckNameAvailabilityWithSubscriptionResponse>
    package: '@azure/arm-cdn'
  - uid: '@azure/arm-cdn.CdnManagementClient.checkNameAvailabilityWithSubscription_1'
    name: 'checkNameAvailabilityWithSubscription(string, ServiceCallback<CheckNameAvailabilityOutput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function checkNameAvailabilityWithSubscription(name: string, callback: ServiceCallback<CheckNameAvailabilityOutput>)'
      parameters:
        - id: name
          type:
            - string
          description: 検証対象のリソース名。
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cdn.CheckNameAvailabilityOutput>
          description: |
            コールバック
      return:
        type:
          - Promise<Models.CheckNameAvailabilityWithSubscriptionResponse>
    package: '@azure/arm-cdn'
  - uid: '@azure/arm-cdn.CdnManagementClient.credentials'
    name: credentials
    fullName: credentials
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type:
          - ServiceClientCredentials
    package: '@azure/arm-cdn'
  - uid: '@azure/arm-cdn.CdnManagementClient.customDomains'
    name: customDomains
    fullName: customDomains
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'customDomains: CustomDomains'
      return:
        type:
          - '@azure/arm-cdn.CustomDomains'
    package: '@azure/arm-cdn'
  - uid: '@azure/arm-cdn.CdnManagementClient.edgeNodes'
    name: edgeNodes
    fullName: edgeNodes
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'edgeNodes: EdgeNodes'
      return:
        type:
          - '@azure/arm-cdn.EdgeNodes'
    package: '@azure/arm-cdn'
  - uid: '@azure/arm-cdn.CdnManagementClient.endpoints'
    name: endpoints
    fullName: endpoints
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'endpoints: Endpoints'
      return:
        type:
          - '@azure/arm-cdn.Endpoints'
    package: '@azure/arm-cdn'
  - uid: '@azure/arm-cdn.CdnManagementClient.longRunningOperationRetryTimeout'
    name: longRunningOperationRetryTimeout
    fullName: longRunningOperationRetryTimeout
    children: []
    langs:
      - typeScript
    type: property
    summary: 長時間実行される操作の秒の再試行タイムアウト。 既定値は 30 です。
    optional: true
    syntax:
      content: 'longRunningOperationRetryTimeout?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/arm-cdn'
  - uid: '@azure/arm-cdn.CdnManagementClient.operations'
    name: operations
    fullName: operations
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'operations: Operations'
      return:
        type:
          - '@azure/arm-cdn.Operations'
    package: '@azure/arm-cdn'
  - uid: '@azure/arm-cdn.CdnManagementClient.origins'
    name: origins
    fullName: origins
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'origins: Origins'
      return:
        type:
          - '@azure/arm-cdn.Origins'
    package: '@azure/arm-cdn'
  - uid: '@azure/arm-cdn.CdnManagementClient.profiles'
    name: profiles
    fullName: profiles
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'profiles: Profiles'
      return:
        type:
          - '@azure/arm-cdn.Profiles'
    package: '@azure/arm-cdn'
  - uid: '@azure/arm-cdn.CdnManagementClient.resourceUsage'
    name: resourceUsage
    fullName: resourceUsage
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'resourceUsage: ResourceUsageOperations'
      return:
        type:
          - '@azure/arm-cdn.ResourceUsageOperations'
    package: '@azure/arm-cdn'
  - uid: '@azure/arm-cdn.CdnManagementClient.restoreLROPoller'
    name: restoreLROPoller(LROPollState)
    children: []
    type: method
    langs:
      - typeScript
    summary: 指定された LROPollState から、LROPoller を復元します。 このメソッドは、別のプロセスやマシンで、LROPoller を再作成に使用できます。
    syntax:
      content: 'function restoreLROPoller(lroPollState: LROPollState)'
      parameters:
        - id: lroPollState
          type:
            - LROPollState
          description: ''
      return:
        type:
          - LROPoller
    package: '@azure/arm-cdn'
  - uid: '@azure/arm-cdn.CdnManagementClient.sendLongRunningRequest'
    name: 'sendLongRunningRequest(RequestPrepareOptions | WebResource, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ポーリングされ、最終的な結果を提供する要求を作成するためのメカニズムを提供します。
    syntax:
      content: 'function sendLongRunningRequest(request: RequestPrepareOptions | WebResource, options?: RequestOptionsBase)'
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: 要求オブジェクト
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/arm-cdn'
  - uid: '@azure/arm-cdn.CdnManagementClient.sendLRORequest'
    name: 'sendLRORequest(OperationArguments, OperationSpec, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: (操作の実行時間が長い) LRO の最初の要求を送信し、LRO をポーリングし、LRO が終了したかどうかをチェックするメソッドを提供する、LROPoller を取得します。
    syntax:
      content: 'function sendLRORequest(operationArguments: OperationArguments, operationSpec: OperationSpec, options?: RequestOptionsBase)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: 操作の引数。
        - id: operationSpec
          type:
            - OperationSpec
          description: 操作を指定します。
        - id: options
          type:
            - RequestOptionsBase
          description: 要求時に送信される追加のオプション。
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cdn'
  - uid: '@azure/arm-cdn.CdnManagementClient.sendOperationRequest'
    name: 'sendOperationRequest(OperationArguments, OperationSpec, ServiceCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 指定された OperationSpec を使用して設定される HTTP 要求を送信します。
    syntax:
      content: 'function sendOperationRequest(operationArguments: OperationArguments, operationSpec: OperationSpec, callback?: ServiceCallback<any>)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: この引数から HTTP 要求のテンプレート化された値が設定されます。
        - id: operationSpec
          type:
            - OperationSpec
          description: 使用して設定、httpRequest OperationSpec します。
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            応答が受信されたときに呼び出すコールバック。
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-cdn'
  - uid: '@azure/arm-cdn.CdnManagementClient.sendRequest'
    name: sendRequest(RequestPrepareOptions | WebResource)
    children: []
    type: method
    langs:
      - typeScript
    summary: 指定された httpRequest を送信します。
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResource)'
      parameters:
        - id: options
          type:
            - RequestPrepareOptions | WebResource
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/arm-cdn'
  - uid: '@azure/arm-cdn.CdnManagementClient.subscriptionId'
    name: subscriptionId
    fullName: subscriptionId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'subscriptionId: string'
      return:
        type:
          - string
    package: '@azure/arm-cdn'
  - uid: '@azure/arm-cdn.CdnManagementClient.validateProbe'
    name: 'validateProbe(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: かどうか、プローブ パスが有効なパスとファイルにアクセスすることができますを確認します。 プローブのパスは、CDN エンドポイントを経由して動的なコンテンツの配信を迅速に配信元サーバーでホストされているファイルへのパス。 このパスは、エンドポイントの構成で指定された配信元のパスを基準とします。
    syntax:
      content: 'function validateProbe(probeURL: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: probeURL
          type:
            - string
          description: 検証対象のプローブ URL。
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ValidateProbeResponse>
    package: '@azure/arm-cdn'
  - uid: '@azure/arm-cdn.CdnManagementClient.validateProbe_2'
    name: 'validateProbe(string, RequestOptionsBase, ServiceCallback<ValidateProbeOutput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function validateProbe(probeURL: string, options: RequestOptionsBase, callback: ServiceCallback<ValidateProbeOutput>)'
      parameters:
        - id: probeURL
          type:
            - string
          description: 検証対象のプローブ URL。
        - id: options
          type:
            - RequestOptionsBase
          description: 省略可能なパラメーター
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cdn.ValidateProbeOutput>
          description: |
            コールバック
      return:
        type:
          - Promise<Models.ValidateProbeResponse>
    package: '@azure/arm-cdn'
  - uid: '@azure/arm-cdn.CdnManagementClient.validateProbe_1'
    name: 'validateProbe(string, ServiceCallback<ValidateProbeOutput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function validateProbe(probeURL: string, callback: ServiceCallback<ValidateProbeOutput>)'
      parameters:
        - id: probeURL
          type:
            - string
          description: 検証対象のプローブ URL。
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cdn.ValidateProbeOutput>
          description: |
            コールバック
      return:
        type:
          - Promise<Models.ValidateProbeResponse>
    package: '@azure/arm-cdn'
references:
  - uid: '@azure/arm-cdn.CdnManagementClientContext'
    name: CdnManagementClientContext
    spec.typeScript:
      - name: CdnManagementClientContext
        fullName: CdnManagementClientContext
        uid: '@azure/arm-cdn.CdnManagementClientContext'
  - uid: '@azure/arm-cdn.CustomDomains'
    name: CustomDomains
    spec.typeScript:
      - name: CustomDomains
        fullName: CustomDomains
        uid: '@azure/arm-cdn.CustomDomains'
  - uid: '@azure/arm-cdn.EdgeNodes'
    name: EdgeNodes
    spec.typeScript:
      - name: EdgeNodes
        fullName: EdgeNodes
        uid: '@azure/arm-cdn.EdgeNodes'
  - uid: '@azure/arm-cdn.Endpoints'
    name: Endpoints
    spec.typeScript:
      - name: Endpoints
        fullName: Endpoints
        uid: '@azure/arm-cdn.Endpoints'
  - uid: '@azure/arm-cdn.Operations'
    name: Operations
    spec.typeScript:
      - name: Operations
        fullName: Operations
        uid: '@azure/arm-cdn.Operations'
  - uid: '@azure/arm-cdn.Origins'
    name: Origins
    spec.typeScript:
      - name: Origins
        fullName: Origins
        uid: '@azure/arm-cdn.Origins'
  - uid: '@azure/arm-cdn.Profiles'
    name: Profiles
    spec.typeScript:
      - name: Profiles
        fullName: Profiles
        uid: '@azure/arm-cdn.Profiles'
  - uid: '@azure/arm-cdn.ResourceUsageOperations'
    name: ResourceUsageOperations
    spec.typeScript:
      - name: ResourceUsageOperations
        fullName: ResourceUsageOperations
        uid: '@azure/arm-cdn.ResourceUsageOperations'
  - uid: ServiceCallback<@azure/arm-cdn.CheckNameAvailabilityOutput>
    name: CheckNameAvailabilityOutput>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CheckNameAvailabilityOutput
        fullName: CheckNameAvailabilityOutput
        uid: '@azure/arm-cdn.CheckNameAvailabilityOutput'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cdn.ValidateProbeOutput>
    name: ValidateProbeOutput>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ValidateProbeOutput
        fullName: ValidateProbeOutput
        uid: '@azure/arm-cdn.ValidateProbeOutput'
      - name: '>'
        fullName: '>'