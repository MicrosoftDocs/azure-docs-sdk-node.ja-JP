### YamlMime:UniversalReference
items:
  - uid: '@azure/event-hubs.EventPosition'
    name: EventPosition
    fullName: EventPosition
    children:
      - '@azure/event-hubs.EventPosition.customFilter'
      - '@azure/event-hubs.EventPosition.endOfStream'
      - '@azure/event-hubs.EventPosition.enqueuedTime'
      - '@azure/event-hubs.EventPosition.constructor'
      - '@azure/event-hubs.EventPosition.fromEnd'
      - '@azure/event-hubs.EventPosition.fromEnqueuedTime'
      - '@azure/event-hubs.EventPosition.fromOffset'
      - '@azure/event-hubs.EventPosition.fromSequenceNumber'
      - '@azure/event-hubs.EventPosition.fromStart'
      - '@azure/event-hubs.EventPosition.getExpression'
      - '@azure/event-hubs.EventPosition.isInclusive'
      - '@azure/event-hubs.EventPosition.offset'
      - '@azure/event-hubs.EventPosition.sequenceNumber'
      - '@azure/event-hubs.EventPosition.startOfStream'
      - '@azure/event-hubs.EventPosition.withCustomFilter'
    langs:
      - typeScript
    type: class
    summary: |-
      <span data-ttu-id="82c77-101">イベント ハブ レシーバーの作成時に表すオプションを設定できます。</span><span class="sxs-lookup"><span data-stu-id="82c77-101">Represents options can be set during the creation of a event hub receiver.</span></span>
      <span data-ttu-id="82c77-102">位置を定義する@link~ EventData でイベント ハブ パーティション。</span><span class="sxs-lookup"><span data-stu-id="82c77-102">Defines a position of an @link~EventData in the event hub partition.</span></span>
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventPosition.customFilter'
    name: customFilter
    fullName: customFilter
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="82c77-103">{文字列}[customFilter]受信側で設定する必要があるカスタム フィルター式。</span><span class="sxs-lookup"><span data-stu-id="82c77-103">{string} [customFilter] The custom filter expression that needs to be set on the receiver.</span></span>'
    optional: true
    syntax:
      content: 'customFilter?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventPosition.endOfStream'
    name: endOfStream
    fullName: endOfStream
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="82c77-104">イベントからのオフセットが届いて {文字列} endOfStream:`"@latest"`します。</span><span class="sxs-lookup"><span data-stu-id="82c77-104">{string} endOfStream The offset from which events would be received: `"@latest"`.</span></span>'
    syntax:
      content: 'static endOfStream: string'
      return:
        type:
          - string
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventPosition.enqueuedTime'
    name: enqueuedTime
    fullName: enqueuedTime
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="82c77-105">{0} 日付 | 数}[enqueuedTime]位置にあるイベントのエンキューされた時刻。</span><span class="sxs-lookup"><span data-stu-id="82c77-105">{Date|number} [enqueuedTime] The enqueued time of the event at the position.</span></span> <span data-ttu-id="82c77-106">不確定になる位置がシーケンス番号またはオフセットから先ほど作成した場合。</span><span class="sxs-lookup"><span data-stu-id="82c77-106">It can be undefined if the position is just created from a sequence number or an offset.</span></span>'
    optional: true
    syntax:
      content: 'enqueuedTime?: Date | number'
      return:
        type:
          - Date | number
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventPosition.constructor'
    name: EventPosition(EventPositionOptions)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new EventPosition(options?: EventPositionOptions)'
      parameters:
        - id: options
          type:
            - EventPositionOptions
          description: ''
          optional: true
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventPosition.fromEnd'
    name: fromEnd()
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="82c77-107">ストリームの末尾の位置を返します。</span><span class="sxs-lookup"><span data-stu-id="82c77-107">Returns the position for the end of a stream.</span></span> <span data-ttu-id="82c77-108">レシーバーの作成、受信者を作成した後、パーティションに [次へ] の使用可能なイベントからの受信を開始するには、この位置を指定します。</span><span class="sxs-lookup"><span data-stu-id="82c77-108">Provide this position in receiver creation to start receiving from the next available event in the partition after the receiver is created.</span></span>'
    syntax:
      content: static function fromEnd()
      parameters: []
      return:
        type:
          - '@azure/event-hubs.EventPosition'
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventPosition.fromEnqueuedTime'
    name: fromEnqueuedTime(Date | number)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="82c77-109">指定したエンキュー時に、位置を作成します。</span><span class="sxs-lookup"><span data-stu-id="82c77-109">Creates a position at the given enqueued time.</span></span>
    syntax:
      content: 'static function fromEnqueuedTime(enqueuedTime: Date | number)'
      parameters:
        - id: enqueuedTime
          type:
            - Date | number
          description: <span data-ttu-id="82c77-110">エンキュー時間。</span><span class="sxs-lookup"><span data-stu-id="82c77-110">The enqueue time.</span></span> <span data-ttu-id="82c77-111">この値は、メッセージのエンキューの実際の時間を表します。</span><span class="sxs-lookup"><span data-stu-id="82c77-111">This value represents the actual time of enqueuing the message.</span></span>
      return:
        type:
          - '@azure/event-hubs.EventPosition'
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventPosition.fromOffset'
    name: 'fromOffset(string, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="82c77-112">指定されたオフセット位置を作成します。</span><span class="sxs-lookup"><span data-stu-id="82c77-112">Creates a position at the given offset.</span></span>
    syntax:
      content: 'static function fromOffset(offset: string, isInclusive?: undefined | false | true)'
      parameters:
        - id: offset
          type:
            - string
          description: |-
            <span data-ttu-id="82c77-113">イベント ハブ パーティション ストリームを基準としたデータのオフセット。</span><span class="sxs-lookup"><span data-stu-id="82c77-113">The offset of the data relative to the Event Hub partition stream.</span></span>
            <span data-ttu-id="82c77-114">オフセットは、Event Hubs ストリーム内のイベントのマーカーまたは識別子です。</span><span class="sxs-lookup"><span data-stu-id="82c77-114">The offset is a marker or identifier for an event within the Event Hubs stream.</span></span>
            <span data-ttu-id="82c77-115">この識別子は、Event Hubs ストリームのパーティション内で一意です。</span><span class="sxs-lookup"><span data-stu-id="82c77-115">The identifier is unique within a partition of the Event Hubs stream.</span></span>
        - id: isInclusive
          type:
            - undefined | false | true
          description: '<span data-ttu-id="82c77-116">True の場合、指定されたイベントは含まれています。それ以外の場合、次のイベントが返されます。</span><span class="sxs-lookup"><span data-stu-id="82c77-116">If true, the specified event is included; otherwise the next event is returned.</span></span> <span data-ttu-id="82c77-117">既定値は false です。</span><span class="sxs-lookup"><span data-stu-id="82c77-117">Default: false.</span></span>'
          optional: true
      return:
        type:
          - '@azure/event-hubs.EventPosition'
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventPosition.fromSequenceNumber'
    name: 'fromSequenceNumber(number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="82c77-118">指定されたシーケンス番号での位置を作成します。</span><span class="sxs-lookup"><span data-stu-id="82c77-118">Creates a position at the given sequence number.</span></span>
    syntax:
      content: 'static function fromSequenceNumber(sequenceNumber: number, isInclusive?: undefined | false | true)'
      parameters:
        - id: sequenceNumber
          type:
            - number
          description: <span data-ttu-id="82c77-119">イベント ハブのパーティションのストリーム内のイベントの論理シーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="82c77-119">The logical sequence number of the event within the partition stream of the Event Hub.</span></span>
        - id: isInclusive
          type:
            - undefined | false | true
          description: '<span data-ttu-id="82c77-120">True の場合、指定されたイベントは含まれています。それ以外の場合、次のイベントが返されます。</span><span class="sxs-lookup"><span data-stu-id="82c77-120">If true, the specified event is included; otherwise the next event is returned.</span></span> <span data-ttu-id="82c77-121">既定値は false。</span><span class="sxs-lookup"><span data-stu-id="82c77-121">Default false.</span></span>'
          optional: true
      return:
        type:
          - '@azure/event-hubs.EventPosition'
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventPosition.fromStart'
    name: fromStart()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="82c77-122">ストリームの開始位置を返します。</span><span class="sxs-lookup"><span data-stu-id="82c77-122">Returns the position for the start of a stream.</span></span> <span data-ttu-id="82c77-123">レシーバーの作成、パーティションの最初の使用可能なイベントからの受信を開始するには、この位置を指定します。</span><span class="sxs-lookup"><span data-stu-id="82c77-123">Provide this position in receiver creation to start receiving from the first available event in the partition.</span></span>
    syntax:
      content: static function fromStart()
      parameters: []
      return:
        type:
          - '@azure/event-hubs.EventPosition'
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventPosition.getExpression'
    name: getExpression()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="82c77-124">ソースに設定する必要がある式 (フィルター句) を取得します。</span><span class="sxs-lookup"><span data-stu-id="82c77-124">Gets the expression (filter clause) that needs to be set on the source.</span></span>
    syntax:
      content: function getExpression()
      parameters: []
      return:
        type:
          - string
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventPosition.isInclusive'
    name: isInclusive
    fullName: isInclusive
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="82c77-125">{ブール} isInclusive 場合か、指定されたオフセットには、現在のイベントが含まれることを示します。</span><span class="sxs-lookup"><span data-stu-id="82c77-125">{boolean} isInclusive Indicates if the current event at the specified offset is included or not.</span></span> <span data-ttu-id="82c77-126">これはオフセットが設定されている場合にのみ当てはまります。</span><span class="sxs-lookup"><span data-stu-id="82c77-126">It is only applicable if offset is set.</span></span> <span data-ttu-id="82c77-127">既定値: false。</span><span class="sxs-lookup"><span data-stu-id="82c77-127">Default value: false.</span></span>'
    syntax:
      content: 'isInclusive: boolean'
      return:
        type:
          - boolean
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventPosition.offset'
    name: offset
    fullName: offset
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="82c77-128">{文字列}[オフセット]位置にあるイベントのオフセット。</span><span class="sxs-lookup"><span data-stu-id="82c77-128">{string} [offset] The offset of the event at the position.</span></span> <span data-ttu-id="82c77-129">不確定になる位置がシーケンス番号または、エンキューされた時刻から先ほど作成した場合。</span><span class="sxs-lookup"><span data-stu-id="82c77-129">It can be undefined if the position is just created from a sequence number or an enqueued time.</span></span>'
    optional: true
    syntax:
      content: 'offset?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventPosition.sequenceNumber'
    name: sequenceNumber
    fullName: sequenceNumber
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="82c77-130">{number}[sequenceNumber]位置にあるイベントのシーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="82c77-130">{number} [sequenceNumber] The sequence number of the event at the position.</span></span> <span data-ttu-id="82c77-131">不確定になる位置が、エンキューされた時刻またはオフセットから先ほど作成した場合。</span><span class="sxs-lookup"><span data-stu-id="82c77-131">It can be undefined if the position is just created from an enqueued time or an offset.</span></span>'
    optional: true
    syntax:
      content: 'sequenceNumber?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventPosition.startOfStream'
    name: startOfStream
    fullName: startOfStream
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="82c77-132">イベントからのオフセットが届いて {文字列} startOfStream:`"-1"`します。</span><span class="sxs-lookup"><span data-stu-id="82c77-132">{string} startOfStream The offset from which events would be received: `"-1"`.</span></span>'
    syntax:
      content: 'static startOfStream: string'
      return:
        type:
          - string
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventPosition.withCustomFilter'
    name: withCustomFilter(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="82c77-133">指定されたカスタム フィルターに基づく位置を作成します。</span><span class="sxs-lookup"><span data-stu-id="82c77-133">Creates a position based on the given custom filter.</span></span>
    syntax:
      content: 'static function withCustomFilter(customFilter: string)'
      parameters:
        - id: customFilter
          type:
            - string
          description: |
            <span data-ttu-id="82c77-134">受信側に適用する必要があるカスタム フィルター式。</span><span class="sxs-lookup"><span data-stu-id="82c77-134">The cutom filter expression that needs to be applied on the receiver.</span></span> <span data-ttu-id="82c77-135">これは、1 つがある場合にのみ使用して他の方法の`fromOffset()`、 `fromSequenceNumber()`、`fromEnqueuedTime()`シナリオではありません。</span><span class="sxs-lookup"><span data-stu-id="82c77-135">This should be used only when one of the other methods `fromOffset()`, `fromSequenceNumber()`, `fromEnqueuedTime()` is not applicable for your scenario.</span></span>
      return:
        type:
          - '@azure/event-hubs.EventPosition'
    package: '@azure/event-hubs'
references:
  - uid: '@azure/event-hubs.EventPosition'
    name: EventPosition
    spec.typeScript:
      - name: EventPosition
        fullName: EventPosition
        uid: '@azure/event-hubs.EventPosition'