### YamlMime:UniversalReference
ms.openlocfilehash: fd9659c6d754a551c1196d82e6d7d47fe353e207
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 08/12/2018
ms.locfileid: "40070558"
items:
- uid: '@azure/cosmos.Item'
  name: Item
  fullName: Item
  children:
  - '@azure/cosmos.Item.container'
  - '@azure/cosmos.Item.delete'
  - '@azure/cosmos.Item.delete_1'
  - '@azure/cosmos.Item.id'
  - '@azure/cosmos.Item.primaryKey'
  - '@azure/cosmos.Item.read'
  - '@azure/cosmos.Item.read_1'
  - '@azure/cosmos.Item.replace'
  - '@azure/cosmos.Item.replace_1'
  - '@azure/cosmos.Item.url'
  langs:
  - typeScript
  type: class
  summary: 特定の項目の操作を実行するために使用します。
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Item.container'
  name: container
  fullName: container
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'container: Container'
    return:
      type:
      - '@azure/cosmos.Container'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Item.delete'
  name: delete
  children: []
  type: method
  langs:
  - typeScript
  summary: 項目を削除します。
  syntax:
    content: 'function delete(options?: RequestOptions)'
    parameters:
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: >
        パーティション キーなど、要求の追加のオプション。
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.ItemResponse<@azure/cosmos.ItemDefinition>>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Item.delete_1'
  name: delete
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    項目を削除します。

    いずれかには、型、T は必ずしも SDK によって適用されませんが用意されています。

    プロパティを取得増減する可能性があり、、ロジックを適用します。
  syntax:
    content: 'function delete<T>(options?: RequestOptions)'
    parameters:
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: >
        パーティション キーなど、要求の追加のオプション。
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.ItemResponse<T>>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Item.id'
  name: id
  fullName: id
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'id: string'
    return:
      type:
      - string
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Item.primaryKey'
  name: primaryKey
  fullName: primaryKey
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'primaryKey: string'
    return:
      type:
      - string
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Item.read'
  name: read
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    項目の定義を読み取る。

    JSON 項目のセットのスキーマはありません。 カスタム プロパティの任意の数、含めることができます。
  syntax:
    content: 'function read(options?: RequestOptions)'
    parameters:
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: >
        パーティション キーなど、要求の追加のオプション。

        ただし、オプションのオブジェクトのパーティション キーを提供する場合は、主キーが上書きされます`this.primaryKey`します。
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.ItemResponse<@azure/cosmos.ItemDefinition>>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Item.read_1'
  name: read
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    項目の定義を読み取る。

    いずれかには、型、T は必ずしも SDK によって適用されませんが用意されています。

    プロパティを取得増減する可能性があり、、ロジックを適用します。

    渡すことはありませんが、型がクラスの場合は、`typeof`比較、一致するプロトタイプが必要ないためです。

    のみのインターフェイスを使用することをお勧めします。


    JSON 項目のセットのスキーマはありません。 カスタム プロパティの任意の数、含めることができます。
  syntax:
    content: 'function read<T>(options?: RequestOptions)'
    parameters:
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: >
        パーティション キーなど、要求の追加のオプション。

        ただし、オプションのオブジェクトのパーティション キーを提供する場合は、主キーが上書きされます`this.primaryKey`します。
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.ItemResponse<T>>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Item.replace'
  name: replace
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    項目の定義に置き換えます。

    JSON 項目のセットのスキーマはありません。 カスタム プロパティの任意の数、含めることができます。
  syntax:
    content: 'function replace(body: ItemDefinition, options?: RequestOptions)'
    parameters:
    - id: body
      type:
      - '@azure/cosmos.ItemDefinition'
      description: 既存の定義<xref:Item>の定義します。
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: >
        パーティション キーなど、要求の追加のオプション。
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.ItemResponse<@azure/cosmos.ItemDefinition>>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Item.replace_1'
  name: replace
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    項目の定義に置き換えます。

    いずれかには、型、T は必ずしも SDK によって適用されませんが用意されています。

    プロパティを取得増減する可能性があり、、ロジックを適用します。


    JSON 項目のセットのスキーマはありません。 カスタム プロパティの任意の数、含めることができます。
  syntax:
    content: 'function replace<T>(body: T, options?: RequestOptions)'
    parameters:
    - id: body
      type:
      - T
      description: 既存の定義<xref:Item>の定義します。
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: >
        パーティション キーなど、要求の追加のオプション。
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.ItemResponse<T>>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Item.url'
  name: url
  fullName: url
  children: []
  langs:
  - typeScript
  type: property
  summary: リソースへの参照の URL を返します。 アクセス許可でリンクする場合に使用されます。
  syntax:
    content: 'url: string'
    return:
      type:
      - string
  package: '@azure/cosmos'
references:
- uid: '@azure/cosmos.Container'
  spec.typeScript:
  - name: Container
    fullName: Container
    uid: '@azure/cosmos.Container'
- uid: '@azure/cosmos.RequestOptions'
  spec.typeScript:
  - name: RequestOptions
    fullName: RequestOptions
    uid: '@azure/cosmos.RequestOptions'
- uid: Promise<@azure/cosmos.ItemResponse<@azure/cosmos.ItemDefinition>>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ItemResponse
    fullName: ItemResponse
    uid: '@azure/cosmos.ItemResponse'
  - name: <
    fullName: <
  - name: ItemDefinition
    fullName: ItemDefinition
    uid: '@azure/cosmos.ItemDefinition'
  - name: '>>'
    fullName: '>>'
- uid: Promise<@azure/cosmos.ItemResponse<T>>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ItemResponse
    fullName: ItemResponse
    uid: '@azure/cosmos.ItemResponse'
  - name: <T>>
    fullName: <T>>
- uid: '@azure/cosmos.ItemDefinition'
  spec.typeScript:
  - name: ItemDefinition
    fullName: ItemDefinition
    uid: '@azure/cosmos.ItemDefinition'
