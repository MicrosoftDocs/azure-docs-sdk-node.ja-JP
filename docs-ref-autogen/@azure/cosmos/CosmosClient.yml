### YamlMime:UniversalReference
ms.openlocfilehash: c42f476b7b2548bfccf1b3212b5a267458f632a2
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 08/12/2018
ms.locfileid: "40069287"
items:
- uid: '@azure/cosmos.CosmosClient'
  name: CosmosClient
  fullName: CosmosClient
  children:
  - '@azure/cosmos.CosmosClient.constructor'
  - '@azure/cosmos.CosmosClient.database'
  - '@azure/cosmos.CosmosClient.databases'
  - '@azure/cosmos.CosmosClient.getDatabaseAccount'
  - '@azure/cosmos.CosmosClient.offer'
  - '@azure/cosmos.CosmosClient.offers'
  langs:
  - typeScript
  type: class
  summary: >-
    Azure Cosmos DB データベース アカウントのクライアント側の論理表現を提供します。

    このクライアントは、構成し、Azure Cosmos DB データベース サービスで要求の実行に使用されます。
  package: '@azure/cosmos'
- uid: '@azure/cosmos.CosmosClient.constructor'
  name: CosmosClient
  children: []
  type: constructor
  langs:
  - typeScript
  summary: 新たに作成<xref:CosmosClient>オブジェクト。 参照してください<xref:CosmosClientOptions>オプションの詳細については使用できます。
  syntax:
    content: 'new CosmosClient(options: CosmosClientOptions)'
    parameters:
    - id: options
      type:
      - '@azure/cosmos.CosmosClientOptions'
      description: >
        オプションのバッグ - 以降が必要なエンドポイントと認証を構成します。
  package: '@azure/cosmos'
- uid: '@azure/cosmos.CosmosClient.database'
  name: database
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    読み取り、更新、または id で既存のデータベースを削除またはそのデータベースに属するコンテナーへのアクセスに使用されます。

    ネットワーク要求されることはありません。 使用`.read`取得した後、データベースに関する情報を取得する、<xref:Database>オブジェクト。
  syntax:
    content: 'function database(id: string)'
    parameters:
    - id: id
      type:
      - string
      description: データベースの id。
    return:
      type:
      - '@azure/cosmos.Database'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.CosmosClient.databases'
  name: databases
  fullName: databases
  children: []
  langs:
  - typeScript
  type: property
  summary: >
    新しいデータベースの作成またはすべてのデータベースのクエリ/読み取りに使用されます。

    使用`.database(id)`読み取るには、置換、または id で、特定の既存のデータベースを削除します。
  syntax:
    content: 'databases: Databases'
    return:
      type:
      - '@azure/cosmos.Databases'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.CosmosClient.getDatabaseAccount'
  name: getDatabaseAccount
  children: []
  type: method
  langs:
  - typeScript
  summary: 現在の情報を取得<xref:DatabaseAccount>(どのリージョンがサポートされているなどを含む)。
  syntax:
    content: function getDatabaseAccount()
    parameters: []
    return:
      type:
      - Promise<@azure/cosmos.CosmosResponse<@azure/cosmos.DatabaseAccount, @azure/cosmos.CosmosClient>>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.CosmosClient.offer'
  name: offer
  children: []
  type: method
  langs:
  - typeScript
  summary: 読み取り、または id で既存のプランの更新に使用されます。
  syntax:
    content: 'function offer(id: string)'
    parameters:
    - id: id
      type:
      - string
      description: >
        プランの id。
    return:
      type:
      - '@azure/cosmos.Offer'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.CosmosClient.offers'
  name: offers
  fullName: offers
  children: []
  langs:
  - typeScript
  type: property
  summary: >
    クエリを実行すると、すべてのプランの読み取りに使用されます。

    使用`.offer(id)`を読み取り、または既存のプランを置き換えます。
  syntax:
    content: 'offers: Offers'
    return:
      type:
      - '@azure/cosmos.Offers'
  package: '@azure/cosmos'
references:
- uid: '@azure/cosmos.CosmosClientOptions'
  spec.typeScript:
  - name: CosmosClientOptions
    fullName: CosmosClientOptions
    uid: '@azure/cosmos.CosmosClientOptions'
- uid: '@azure/cosmos.Databases'
  spec.typeScript:
  - name: Databases
    fullName: Databases
    uid: '@azure/cosmos.Databases'
- uid: '@azure/cosmos.Offers'
  spec.typeScript:
  - name: Offers
    fullName: Offers
    uid: '@azure/cosmos.Offers'
- uid: '@azure/cosmos.Database'
  spec.typeScript:
  - name: Database
    fullName: Database
    uid: '@azure/cosmos.Database'
- uid: Promise<@azure/cosmos.CosmosResponse<@azure/cosmos.DatabaseAccount, @azure/cosmos.CosmosClient>>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: CosmosResponse
    fullName: CosmosResponse
    uid: '@azure/cosmos.CosmosResponse'
  - name: <
    fullName: <
  - name: DatabaseAccount
    fullName: DatabaseAccount
    uid: '@azure/cosmos.DatabaseAccount'
  - name: ', '
    fullName: ', '
  - name: CosmosClient
    fullName: CosmosClient
    uid: '@azure/cosmos.CosmosClient'
  - name: '>>'
    fullName: '>>'
- uid: '@azure/cosmos.Offer'
  spec.typeScript:
  - name: Offer
    fullName: Offer
    uid: '@azure/cosmos.Offer'
