### YamlMime:UniversalReference
ms.openlocfilehash: c5a170bce18d0f22c09bb0d14887d042029a3023
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 12/13/2018
ms.locfileid: "52089547"
items:
- uid: '@azure/cosmos.CosmosClient'
  name: CosmosClient
  fullName: CosmosClient
  children:
  - '@azure/cosmos.CosmosClient.constructor'
  - '@azure/cosmos.CosmosClient.database'
  - '@azure/cosmos.CosmosClient.databases'
  - '@azure/cosmos.CosmosClient.getDatabaseAccount'
  - '@azure/cosmos.CosmosClient.getReadEndpoint'
  - '@azure/cosmos.CosmosClient.getWriteEndpoint'
  - '@azure/cosmos.CosmosClient.offer'
  - '@azure/cosmos.CosmosClient.offers'
  langs:
  - typeScript
  type: class
  summary: >-
    <span data-ttu-id="dadc3-101">Azure Cosmos DB データベース アカウントのクライアント側の論理表現を提供します。</span><span class="sxs-lookup"><span data-stu-id="dadc3-101">Provides a client-side logical representation of the Azure Cosmos DB database account.</span></span>

    <span data-ttu-id="dadc3-102">このクライアントは、構成し、Azure Cosmos DB データベース サービスで要求の実行に使用されます。</span><span class="sxs-lookup"><span data-stu-id="dadc3-102">This client is used to configure and execute requests in the Azure Cosmos DB database service.</span></span>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.CosmosClient.constructor'
  name: CosmosClient(CosmosClientOptions)
  children: []
  type: constructor
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'new CosmosClient(options: CosmosClientOptions)'
    parameters:
    - id: options
      type:
      - '@azure/cosmos.CosmosClientOptions'
      description: ''
  package: '@azure/cosmos'
- uid: '@azure/cosmos.CosmosClient.database'
  name: database(string)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="dadc3-103">読み取り、更新、または id で既存のデータベースを削除またはそのデータベースに属するコンテナーへのアクセスに使用されます。</span><span class="sxs-lookup"><span data-stu-id="dadc3-103">Used for reading, updating, or deleting a existing database by id or accessing containers belonging to that database.</span></span>

    <span data-ttu-id="dadc3-104">ネットワーク要求されることはありません。</span><span class="sxs-lookup"><span data-stu-id="dadc3-104">This does not make a network call.</span></span> <span data-ttu-id="dadc3-105">使用`.read`取得した後、データベースに関する情報を取得する、<xref:Database>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="dadc3-105">Use `.read` to get info about the database after getting the <xref:Database> object.</span></span>
  syntax:
    content: 'function database(id: string)'
    parameters:
    - id: id
      type:
      - string
      description: <span data-ttu-id="dadc3-106">データベースの id。</span><span class="sxs-lookup"><span data-stu-id="dadc3-106">The id of the database.</span></span>
    return:
      type:
      - '@azure/cosmos.Database'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.CosmosClient.databases'
  name: databases
  fullName: databases
  children: []
  langs:
  - typeScript
  type: property
  summary: >
    <span data-ttu-id="dadc3-107">新しいデータベースの作成またはすべてのデータベースのクエリ/読み取りに使用されます。</span><span class="sxs-lookup"><span data-stu-id="dadc3-107">Used for creating new databases, or querying/reading all databases.</span></span>

    <span data-ttu-id="dadc3-108">使用`.database(id)`読み取るには、置換、または id で、特定の既存のデータベースを削除します。</span><span class="sxs-lookup"><span data-stu-id="dadc3-108">Use `.database(id)` to read, replace, or delete a specific, existing database by id.</span></span>
  syntax:
    content: 'databases: Databases'
    return:
      type:
      - '@azure/cosmos.Databases'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.CosmosClient.getDatabaseAccount'
  name: getDatabaseAccount(RequestOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="dadc3-109">現在の情報を取得<xref:DatabaseAccount>(どのリージョンがサポートされているなどを含む)。</span><span class="sxs-lookup"><span data-stu-id="dadc3-109">Get information about the current <xref:DatabaseAccount> (including which regions are supported, etc.)</span></span>
  syntax:
    content: 'function getDatabaseAccount(options?: RequestOptions)'
    parameters:
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: ''
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.CosmosResponse<@azure/cosmos.DatabaseAccount, @azure/cosmos.CosmosClient>>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.CosmosClient.getReadEndpoint'
  name: getReadEndpoint()
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="dadc3-110">取得、現在使用されている読み取りエンドポイント。</span><span class="sxs-lookup"><span data-stu-id="dadc3-110">Gets the currently used read endpoint.</span></span> <span data-ttu-id="dadc3-111">トラブルシューティングのために便利です。</span><span class="sxs-lookup"><span data-stu-id="dadc3-111">Useful for troubleshooting purposes.</span></span>

    <span data-ttu-id="dadc3-112">Url は、リージョン サフィックスを含めることができます (例:"-eastus") の場所の特定のエンドポイントを使用している場合。</span><span class="sxs-lookup"><span data-stu-id="dadc3-112">The url may contain a region suffix (e.g. "-eastus") if we're using location specific endpoints.</span></span>
  syntax:
    content: function getReadEndpoint()
    parameters: []
    return:
      type:
      - Promise<string>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.CosmosClient.getWriteEndpoint'
  name: getWriteEndpoint()
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="dadc3-113">書き込みを現在使用されているエンドポイントの url を取得します。</span><span class="sxs-lookup"><span data-stu-id="dadc3-113">Gets the currently used write endpoint url.</span></span> <span data-ttu-id="dadc3-114">トラブルシューティングのために便利です。</span><span class="sxs-lookup"><span data-stu-id="dadc3-114">Useful for troubleshooting purposes.</span></span>

    <span data-ttu-id="dadc3-115">Url は、リージョン サフィックスを含めることができます (例:"-eastus") の場所の特定のエンドポイントを使用している場合。</span><span class="sxs-lookup"><span data-stu-id="dadc3-115">The url may contain a region suffix (e.g. "-eastus") if we're using location specific endpoints.</span></span>
  syntax:
    content: function getWriteEndpoint()
    parameters: []
    return:
      type:
      - Promise<string>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.CosmosClient.offer'
  name: offer(string)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="dadc3-116">読み取り、または id で既存のプランの更新に使用されます。</span><span class="sxs-lookup"><span data-stu-id="dadc3-116">Used for reading, or updating a existing offer by id.</span></span>
  syntax:
    content: 'function offer(id: string)'
    parameters:
    - id: id
      type:
      - string
      description: >
        <span data-ttu-id="dadc3-117">プランの id。</span><span class="sxs-lookup"><span data-stu-id="dadc3-117">The id of the offer.</span></span>
    return:
      type:
      - '@azure/cosmos.Offer'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.CosmosClient.offers'
  name: offers
  fullName: offers
  children: []
  langs:
  - typeScript
  type: property
  summary: >
    <span data-ttu-id="dadc3-118">クエリを実行すると、すべてのプランの読み取りに使用されます。</span><span class="sxs-lookup"><span data-stu-id="dadc3-118">Used for querying & reading all offers.</span></span>

    <span data-ttu-id="dadc3-119">使用`.offer(id)`を読み取り、または既存のプランを置き換えます。</span><span class="sxs-lookup"><span data-stu-id="dadc3-119">Use `.offer(id)` to read, or replace existing offers.</span></span>
  syntax:
    content: 'offers: Offers'
    return:
      type:
      - '@azure/cosmos.Offers'
  package: '@azure/cosmos'
references:
- uid: '@azure/cosmos.CosmosClientOptions'
  name: CosmosClientOptions
  spec.typeScript:
  - name: CosmosClientOptions
    fullName: CosmosClientOptions
    uid: '@azure/cosmos.CosmosClientOptions'
- uid: '@azure/cosmos.Databases'
  name: Databases
  spec.typeScript:
  - name: Databases
    fullName: Databases
    uid: '@azure/cosmos.Databases'
- uid: '@azure/cosmos.Offers'
  name: Offers
  spec.typeScript:
  - name: Offers
    fullName: Offers
    uid: '@azure/cosmos.Offers'
- uid: '@azure/cosmos.Database'
  name: Database
  spec.typeScript:
  - name: Database
    fullName: Database
    uid: '@azure/cosmos.Database'
- uid: '@azure/cosmos.RequestOptions'
  name: RequestOptions
  spec.typeScript:
  - name: RequestOptions
    fullName: RequestOptions
    uid: '@azure/cosmos.RequestOptions'
- uid: Promise<@azure/cosmos.CosmosResponse<@azure/cosmos.DatabaseAccount, @azure/cosmos.CosmosClient>>
  name: CosmosClient>>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: CosmosResponse
    fullName: CosmosResponse
    uid: '@azure/cosmos.CosmosResponse'
  - name: <
    fullName: <
  - name: DatabaseAccount
    fullName: DatabaseAccount
    uid: '@azure/cosmos.DatabaseAccount'
  - name: ', '
    fullName: ', '
  - name: CosmosClient
    fullName: CosmosClient
    uid: '@azure/cosmos.CosmosClient'
  - name: '>>'
    fullName: '>>'
- uid: '@azure/cosmos.Offer'
  name: Offer
  spec.typeScript:
  - name: Offer
    fullName: Offer
    uid: '@azure/cosmos.Offer'
