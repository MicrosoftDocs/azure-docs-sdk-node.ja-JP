### YamlMime:UniversalReference
items:
  - uid: '@azure/cosmos.StoredProcedures'
    name: StoredProcedures
    fullName: StoredProcedures
    children:
      - '@azure/cosmos.StoredProcedures.container'
      - '@azure/cosmos.StoredProcedures.create'
      - '@azure/cosmos.StoredProcedures.query'
      - '@azure/cosmos.StoredProcedures.query_1'
      - '@azure/cosmos.StoredProcedures.readAll'
      - '@azure/cosmos.StoredProcedures.upsert'
    langs:
      - typeScript
    type: class
    summary: |
      作成、アップサート、または読み取り/クエリを実行するすべてのストアド プロシージャの操作。
      読み取り、置換、削除、または id で、特定の既存のストアド プロシージャを実行する操作は、`container.storedProcedure()`を参照してください。
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.StoredProcedures.container'
    name: container
    fullName: container
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'container: Container'
      return:
        type:
          - '@azure/cosmos.Container'
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.StoredProcedures.create'
    name: 'create(StoredProcedureDefinition, RequestOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      ストアド プロシージャを作成します。
      Azure Cosmos DB では、項目コンテナーに対して直接、ストレージ層で実行されるストアド プロシージャを使用します。 このスクリプトは、指定したコンテナーのプライマリ ストレージのパーティションに ACID トランザクションで実行を取得します。 詳細については、サーバー側 JavaScript API のドキュメントを参照してください。
    syntax:
      content: 'function create(body: StoredProcedureDefinition, options?: RequestOptions)'
      parameters:
        - id: body
          type:
            - '@azure/cosmos.StoredProcedureDefinition'
          description: ''
        - id: options
          type:
            - '@azure/cosmos.RequestOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/cosmos.StoredProcedureResponse>
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.StoredProcedures.query'
    name: 'query(SqlQuerySpec, FeedOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: すべてのストアド プロシージャのクエリを実行します。
    syntax:
      content: 'function query(query: SqlQuerySpec, options?: FeedOptions)'
      parameters:
        - id: query
          type:
            - '@azure/cosmos.SqlQuerySpec'
          description: '操作のクエリの構成。 参照してください<xref:SqlQuerySpec>クエリを構成する方法の詳細についてはします。'
        - id: options
          type:
            - '@azure/cosmos.FeedOptions'
          description: ''
          optional: true
      return:
        type:
          - '@azure/cosmos.QueryIterator<any>'
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.StoredProcedures.query_1'
    name: 'query(SqlQuerySpec, FeedOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: すべてのストアド プロシージャのクエリを実行します。
    syntax:
      content: 'function query<T>(query: SqlQuerySpec, options?: FeedOptions)'
      parameters:
        - id: query
          type:
            - '@azure/cosmos.SqlQuerySpec'
          description: '操作のクエリの構成。 参照してください<xref:SqlQuerySpec>クエリを構成する方法の詳細についてはします。'
        - id: options
          type:
            - '@azure/cosmos.FeedOptions'
          description: ''
          optional: true
      return:
        type:
          - '@azure/cosmos.QueryIterator<T>'
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.StoredProcedures.readAll'
    name: readAll(FeedOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: すべてのストアド プロシージャを参照してください。
    syntax:
      content: 'function readAll(options?: FeedOptions)'
      parameters:
        - id: options
          type:
            - '@azure/cosmos.FeedOptions'
          description: ''
          optional: true
      return:
        type:
          - '@azure/cosmos.QueryIterator<@azure/cosmos.StoredProcedureDefinition & @azure/cosmos.Resource>'
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.StoredProcedures.upsert'
    name: 'upsert(StoredProcedureDefinition, RequestOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |+
      Upsert ストアド プロシージャ。
      Azure Cosmos DB では、ドキュメントのコンテナーに対して直接記憶域階層で実行されるストアド プロシージャ。 このスクリプトは、指定したコンテナーのプライマリ ストレージのパーティションに ACID トランザクションで実行を取得します。 詳細については、サーバー側 JavaScript API のドキュメントを参照してください。

    syntax:
      content: 'function upsert(body: StoredProcedureDefinition, options?: RequestOptions)'
      parameters:
        - id: body
          type:
            - '@azure/cosmos.StoredProcedureDefinition'
          description: ''
        - id: options
          type:
            - '@azure/cosmos.RequestOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/cosmos.StoredProcedureResponse>
    package: '@azure/cosmos'
references:
  - uid: '@azure/cosmos.Container'
    name: Container
    spec.typeScript:
      - name: Container
        fullName: Container
        uid: '@azure/cosmos.Container'
  - uid: '@azure/cosmos.StoredProcedureDefinition'
    name: StoredProcedureDefinition
    spec.typeScript:
      - name: StoredProcedureDefinition
        fullName: StoredProcedureDefinition
        uid: '@azure/cosmos.StoredProcedureDefinition'
  - uid: '@azure/cosmos.RequestOptions'
    name: RequestOptions
    spec.typeScript:
      - name: RequestOptions
        fullName: RequestOptions
        uid: '@azure/cosmos.RequestOptions'
  - uid: Promise<@azure/cosmos.StoredProcedureResponse>
    name: StoredProcedureResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: StoredProcedureResponse
        fullName: StoredProcedureResponse
        uid: '@azure/cosmos.StoredProcedureResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cosmos.SqlQuerySpec'
    name: SqlQuerySpec
    spec.typeScript:
      - name: SqlQuerySpec
        fullName: SqlQuerySpec
        uid: '@azure/cosmos.SqlQuerySpec'
  - uid: '@azure/cosmos.FeedOptions'
    name: FeedOptions
    spec.typeScript:
      - name: FeedOptions
        fullName: FeedOptions
        uid: '@azure/cosmos.FeedOptions'
  - uid: '@azure/cosmos.QueryIterator<any>'
    name: QueryIterator<any>
    spec.typeScript:
      - name: QueryIterator
        fullName: QueryIterator
        uid: '@azure/cosmos.QueryIterator'
      - name: <any>
        fullName: <any>
  - uid: '@azure/cosmos.QueryIterator<T>'
    name: QueryIterator<T>
    spec.typeScript:
      - name: QueryIterator
        fullName: QueryIterator
        uid: '@azure/cosmos.QueryIterator'
      - name: <T>
        fullName: <T>
  - uid: '@azure/cosmos.QueryIterator<@azure/cosmos.StoredProcedureDefinition & @azure/cosmos.Resource>'
    name: Resource>
    spec.typeScript:
      - name: QueryIterator
        fullName: QueryIterator
        uid: '@azure/cosmos.QueryIterator'
      - name: <
        fullName: <
      - name: StoredProcedureDefinition
        fullName: StoredProcedureDefinition
        uid: '@azure/cosmos.StoredProcedureDefinition'
      - name: ' & '
        fullName: ' & '
      - name: Resource
        fullName: Resource
        uid: '@azure/cosmos.Resource'
      - name: '>'
        fullName: '>'