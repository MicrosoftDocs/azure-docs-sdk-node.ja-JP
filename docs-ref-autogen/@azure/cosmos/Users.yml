### YamlMime:UniversalReference
ms.openlocfilehash: b1d5b32525b4f95b8bdc1aa52c87228f0026fa08
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 08/12/2018
ms.locfileid: "40071356"
items:
- uid: '@azure/cosmos.Users'
  name: Users
  fullName: Users
  children:
  - '@azure/cosmos.Users.create'
  - '@azure/cosmos.Users.database'
  - '@azure/cosmos.Users.query'
  - '@azure/cosmos.Users.readAll'
  - '@azure/cosmos.Users.upsert'
  langs:
  - typeScript
  type: class
  summary: Upsert は、作成に使用すると、クエリ、およびすべてのユーザーを読み取る。
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Users.create'
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: 指定したデータベース ユーザーを作成<xref:UserDefinition>です。
  syntax:
    content: 'function create(body: UserDefinition, options?: RequestOptions)'
    parameters:
    - id: body
      type:
      - '@azure/cosmos.UserDefinition'
      description: 指定した<xref:UserDefinition>します。
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: "\n"
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.UserResponse>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Users.database'
  name: database
  fullName: database
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'database: Database'
    return:
      type:
      - '@azure/cosmos.Database'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Users.query'
  name: query
  children: []
  type: method
  langs:
  - typeScript
  summary: すべてのユーザーのクエリを実行します。
  syntax:
    content: 'function query(query: SqlQuerySpec, options?: FeedOptions)'
    parameters:
    - id: query
      type:
      - '@azure/cosmos.SqlQuerySpec'
      description: 操作のクエリの構成。 参照してください<xref:SqlQuerySpec>クエリを構成する方法の詳細についてはします。
    - id: options
      type:
      - '@azure/cosmos.FeedOptions'
      description: "\n"
      optional: true
    return:
      type:
      - '@azure/cosmos.QueryIterator<@azure/cosmos.UserDefinition>'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Users.readAll'
  name: readAll
  children: []
  type: method
  langs:
  - typeScript
  summary: すべてのユーザーを読み取ります。
  syntax:
    content: 'function readAll(options?: FeedOptions)'
    parameters:
    - id: options
      type:
      - '@azure/cosmos.FeedOptions'
      description: ''
      optional: true
    return:
      type:
      - '@azure/cosmos.QueryIterator<@azure/cosmos.UserDefinition>'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Users.upsert'
  name: upsert
  children: []
  type: method
  langs:
  - typeScript
  summary: Upsert と指定したデータベース ユーザー<xref:UserDefinition>します。
  syntax:
    content: 'function upsert(body: UserDefinition, options?: RequestOptions)'
    parameters:
    - id: body
      type:
      - '@azure/cosmos.UserDefinition'
      description: 指定した<xref:UserDefinition>します。
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: "\n"
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.UserResponse>
  package: '@azure/cosmos'
references:
- uid: '@azure/cosmos.Database'
  spec.typeScript:
  - name: Database
    fullName: Database
    uid: '@azure/cosmos.Database'
- uid: '@azure/cosmos.UserDefinition'
  spec.typeScript:
  - name: UserDefinition
    fullName: UserDefinition
    uid: '@azure/cosmos.UserDefinition'
- uid: '@azure/cosmos.RequestOptions'
  spec.typeScript:
  - name: RequestOptions
    fullName: RequestOptions
    uid: '@azure/cosmos.RequestOptions'
- uid: Promise<@azure/cosmos.UserResponse>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: UserResponse
    fullName: UserResponse
    uid: '@azure/cosmos.UserResponse'
  - name: '>'
    fullName: '>'
- uid: '@azure/cosmos.SqlQuerySpec'
  spec.typeScript:
  - name: SqlQuerySpec
    fullName: SqlQuerySpec
    uid: '@azure/cosmos.SqlQuerySpec'
- uid: '@azure/cosmos.FeedOptions'
  spec.typeScript:
  - name: FeedOptions
    fullName: FeedOptions
    uid: '@azure/cosmos.FeedOptions'
- uid: '@azure/cosmos.QueryIterator<@azure/cosmos.UserDefinition>'
  spec.typeScript:
  - name: QueryIterator
    fullName: QueryIterator
    uid: '@azure/cosmos.QueryIterator'
  - name: <
    fullName: <
  - name: UserDefinition
    fullName: UserDefinition
    uid: '@azure/cosmos.UserDefinition'
  - name: '>'
    fullName: '>'
