### YamlMime:UniversalReference
items:
  - uid: '@azure/storage-datalake.PathOperations'
    name: PathOperations
    fullName: PathOperations
    children:
      - '@azure/storage-datalake.PathOperations.create'
      - '@azure/storage-datalake.PathOperations.create_2'
      - '@azure/storage-datalake.PathOperations.create_1'
      - '@azure/storage-datalake.PathOperations.deleteMethod'
      - '@azure/storage-datalake.PathOperations.deleteMethod_2'
      - '@azure/storage-datalake.PathOperations.deleteMethod_1'
      - '@azure/storage-datalake.PathOperations.getProperties'
      - '@azure/storage-datalake.PathOperations.getProperties_2'
      - '@azure/storage-datalake.PathOperations.getProperties_1'
      - '@azure/storage-datalake.PathOperations.lease'
      - '@azure/storage-datalake.PathOperations.lease_2'
      - '@azure/storage-datalake.PathOperations.lease_1'
      - '@azure/storage-datalake.PathOperations.list'
      - '@azure/storage-datalake.PathOperations.list_2'
      - '@azure/storage-datalake.PathOperations.list_1'
      - '@azure/storage-datalake.PathOperations.constructor'
      - '@azure/storage-datalake.PathOperations.read'
      - '@azure/storage-datalake.PathOperations.read_2'
      - '@azure/storage-datalake.PathOperations.read_1'
      - '@azure/storage-datalake.PathOperations.update'
      - '@azure/storage-datalake.PathOperations.update_2'
      - '@azure/storage-datalake.PathOperations.update_1'
    langs:
      - typeScript
    type: class
    summary: PathOperations を表すクラスです。
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.create'
    name: 'create(string, string, Models.PathCreateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      作成またはファイルまたはディレクトリの名前を変更します。    既定では、変換先は上書きされ、変換先は既に存在し、リース、リースを持つ場合は解除されます。  この操作は、条件付きの HTTP 要求をサポートします。  詳細については、次を参照してください。 [Blob サービス操作の条件ヘッダーの指定](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations)します。
      変換先が既に存在する場合、失敗するには、None-If-match で条件付き要求を使用します。"*"。
    syntax:
      content: 'function create(filesystem: string, path: string, options?: Models.PathCreateOptionalParams)'
      parameters:
        - id: filesystem
          type:
            - string
          description: ファイル システムの識別子です。
        - id: path
          type:
            - string
          description: ファイルまたはディレクトリのパス。
        - id: options
          type:
            - Models.PathCreateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PathCreateResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.create_2'
    name: 'create(string, string, PathCreateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(filesystem: string, path: string, options: PathCreateOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: filesystem
          type:
            - string
          description: ファイル システムの識別子です。
        - id: path
          type:
            - string
          description: ファイルまたはディレクトリのパス。
        - id: options
          type:
            - '@azure/storage-datalake.PathCreateOptionalParams'
          description: 省略可能なパラメーター
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            コールバック
      return:
        type:
          - Promise<Models.PathCreateResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.create_1'
    name: 'create(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(filesystem: string, path: string, callback: ServiceCallback<void>)'
      parameters:
        - id: filesystem
          type:
            - string
          description: ファイル システムの識別子です。
        - id: path
          type:
            - string
          description: ファイルまたはディレクトリのパス。
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            コールバック
      return:
        type:
          - Promise<Models.PathCreateResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.deleteMethod'
    name: 'deleteMethod(string, string, Models.PathDeleteMethodOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'ファイルまたはディレクトリを削除します。 この操作は、条件付きの HTTP 要求をサポートします。  詳細については、次を参照してください。 [Blob サービス操作の条件ヘッダーの指定](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations)します。'
    syntax:
      content: 'function deleteMethod(filesystem: string, path: string, options?: Models.PathDeleteMethodOptionalParams)'
      parameters:
        - id: filesystem
          type:
            - string
          description: ファイル システムの識別子です。
        - id: path
          type:
            - string
          description: ファイルまたはディレクトリのパス。
        - id: options
          type:
            - Models.PathDeleteMethodOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PathDeleteResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.deleteMethod_2'
    name: 'deleteMethod(string, string, PathDeleteMethodOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(filesystem: string, path: string, options: PathDeleteMethodOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: filesystem
          type:
            - string
          description: ファイル システムの識別子です。
        - id: path
          type:
            - string
          description: ファイルまたはディレクトリのパス。
        - id: options
          type:
            - '@azure/storage-datalake.PathDeleteMethodOptionalParams'
          description: 省略可能なパラメーター
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            コールバック
      return:
        type:
          - Promise<Models.PathDeleteResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.deleteMethod_1'
    name: 'deleteMethod(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(filesystem: string, path: string, callback: ServiceCallback<void>)'
      parameters:
        - id: filesystem
          type:
            - string
          description: ファイル システムの識別子です。
        - id: path
          type:
            - string
          description: ファイルまたはディレクトリのパス。
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            コールバック
      return:
        type:
          - Promise<Models.PathDeleteResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.getProperties'
    name: 'getProperties(string, string, Models.PathGetPropertiesOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      ファイルまたはディレクトリのプロパティを取得し、必要に応じてアクセス制御リストが含まれます。
      この操作は、条件付きの HTTP 要求をサポートします。  詳細については、次を参照してください。 [Blob サービス操作の条件ヘッダーの指定](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations)します。
    syntax:
      content: 'function getProperties(filesystem: string, path: string, options?: Models.PathGetPropertiesOptionalParams)'
      parameters:
        - id: filesystem
          type:
            - string
          description: ファイル システムの識別子です。
        - id: path
          type:
            - string
          description: ファイルまたはディレクトリのパス。
        - id: options
          type:
            - Models.PathGetPropertiesOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PathGetPropertiesResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.getProperties_2'
    name: 'getProperties(string, string, PathGetPropertiesOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getProperties(filesystem: string, path: string, options: PathGetPropertiesOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: filesystem
          type:
            - string
          description: ファイル システムの識別子です。
        - id: path
          type:
            - string
          description: ファイルまたはディレクトリのパス。
        - id: options
          type:
            - '@azure/storage-datalake.PathGetPropertiesOptionalParams'
          description: 省略可能なパラメーター
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            コールバック
      return:
        type:
          - Promise<Models.PathGetPropertiesResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.getProperties_1'
    name: 'getProperties(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getProperties(filesystem: string, path: string, callback: ServiceCallback<void>)'
      parameters:
        - id: filesystem
          type:
            - string
          description: ファイル システムの識別子です。
        - id: path
          type:
            - string
          description: ファイルまたはディレクトリのパス。
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            コールバック
      return:
        type:
          - Promise<Models.PathGetPropertiesResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.lease'
    name: 'lease(Models.PathLeaseAction, string, string, Models.PathLeaseOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '作成し、書き込みを制限し、パスへのアクセスを削除してリースを管理します。 この操作は、条件付きの HTTP 要求をサポートします。  詳細については、次を参照してください。 [Blob サービス操作の条件ヘッダーの指定](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations)します。'
    syntax:
      content: 'function lease(xMsLeaseAction: Models.PathLeaseAction, filesystem: string, path: string, options?: Models.PathLeaseOptionalParams)'
      parameters:
        - id: xMsLeaseAction
          type:
            - Models.PathLeaseAction
          description: |-
            リースの 5 つのアクションがある:「取得」、"break"、「変更」、"renew"、および「リリース」。 「取得」を使用し、"x ms-提案のリースの id"と「x-ms のリースの所要時間」新しいリースを取得するを指定します。 "Break"を使用して、既存のリースを中断します。 リースが切断されたときに、リース中断期間は許容経過時間を間中断とリリース以外のリース操作はありませんファイル。 リースが正常に中断されると、応答は、新しいリースを取得するまでの秒数の間隔を示します。 使用は、「変更」し、アクティブなリースのリース ID を変更するには、現在のリース ID が"x-ms のリースの id"と"x ms-提案のリースの id"で新しいリース ID を指定します。 「更新」を使用し、"x ms のリースの id"既存のリースを更新するを指定します。
            「リリース」を使用し、"x ms のリースの id"のリースを解放するを指定します。 使用可能な値が含まれます: '取得'、'break'、'を変更する'、'renew'、'リリース'
        - id: filesystem
          type:
            - string
          description: ファイル システムの識別子です。
        - id: path
          type:
            - string
          description: ファイルまたはディレクトリのパス。
        - id: options
          type:
            - Models.PathLeaseOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PathLeaseResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.lease_2'
    name: 'lease(Models.PathLeaseAction, string, string, PathLeaseOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function lease(xMsLeaseAction: Models.PathLeaseAction, filesystem: string, path: string, options: PathLeaseOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: xMsLeaseAction
          type:
            - Models.PathLeaseAction
          description: |-
            リースの 5 つのアクションがある:「取得」、"break"、「変更」、"renew"、および「リリース」。 「取得」を使用し、"x ms-提案のリースの id"と「x-ms のリースの所要時間」新しいリースを取得するを指定します。 "Break"を使用して、既存のリースを中断します。 リースが切断されたときに、リース中断期間は許容経過時間を間中断とリリース以外のリース操作はありませんファイル。 リースが正常に中断されると、応答は、新しいリースを取得するまでの秒数の間隔を示します。 使用は、「変更」し、アクティブなリースのリース ID を変更するには、現在のリース ID が"x-ms のリースの id"と"x ms-提案のリースの id"で新しいリース ID を指定します。 「更新」を使用し、"x ms のリースの id"既存のリースを更新するを指定します。
            「リリース」を使用し、"x ms のリースの id"のリースを解放するを指定します。 使用可能な値が含まれます: '取得'、'break'、'を変更する'、'renew'、'リリース'
        - id: filesystem
          type:
            - string
          description: ファイル システムの識別子です。
        - id: path
          type:
            - string
          description: ファイルまたはディレクトリのパス。
        - id: options
          type:
            - '@azure/storage-datalake.PathLeaseOptionalParams'
          description: 省略可能なパラメーター
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            コールバック
      return:
        type:
          - Promise<Models.PathLeaseResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.lease_1'
    name: 'lease(Models.PathLeaseAction, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function lease(xMsLeaseAction: Models.PathLeaseAction, filesystem: string, path: string, callback: ServiceCallback<void>)'
      parameters:
        - id: xMsLeaseAction
          type:
            - Models.PathLeaseAction
          description: |-
            リースの 5 つのアクションがある:「取得」、"break"、「変更」、"renew"、および「リリース」。 「取得」を使用し、"x ms-提案のリースの id"と「x-ms のリースの所要時間」新しいリースを取得するを指定します。 "Break"を使用して、既存のリースを中断します。 リースが切断されたときに、リース中断期間は許容経過時間を間中断とリリース以外のリース操作はありませんファイル。 リースが正常に中断されると、応答は、新しいリースを取得するまでの秒数の間隔を示します。 使用は、「変更」し、アクティブなリースのリース ID を変更するには、現在のリース ID が"x-ms のリースの id"と"x ms-提案のリースの id"で新しいリース ID を指定します。 「更新」を使用し、"x ms のリースの id"既存のリースを更新するを指定します。
            「リリース」を使用し、"x ms のリースの id"のリースを解放するを指定します。 使用可能な値が含まれます: '取得'、'break'、'を変更する'、'renew'、'リリース'
        - id: filesystem
          type:
            - string
          description: ファイル システムの識別子です。
        - id: path
          type:
            - string
          description: ファイルまたはディレクトリのパス。
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            コールバック
      return:
        type:
          - Promise<Models.PathLeaseResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.list'
    name: 'list(boolean, string, Models.PathListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ファイル システム パスとそのプロパティを一覧表示します。
    syntax:
      content: 'function list(recursive: boolean, filesystem: string, options?: Models.PathListOptionalParams)'
      parameters:
        - id: recursive
          type:
            - boolean
          description: '"True"の場合は、すべてのパスが一覧表示されます。それ以外の場合、ファイル システムのルートにあるパスのみが一覧表示されます。  "Directory"が指定されている場合、リストは同じルートを共有パスのみが含まれます。'
        - id: filesystem
          type:
            - string
          description: ファイル システムの識別子です。  値を先頭し、末尾は英字または数字し、文字、数字、およびダッシュ (-) 文字のみを含める必要があります。  連続するダッシュは許可されていません。  すべての文字を小文字にする必要があります。  値は 3 ~ 63 文字が必要です。
        - id: options
          type:
            - Models.PathListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PathListResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.list_2'
    name: 'list(boolean, string, PathListOptionalParams, ServiceCallback<PathList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(recursive: boolean, filesystem: string, options: PathListOptionalParams, callback: ServiceCallback<PathList>)'
      parameters:
        - id: recursive
          type:
            - boolean
          description: '"True"の場合は、すべてのパスが一覧表示されます。それ以外の場合、ファイル システムのルートにあるパスのみが一覧表示されます。  "Directory"が指定されている場合、リストは同じルートを共有パスのみが含まれます。'
        - id: filesystem
          type:
            - string
          description: ファイル システムの識別子です。  値を先頭し、末尾は英字または数字し、文字、数字、およびダッシュ (-) 文字のみを含める必要があります。  連続するダッシュは許可されていません。  すべての文字を小文字にする必要があります。  値は 3 ~ 63 文字が必要です。
        - id: options
          type:
            - '@azure/storage-datalake.PathListOptionalParams'
          description: 省略可能なパラメーター
        - id: callback
          type:
            - ServiceCallback<@azure/storage-datalake.PathList>
          description: |
            コールバック
      return:
        type:
          - Promise<Models.PathListResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.list_1'
    name: 'list(boolean, string, ServiceCallback<PathList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(recursive: boolean, filesystem: string, callback: ServiceCallback<PathList>)'
      parameters:
        - id: recursive
          type:
            - boolean
          description: '"True"の場合は、すべてのパスが一覧表示されます。それ以外の場合、ファイル システムのルートにあるパスのみが一覧表示されます。  "Directory"が指定されている場合、リストは同じルートを共有パスのみが含まれます。'
        - id: filesystem
          type:
            - string
          description: ファイル システムの識別子です。  値を先頭し、末尾は英字または数字し、文字、数字、およびダッシュ (-) 文字のみを含める必要があります。  連続するダッシュは許可されていません。  すべての文字を小文字にする必要があります。  値は 3 ~ 63 文字が必要です。
        - id: callback
          type:
            - ServiceCallback<@azure/storage-datalake.PathList>
          description: |
            コールバック
      return:
        type:
          - Promise<Models.PathListResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.constructor'
    name: PathOperations(DataLakeStorageClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: PathOperations を作成します。
    syntax:
      content: 'new PathOperations(client: DataLakeStorageClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/storage-datalake.DataLakeStorageClientContext'
          description: |
            サービス クライアントへの参照。
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.read'
    name: 'read(string, string, Models.PathReadOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'ファイルの内容を読み取ります。  読み取り操作は、範囲の要求がサポートされています。 この操作は、条件付きの HTTP 要求をサポートします。  詳細については、次を参照してください。 [Blob サービス操作の条件ヘッダーの指定](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations)します。'
    syntax:
      content: 'function read(filesystem: string, path: string, options?: Models.PathReadOptionalParams)'
      parameters:
        - id: filesystem
          type:
            - string
          description: ファイル システムの識別子です。
        - id: path
          type:
            - string
          description: ファイルまたはディレクトリのパス。
        - id: options
          type:
            - Models.PathReadOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PathReadResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.read_2'
    name: 'read(string, string, PathReadOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function read(filesystem: string, path: string, options: PathReadOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: filesystem
          type:
            - string
          description: ファイル システムの識別子です。
        - id: path
          type:
            - string
          description: ファイルまたはディレクトリのパス。
        - id: options
          type:
            - '@azure/storage-datalake.PathReadOptionalParams'
          description: 省略可能なパラメーター
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            コールバック
      return:
        type:
          - Promise<Models.PathReadResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.read_1'
    name: 'read(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function read(filesystem: string, path: string, callback: ServiceCallback<void>)'
      parameters:
        - id: filesystem
          type:
            - string
          description: ファイル システムの識別子です。
        - id: path
          type:
            - string
          description: ファイルまたはディレクトリのパス。
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            コールバック
      return:
        type:
          - Promise<Models.PathReadResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.update'
    name: 'update(Models.PathUpdateAction, string, string, Models.PathUpdateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'ファイルに追加するデータのアップロード、(書き込み) の前にアップロードされたデータをファイルにフラッシュ、ファイルまたはディレクトリのプロパティを設定またはファイルまたはディレクトリのアクセス制御を設定します。 データは、ファイルにのみ追加できます。 この操作は、条件付きの HTTP 要求をサポートします。 詳細については、次を参照してください。 [Blob サービス操作の条件ヘッダーの指定](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations)します。'
    syntax:
      content: 'function update(action: Models.PathUpdateAction, filesystem: string, path: string, options?: Models.PathUpdateOptionalParams)'
      parameters:
        - id: action
          type:
            - Models.PathUpdateAction
          description: '前にアップロードされたデータ ファイル、ファイルのプロパティを設定するには、"setProperties"をフラッシュ"flush"をファイルに追加するデータをアップロードするには、「追加」操作であるか、ディレクトリ、または、所有者を設定するには、"setAccessControl"は、グループ、アクセス許可、またはアクセス制御リストファイルまたはディレクトリ。  アクセス制御を使用するにはアカウントの階層の Namespace を有効する必要があることに注意してください。  アクセス制御リスト (ACL) の所有者は、所有グループ、アクセス許可が含まれています、アクセス許可 ms x と x-ms の acl の要求ヘッダー、他は相互に排他的に注意してください。 使用可能な値が含まれます: ''append''、''フラッシュ''、''setProperties''、''setAccessControl'''
        - id: filesystem
          type:
            - string
          description: ファイル システムの識別子です。
        - id: path
          type:
            - string
          description: ファイルまたはディレクトリのパス。
        - id: options
          type:
            - Models.PathUpdateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PathUpdateResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.update_2'
    name: 'update(Models.PathUpdateAction, string, string, PathUpdateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(action: Models.PathUpdateAction, filesystem: string, path: string, options: PathUpdateOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: action
          type:
            - Models.PathUpdateAction
          description: '前にアップロードされたデータ ファイル、ファイルのプロパティを設定するには、"setProperties"をフラッシュ"flush"をファイルに追加するデータをアップロードするには、「追加」操作であるか、ディレクトリ、または、所有者を設定するには、"setAccessControl"は、グループ、アクセス許可、またはアクセス制御リストファイルまたはディレクトリ。  アクセス制御を使用するにはアカウントの階層の Namespace を有効する必要があることに注意してください。  アクセス制御リスト (ACL) の所有者は、所有グループ、アクセス許可が含まれています、アクセス許可 ms x と x-ms の acl の要求ヘッダー、他は相互に排他的に注意してください。 使用可能な値が含まれます: ''append''、''フラッシュ''、''setProperties''、''setAccessControl'''
        - id: filesystem
          type:
            - string
          description: ファイル システムの識別子です。
        - id: path
          type:
            - string
          description: ファイルまたはディレクトリのパス。
        - id: options
          type:
            - '@azure/storage-datalake.PathUpdateOptionalParams'
          description: 省略可能なパラメーター
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            コールバック
      return:
        type:
          - Promise<Models.PathUpdateResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.update_1'
    name: 'update(Models.PathUpdateAction, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(action: Models.PathUpdateAction, filesystem: string, path: string, callback: ServiceCallback<void>)'
      parameters:
        - id: action
          type:
            - Models.PathUpdateAction
          description: '前にアップロードされたデータ ファイル、ファイルのプロパティを設定するには、"setProperties"をフラッシュ"flush"をファイルに追加するデータをアップロードするには、「追加」操作であるか、ディレクトリ、または、所有者を設定するには、"setAccessControl"は、グループ、アクセス許可、またはアクセス制御リストファイルまたはディレクトリ。  アクセス制御を使用するにはアカウントの階層の Namespace を有効する必要があることに注意してください。  アクセス制御リスト (ACL) の所有者は、所有グループ、アクセス許可が含まれています、アクセス許可 ms x と x-ms の acl の要求ヘッダー、他は相互に排他的に注意してください。 使用可能な値が含まれます: ''append''、''フラッシュ''、''setProperties''、''setAccessControl'''
        - id: filesystem
          type:
            - string
          description: ファイル システムの識別子です。
        - id: path
          type:
            - string
          description: ファイルまたはディレクトリのパス。
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            コールバック
      return:
        type:
          - Promise<Models.PathUpdateResponse>
    package: '@azure/storage-datalake'
references:
  - uid: '@azure/storage-datalake.DataLakeStorageClientContext'
    name: DataLakeStorageClientContext
    spec.typeScript:
      - name: DataLakeStorageClientContext
        fullName: DataLakeStorageClientContext
        uid: '@azure/storage-datalake.DataLakeStorageClientContext'
  - uid: '@azure/storage-datalake.PathCreateOptionalParams'
    name: PathCreateOptionalParams
    spec.typeScript:
      - name: PathCreateOptionalParams
        fullName: PathCreateOptionalParams
        uid: '@azure/storage-datalake.PathCreateOptionalParams'
  - uid: '@azure/storage-datalake.PathDeleteMethodOptionalParams'
    name: PathDeleteMethodOptionalParams
    spec.typeScript:
      - name: PathDeleteMethodOptionalParams
        fullName: PathDeleteMethodOptionalParams
        uid: '@azure/storage-datalake.PathDeleteMethodOptionalParams'
  - uid: '@azure/storage-datalake.PathGetPropertiesOptionalParams'
    name: PathGetPropertiesOptionalParams
    spec.typeScript:
      - name: PathGetPropertiesOptionalParams
        fullName: PathGetPropertiesOptionalParams
        uid: '@azure/storage-datalake.PathGetPropertiesOptionalParams'
  - uid: '@azure/storage-datalake.PathLeaseOptionalParams'
    name: PathLeaseOptionalParams
    spec.typeScript:
      - name: PathLeaseOptionalParams
        fullName: PathLeaseOptionalParams
        uid: '@azure/storage-datalake.PathLeaseOptionalParams'
  - uid: ServiceCallback<@azure/storage-datalake.PathList>
    name: PathList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PathList
        fullName: PathList
        uid: '@azure/storage-datalake.PathList'
      - name: '>'
        fullName: '>'
  - uid: '@azure/storage-datalake.PathListOptionalParams'
    name: PathListOptionalParams
    spec.typeScript:
      - name: PathListOptionalParams
        fullName: PathListOptionalParams
        uid: '@azure/storage-datalake.PathListOptionalParams'
  - uid: '@azure/storage-datalake.PathReadOptionalParams'
    name: PathReadOptionalParams
    spec.typeScript:
      - name: PathReadOptionalParams
        fullName: PathReadOptionalParams
        uid: '@azure/storage-datalake.PathReadOptionalParams'
  - uid: '@azure/storage-datalake.PathUpdateOptionalParams'
    name: PathUpdateOptionalParams
    spec.typeScript:
      - name: PathUpdateOptionalParams
        fullName: PathUpdateOptionalParams
        uid: '@azure/storage-datalake.PathUpdateOptionalParams'