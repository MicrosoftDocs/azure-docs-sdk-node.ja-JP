### YamlMime:UniversalReference
items:
  - uid: '@azure/keyvault-secrets.SecretsClient'
    name: SecretsClient
    fullName: SecretsClient
    children:
      - '@azure/keyvault-secrets.SecretsClient.backupSecret'
      - '@azure/keyvault-secrets.SecretsClient.deleteSecret'
      - '@azure/keyvault-secrets.SecretsClient.getDefaultPipeline'
      - '@azure/keyvault-secrets.SecretsClient.getDeletedSecret'
      - '@azure/keyvault-secrets.SecretsClient.getSecret'
      - '@azure/keyvault-secrets.SecretsClient.listDeletedSecrets'
      - '@azure/keyvault-secrets.SecretsClient.listSecrets'
      - '@azure/keyvault-secrets.SecretsClient.listSecretVersions'
      - '@azure/keyvault-secrets.SecretsClient.pipeline'
      - '@azure/keyvault-secrets.SecretsClient.purgeDeletedSecret'
      - '@azure/keyvault-secrets.SecretsClient.recoverDeletedSecret'
      - '@azure/keyvault-secrets.SecretsClient.restoreSecret'
      - '@azure/keyvault-secrets.SecretsClient.constructor'
      - '@azure/keyvault-secrets.SecretsClient.setSecret'
      - '@azure/keyvault-secrets.SecretsClient.updateSecretAttributes'
      - '@azure/keyvault-secrets.SecretsClient.vaultBaseUrl'
    langs:
      - typeScript
    type: class
    summary: <span data-ttu-id="178be-101">KeyVault シークレットの機能と対話するクライアント</span><span class="sxs-lookup"><span data-stu-id="178be-101">The client to interact with the KeyVault secrets functionality</span></span>
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.backupSecret'
    name: 'backupSecret(string, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="178be-102">指定したシークレットのバックアップをクライアントにダウンロードするように要求します。</span><span class="sxs-lookup"><span data-stu-id="178be-102">Requests that a backup of the specified secret be downloaded to the client.</span></span> <span data-ttu-id="178be-103">シークレットのすべてのバージョンがダウンロードされます。</span><span class="sxs-lookup"><span data-stu-id="178be-103">All versions of the secret will be downloaded.</span></span> <span data-ttu-id="178be-104">この操作では、シークレット/バックアップ アクセス許可が必要です。</span><span class="sxs-lookup"><span data-stu-id="178be-104">This operation requires the secrets/backup permission.</span></span>
      <span data-ttu-id="178be-105">使用例:</span><span class="sxs-lookup"><span data-stu-id="178be-105">Example usage:</span></span>
      ```ts
      let client = new SecretsClient(url, credentials);
      let backupResult = await client.backupSecret("MySecretName");
      ```
    syntax:
      content: 'function backupSecret(secretName: string, options?: RequestOptionsBase)'
      parameters:
        - id: secretName
          type:
            - string
          description: <span data-ttu-id="178be-106">シークレットの名前。</span><span class="sxs-lookup"><span data-stu-id="178be-106">The name of the secret.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Uint8Array>
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.deleteSecret'
    name: 'deleteSecret(string, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="178be-107">削除操作は、Azure Key Vault に格納されているすべてのシークレットに適用されます。</span><span class="sxs-lookup"><span data-stu-id="178be-107">The DELETE operation applies to any secret stored in Azure Key Vault.</span></span> <span data-ttu-id="178be-108">削除は、個々 のバージョンのシークレットに適用できません。</span><span class="sxs-lookup"><span data-stu-id="178be-108">DELETE cannot be applied to an individual version of a secret.</span></span> <span data-ttu-id="178be-109">この操作では、シークレット/削除アクセス許可が必要です。</span><span class="sxs-lookup"><span data-stu-id="178be-109">This operation requires the secrets/delete permission.</span></span>
      <span data-ttu-id="178be-110">使用例:</span><span class="sxs-lookup"><span data-stu-id="178be-110">Example usage:</span></span>
      ```ts
      let client = new SecretsClient(url, credentials);
      await client.deleteSecret("MySecretName");
      ```
    syntax:
      content: 'function deleteSecret(secretName: string, options?: RequestOptionsBase)'
      parameters:
        - id: secretName
          type:
            - string
          description: <span data-ttu-id="178be-111">シークレットの名前。</span><span class="sxs-lookup"><span data-stu-id="178be-111">The name of the secret.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-secrets.DeletedSecret>
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.getDefaultPipeline'
    name: 'getDefaultPipeline(ServiceClientCredentials | TokenCredential, NewPipelineOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="178be-112">指定された資格情報で新しいパイプライン オブジェクトを作成するために使用する静的メソッド。</span><span class="sxs-lookup"><span data-stu-id="178be-112">A static method used to create a new Pipeline object with the provided Credential.</span></span>
    syntax:
      content: 'static function getDefaultPipeline(credential: ServiceClientCredentials | TokenCredential, pipelineOptions?: NewPipelineOptions)'
      parameters:
        - id: credential
          type:
            - ServiceClientCredentials | TokenCredential
          description: ''
        - id: pipelineOptions
          type:
            - '@azure/keyvault-secrets.NewPipelineOptions'
          description: ''
          optional: true
      return:
        type:
          - ServiceClientOptions
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.getDeletedSecret'
    name: 'getDeletedSecret(string, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="178be-113">削除されたシークレットの取得操作では、その属性と共に指定した削除されたシークレットを返します。</span><span class="sxs-lookup"><span data-stu-id="178be-113">The Get Deleted Secret operation returns the specified deleted secret along with its attributes.</span></span>
      <span data-ttu-id="178be-114">この操作では、シークレット/取得アクセス許可が必要です。</span><span class="sxs-lookup"><span data-stu-id="178be-114">This operation requires the secrets/get permission.</span></span>
      <span data-ttu-id="178be-115">使用例:</span><span class="sxs-lookup"><span data-stu-id="178be-115">Example usage:</span></span>
      ```ts
      let client = new SecretsClient(url, credentials);
      await client.getDeletedSecret("MyDeletedSecret");
      ```
    syntax:
      content: 'function getDeletedSecret(secretName: string, options?: RequestOptionsBase)'
      parameters:
        - id: secretName
          type:
            - string
          description: <span data-ttu-id="178be-116">シークレットの名前。</span><span class="sxs-lookup"><span data-stu-id="178be-116">The name of the secret.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-secrets.DeletedSecret>
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.getSecret'
    name: 'getSecret(string, GetSecretOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="178be-117">GET 操作では、Azure Key Vault に格納されているすべてのシークレットに適用されます。</span><span class="sxs-lookup"><span data-stu-id="178be-117">The GET operation is applicable to any secret stored in Azure Key Vault.</span></span> <span data-ttu-id="178be-118">この操作では、シークレット/取得アクセス許可が必要です。</span><span class="sxs-lookup"><span data-stu-id="178be-118">This operation requires the secrets/get permission.</span></span>
      <span data-ttu-id="178be-119">使用例:</span><span class="sxs-lookup"><span data-stu-id="178be-119">Example usage:</span></span>
      ```ts
      let client = new SecretsClient(url, credentials);
      let secret = await client.getSecret("MySecretName");
      ```
    syntax:
      content: 'function getSecret(secretName: string, options?: GetSecretOptions)'
      parameters:
        - id: secretName
          type:
            - string
          description: <span data-ttu-id="178be-120">シークレットの名前。</span><span class="sxs-lookup"><span data-stu-id="178be-120">The name of the secret.</span></span>
        - id: options
          type:
            - '@azure/keyvault-secrets.GetSecretOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-secrets.Secret>
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.listDeletedSecrets'
    name: listDeletedSecrets(GetSecretsOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="178be-121">削除されたシークレットをコンテナーに反復処理します。</span><span class="sxs-lookup"><span data-stu-id="178be-121">Iterates the deleted secrets in the vault.</span></span>  <span data-ttu-id="178be-122">完全なシークレット識別子と属性は、応答で提供されます。</span><span class="sxs-lookup"><span data-stu-id="178be-122">The full secret identifier and attributes are provided in the response.</span></span> <span data-ttu-id="178be-123">シークレットの値は返されません。</span><span class="sxs-lookup"><span data-stu-id="178be-123">No values are returned for the secrets.</span></span> <span data-ttu-id="178be-124">この操作には、シークレット/リスト権限が必要です。</span><span class="sxs-lookup"><span data-stu-id="178be-124">This operations requires the secrets/list permission.</span></span>
      <span data-ttu-id="178be-125">使用例:</span><span class="sxs-lookup"><span data-stu-id="178be-125">Example usage:</span></span>
      ```ts
      let client = new SecretsClient(url, credentials);
      for await (const secretAttr of client.listDeletedSecrets()) {
        const deletedSecret = await client.getSecret(secretAttr.name);
        console.log("deleted secret: ", deletedSecret);
      }
      ```
    syntax:
      content: 'function listDeletedSecrets(options?: GetSecretsOptions)'
      parameters:
        - id: options
          type:
            - '@azure/keyvault-secrets.GetSecretsOptions'
          description: ''
          optional: true
      return:
        type:
          - 'PagedAsyncIterableIterator<@azure/keyvault-secrets.SecretAttributes, @azure/keyvault-secrets.SecretAttributes[]>'
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.listSecrets'
    name: listSecrets(GetSecretsOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="178be-126">資格情報コンテナー内のすべてのシークレットの最新バージョンを反復処理します。</span><span class="sxs-lookup"><span data-stu-id="178be-126">Iterates the latest version of all secrets in the vault.</span></span>  <span data-ttu-id="178be-127">完全なシークレット識別子と属性は、応答で提供されます。</span><span class="sxs-lookup"><span data-stu-id="178be-127">The full secret identifier and attributes are provided in the response.</span></span> <span data-ttu-id="178be-128">シークレットの値は返されません。</span><span class="sxs-lookup"><span data-stu-id="178be-128">No values are returned for the secrets.</span></span> <span data-ttu-id="178be-129">この操作には、シークレット/リスト権限が必要です。</span><span class="sxs-lookup"><span data-stu-id="178be-129">This operations requires the secrets/list permission.</span></span>
      <span data-ttu-id="178be-130">使用例:</span><span class="sxs-lookup"><span data-stu-id="178be-130">Example usage:</span></span>
      ```ts
      let client = new SecretsClient(url, credentials);
      for await (const secretAttr of client.listSecrets()) {
        const secret = await client.getSecret(secretAttr.name);
        console.log("secret: ", secret);
      }
      ```
    syntax:
      content: 'function listSecrets(options?: GetSecretsOptions)'
      parameters:
        - id: options
          type:
            - '@azure/keyvault-secrets.GetSecretsOptions'
          description: ''
          optional: true
      return:
        type:
          - 'PagedAsyncIterableIterator<@azure/keyvault-secrets.SecretAttributes, @azure/keyvault-secrets.SecretAttributes[]>'
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.listSecretVersions'
    name: 'listSecretVersions(string, GetSecretsOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="178be-131">すべてのバージョン、コンテナー内の特定のシークレットの反復処理します。</span><span class="sxs-lookup"><span data-stu-id="178be-131">Iterates all versions of the given secret in the vault.</span></span> <span data-ttu-id="178be-132">完全なシークレット識別子と属性は、応答で提供されます。</span><span class="sxs-lookup"><span data-stu-id="178be-132">The full secret identifier and attributes are provided in the response.</span></span> <span data-ttu-id="178be-133">シークレットの値は返されません。</span><span class="sxs-lookup"><span data-stu-id="178be-133">No values are returned for the secrets.</span></span> <span data-ttu-id="178be-134">この操作には、シークレット/リスト権限が必要です。</span><span class="sxs-lookup"><span data-stu-id="178be-134">This operations requires the secrets/list permission.</span></span>
      <span data-ttu-id="178be-135">使用例:</span><span class="sxs-lookup"><span data-stu-id="178be-135">Example usage:</span></span>
      ```ts
      let client = new SecretsClient(url, credentials);
      for await (const secretAttr of client.listSecretVersions("MySecretName")) {
        const secret = await client.getSecret(secretAttr.name);
        console.log("secret version: ", secret);
      }
      ```
    syntax:
      content: 'function listSecretVersions(secretName: string, options?: GetSecretsOptions)'
      parameters:
        - id: secretName
          type:
            - string
          description: <span data-ttu-id="178be-136">バージョンをフェッチするシークレットの名前</span><span class="sxs-lookup"><span data-stu-id="178be-136">Name of the secret to fetch versions for</span></span>
        - id: options
          type:
            - '@azure/keyvault-secrets.GetSecretsOptions'
          description: ''
          optional: true
      return:
        type:
          - 'PagedAsyncIterableIterator<@azure/keyvault-secrets.SecretAttributes, @azure/keyvault-secrets.SecretAttributes[]>'
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.pipeline'
    name: pipeline
    fullName: pipeline
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="178be-137">サービスへの接続を作成するオプション</span><span class="sxs-lookup"><span data-stu-id="178be-137">The options to create the connection to the service</span></span>
    syntax:
      content: 'pipeline: ServiceClientOptions'
      return:
        type:
          - ServiceClientOptions
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.purgeDeletedSecret'
    name: 'purgeDeletedSecret(string, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="178be-138">削除するパージ シークレット操作は、回復を永続的にシークレットを削除します。</span><span class="sxs-lookup"><span data-stu-id="178be-138">The purge deleted secret operation removes the secret permanently, without the possibility of recovery.</span></span> <span data-ttu-id="178be-139">この操作は、論理的な削除が有効なコンテナーでのみ有効にできます。</span><span class="sxs-lookup"><span data-stu-id="178be-139">This operation can only be enabled on a soft-delete enabled vault.</span></span> <span data-ttu-id="178be-140">この操作では、シークレット/消去アクセス許可が必要です。</span><span class="sxs-lookup"><span data-stu-id="178be-140">This operation requires the secrets/purge permission.</span></span>
      <span data-ttu-id="178be-141">使用例:</span><span class="sxs-lookup"><span data-stu-id="178be-141">Example usage:</span></span>
      ```ts
      let client = new SecretsClient(url, credentials);
      await client.deleteSecret("MySecretName");
      await client.purgeDeletedSecret("MySecretName");
      ```
    syntax:
      content: 'function purgeDeletedSecret(secretName: string, options?: RequestOptionsBase)'
      parameters:
        - id: secretName
          type:
            - string
          description: <span data-ttu-id="178be-142">シークレットの名前。</span><span class="sxs-lookup"><span data-stu-id="178be-142">The name of the secret.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.recoverDeletedSecret'
    name: 'recoverDeletedSecret(string, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="178be-143">指定されたコンテナーで削除されたシークレットを復元します。</span><span class="sxs-lookup"><span data-stu-id="178be-143">Recovers the deleted secret in the specified vault.</span></span> <span data-ttu-id="178be-144">この操作は、論理的な削除が有効なコンテナーでのみ実行できます。</span><span class="sxs-lookup"><span data-stu-id="178be-144">This operation can only be performed on a soft-delete enabled vault.</span></span> <span data-ttu-id="178be-145">この操作では、シークレット/回復のアクセス許可が必要です。</span><span class="sxs-lookup"><span data-stu-id="178be-145">This operation requires the secrets/recover permission.</span></span>
      <span data-ttu-id="178be-146">使用例:</span><span class="sxs-lookup"><span data-stu-id="178be-146">Example usage:</span></span>
      ```ts
      let client = new SecretsClient(url, credentials);
      await client.deleteSecret("MySecretName");
      await client.recoverDeletedSecret("MySecretName");
      ```
    syntax:
      content: 'function recoverDeletedSecret(secretName: string, options?: RequestOptionsBase)'
      parameters:
        - id: secretName
          type:
            - string
          description: <span data-ttu-id="178be-147">削除されたシークレットの名前。</span><span class="sxs-lookup"><span data-stu-id="178be-147">The name of the deleted secret.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-secrets.Secret>
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.restoreSecret'
    name: 'restoreSecret(Uint8Array, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="178be-148">コンテナーにバックアップ シークレット、およびすべてのバージョンを復元します。</span><span class="sxs-lookup"><span data-stu-id="178be-148">Restores a backed up secret, and all its versions, to a vault.</span></span> <span data-ttu-id="178be-149">この操作には、シークレット/復元権限が必要です。</span><span class="sxs-lookup"><span data-stu-id="178be-149">This operation requires the secrets/restore permission.</span></span>
      <span data-ttu-id="178be-150">使用例:</span><span class="sxs-lookup"><span data-stu-id="178be-150">Example usage:</span></span>
      ```ts
      let client = new SecretsClient(url, credentials);
      let mySecretBundle = await client.backupSecret("MySecretName");
      // ...
      await client.restoreSecret(mySecretBundle);
      ```
    syntax:
      content: 'function restoreSecret(secretBundleBackup: Uint8Array, options?: RequestOptionsBase)'
      parameters:
        - id: secretBundleBackup
          type:
            - Uint8Array
          description: <span data-ttu-id="178be-151">シークレットのバンドルに関連付けられているバックアップ blob。</span><span class="sxs-lookup"><span data-stu-id="178be-151">The backup blob associated with a secret bundle.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-secrets.Secret>
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.constructor'
    name: 'SecretsClient(string, ServiceClientCredentials | TokenCredential, ServiceClientOptions | NewPipelineOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="178be-152">SecretsClient のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="178be-152">Creates an instance of SecretsClient.</span></span>
      <span data-ttu-id="178be-153">使用例:</span><span class="sxs-lookup"><span data-stu-id="178be-153">Example usage:</span></span>
      ```ts
      import { SecretsClient } from "@azure/keyvault-secrets";
      import { EnvironmentCredential } from "@azure/identity";

      let url = `https://<MY KEYVAULT HERE>.vault.azure.net`;
      let credentials = new EnvironmentCredential();

      let client = new SecretsClient(url, credentials);
      ```
    syntax:
      content: 'new SecretsClient(url: string, credential: ServiceClientCredentials | TokenCredential, pipelineOrOptions?: ServiceClientOptions | NewPipelineOptions)'
      parameters:
        - id: url
          type:
            - string
          description: <span data-ttu-id="178be-154">key vault にベース url。</span><span class="sxs-lookup"><span data-stu-id="178be-154">the base url to the key vault.</span></span>
        - id: credential
          type:
            - ServiceClientCredentials | TokenCredential
          description: ''
        - id: pipelineOrOptions
          type:
            - ServiceClientOptions | @azure/keyvault-secrets.NewPipelineOptions
          description: ''
          optional: true
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.setSecret'
    name: 'setSecret(string, string, SetSecretOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="178be-155">設定操作では、Azure Key Vault にシークレットを追加します。</span><span class="sxs-lookup"><span data-stu-id="178be-155">The SET operation adds a secret to the Azure Key Vault.</span></span> <span data-ttu-id="178be-156">名前付きのシークレットが既に存在する場合、Azure Key Vault はシークレットの新しいバージョンを作成します。</span><span class="sxs-lookup"><span data-stu-id="178be-156">If the named secret already exists, Azure Key Vault creates a new version of that secret.</span></span> <span data-ttu-id="178be-157">この操作では、シークレット/設定アクセス許可が必要です。</span><span class="sxs-lookup"><span data-stu-id="178be-157">This operation requires the secrets/set permission.</span></span>
      <span data-ttu-id="178be-158">使用例:</span><span class="sxs-lookup"><span data-stu-id="178be-158">Example usage:</span></span>
      ```ts
      let client = new SecretsClient(url, credentials);
      await client.setSecret("MySecretName", "ABC123");
      ```
    syntax:
      content: 'function setSecret(secretName: string, value: string, options?: SetSecretOptions)'
      parameters:
        - id: secretName
          type:
            - string
          description: <span data-ttu-id="178be-159">シークレットの名前。</span><span class="sxs-lookup"><span data-stu-id="178be-159">The name of the secret.</span></span>
        - id: value
          type:
            - string
          description: <span data-ttu-id="178be-160">シークレットの値。</span><span class="sxs-lookup"><span data-stu-id="178be-160">The value of the secret.</span></span>
        - id: options
          type:
            - '@azure/keyvault-secrets.SetSecretOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-secrets.Secret>
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.updateSecretAttributes'
    name: 'updateSecretAttributes(string, string, UpdateSecretOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="178be-161">更新操作では、既存の格納されているシークレットの指定された属性を変更します。</span><span class="sxs-lookup"><span data-stu-id="178be-161">The UPDATE operation changes specified attributes of an existing stored secret.</span></span> <span data-ttu-id="178be-162">要求で指定されていない属性のまま変更されません。</span><span class="sxs-lookup"><span data-stu-id="178be-162">Attributes that are not specified in the request are left unchanged.</span></span> <span data-ttu-id="178be-163">シークレット自体の値を変更できません。</span><span class="sxs-lookup"><span data-stu-id="178be-163">The value of a secret itself cannot be changed.</span></span> <span data-ttu-id="178be-164">この操作では、シークレット/設定アクセス許可が必要です。</span><span class="sxs-lookup"><span data-stu-id="178be-164">This operation requires the secrets/set permission.</span></span>
      <span data-ttu-id="178be-165">使用例:</span><span class="sxs-lookup"><span data-stu-id="178be-165">Example usage:</span></span>
      ```ts
      let secretName = "MySecretName";
      let client = new SecretsClient(url, credentials);
      let secret = await client.getSecret(secretName);
      await client.updateSecret(secretName, secret.version, { enabled: false });
      ```
    syntax:
      content: 'function updateSecretAttributes(secretName: string, secretVersion: string, options?: UpdateSecretOptions)'
      parameters:
        - id: secretName
          type:
            - string
          description: <span data-ttu-id="178be-166">シークレットの名前。</span><span class="sxs-lookup"><span data-stu-id="178be-166">The name of the secret.</span></span>
        - id: secretVersion
          type:
            - string
          description: <span data-ttu-id="178be-167">シークレットのバージョン。</span><span class="sxs-lookup"><span data-stu-id="178be-167">The version of the secret.</span></span>
        - id: options
          type:
            - '@azure/keyvault-secrets.UpdateSecretOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-secrets.Secret>
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.vaultBaseUrl'
    name: vaultBaseUrl
    fullName: vaultBaseUrl
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="178be-168">コンテナーにベース URL</span><span class="sxs-lookup"><span data-stu-id="178be-168">The base URL to the vault</span></span>
    syntax:
      content: 'vaultBaseUrl: string'
      return:
        type:
          - string
    package: '@azure/keyvault-secrets'
references:
  - uid: ServiceClientOptions | @azure/keyvault-secrets.NewPipelineOptions
    name: NewPipelineOptions
    spec.typeScript:
      - name: 'ServiceClientOptions | '
        fullName: 'ServiceClientOptions | '
      - name: NewPipelineOptions
        fullName: NewPipelineOptions
        uid: '@azure/keyvault-secrets.NewPipelineOptions'
  - uid: Promise<@azure/keyvault-secrets.DeletedSecret>
    name: DeletedSecret>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DeletedSecret
        fullName: DeletedSecret
        uid: '@azure/keyvault-secrets.DeletedSecret'
      - name: '>'
        fullName: '>'
  - uid: '@azure/keyvault-secrets.GetSecretOptions'
    name: GetSecretOptions
    spec.typeScript:
      - name: GetSecretOptions
        fullName: GetSecretOptions
        uid: '@azure/keyvault-secrets.GetSecretOptions'
  - uid: Promise<@azure/keyvault-secrets.Secret>
    name: Secret>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Secret
        fullName: Secret
        uid: '@azure/keyvault-secrets.Secret'
      - name: '>'
        fullName: '>'
  - uid: '@azure/keyvault-secrets.GetSecretsOptions'
    name: GetSecretsOptions
    spec.typeScript:
      - name: GetSecretsOptions
        fullName: GetSecretsOptions
        uid: '@azure/keyvault-secrets.GetSecretsOptions'
  - uid: 'PagedAsyncIterableIterator<@azure/keyvault-secrets.SecretAttributes, @azure/keyvault-secrets.SecretAttributes[]>'
    name: 'SecretAttributes[]>'
    spec.typeScript:
      - name: PagedAsyncIterableIterator<
        fullName: PagedAsyncIterableIterator<
      - name: SecretAttributes
        fullName: SecretAttributes
        uid: '@azure/keyvault-secrets.SecretAttributes'
      - name: ', '
        fullName: ', '
      - name: SecretAttributes
        fullName: SecretAttributes
        uid: '@azure/keyvault-secrets.SecretAttributes'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/keyvault-secrets.SetSecretOptions'
    name: SetSecretOptions
    spec.typeScript:
      - name: SetSecretOptions
        fullName: SetSecretOptions
        uid: '@azure/keyvault-secrets.SetSecretOptions'
  - uid: '@azure/keyvault-secrets.UpdateSecretOptions'
    name: UpdateSecretOptions
    spec.typeScript:
      - name: UpdateSecretOptions
        fullName: UpdateSecretOptions
        uid: '@azure/keyvault-secrets.UpdateSecretOptions'
  - uid: '@azure/keyvault-secrets.NewPipelineOptions'
    name: NewPipelineOptions
    spec.typeScript:
      - name: NewPipelineOptions
        fullName: NewPipelineOptions
        uid: '@azure/keyvault-secrets.NewPipelineOptions'