### YamlMime:UniversalReference
ms.openlocfilehash: 70f7fdced044f28d0c42ea199dc464034747e39c
ms.sourcegitcommit: 286f52ea38c9eff2ec9d4f8cabeb86f62fd9c406
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 08/22/2018
ms.locfileid: "41476673"
items:
- uid: azure-iot-device.ModuleClient
  name: ModuleClient
  fullName: ModuleClient
  children:
  - azure-iot-device.ModuleClient.close
  - azure-iot-device.ModuleClient.fromAuthenticationProvider
  - azure-iot-device.ModuleClient.fromConnectionString
  - azure-iot-device.ModuleClient.fromEnvironment
  - azure-iot-device.ModuleClient.fromSharedAccessSignature
  - azure-iot-device.ModuleClient.invokeMethod
  - azure-iot-device.ModuleClient.invokeMethod_1
  - azure-iot-device.ModuleClient.onMethod
  - azure-iot-device.ModuleClient.sendOutputEvent
  - azure-iot-device.ModuleClient.sendOutputEventBatch
  - azure-iot-device.ModuleClient.setOptions
  langs:
  - typeScript
  type: class
  summary: >
    <span data-ttu-id="97fcb-101">IoT Hub デバイス クライアントは、Azure IoT hub とデバイスを接続するために使用します。</span><span class="sxs-lookup"><span data-stu-id="97fcb-101">IoT Hub device client used to connect a device with an Azure IoT hub.</span></span>

    <span data-ttu-id="97fcb-102">SDK のユーザーは、ファクトリ メソッドのいずれかを呼び出す必要があります[fromConnectionString](xref:azure-iot-device.Client.fromConnectionString)または[fromSharedAccessSignature](xref:azure-iot-device.Client.fromSharedAccessSignature) IoT Hub デバイス クライアントを作成します。</span><span class="sxs-lookup"><span data-stu-id="97fcb-102">Users of the SDK should call one of the factory methods, [fromConnectionString](xref:azure-iot-device.Client.fromConnectionString) or [fromSharedAccessSignature](xref:azure-iot-device.Client.fromSharedAccessSignature) to create an IoT Hub device client.</span></span>
  extends:
    name: InternalClient
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.close
  name: close
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="97fcb-103">トランスポート接続を終了し、クライアントのリソースを破棄します。</span><span class="sxs-lookup"><span data-stu-id="97fcb-103">Closes the transport connection and destroys the client resources.</span></span>

    <span data-ttu-id="97fcb-104">*注: ModuleClient、このメソッドを呼び出した後オブジェクトを使用することはできません。*</span><span class="sxs-lookup"><span data-stu-id="97fcb-104">*Note: After calling this method the ModuleClient object cannot be reused.*</span></span>
  syntax:
    content: 'function close(closeCallback?: (err?: Error, result?: Disconnected) => void)'
    parameters:
    - id: closeCallback
      type:
      - '(err?: Error, result?: Disconnected) => void'
      description: >
        <span data-ttu-id="97fcb-105">トランスポートが切断された後に呼び出される関数と、クライアントが閉じられます。</span><span class="sxs-lookup"><span data-stu-id="97fcb-105">Function to call once the transport is disconnected and the client closed.</span></span>
      optional: true
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.fromAuthenticationProvider
  name: fromAuthenticationProvider
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="97fcb-106">指定された認証方法と、特定のトランスポートの種類を使用して、IoT Hub モジュールのクライアントを作成します。</span><span class="sxs-lookup"><span data-stu-id="97fcb-106">Creates an IoT Hub module client from the given authentication method and using the given transport type.</span></span>
  syntax:
    content: 'static function fromAuthenticationProvider(authenticationProvider: AuthenticationProvider, transportCtor: any)'
    parameters:
    - id: authenticationProvider
      type:
      - AuthenticationProvider
      description: <span data-ttu-id="97fcb-107">IoT hub の認証パラメーターを取得するために使用するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="97fcb-107">Object used to obtain the authentication parameters for the IoT hub.</span></span>
    - id: transportCtor
      type:
      - any
      description: >
        <span data-ttu-id="97fcb-108">トランスポート プロトコルの IoT hub に接続するために使用します。</span><span class="sxs-lookup"><span data-stu-id="97fcb-108">Transport protocol used to connect to IoT hub.</span></span>
    return:
      type:
      - any
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.fromConnectionString
  name: fromConnectionString
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="97fcb-109">特定のトランスポートの種類を使用して、特定の接続文字列から、IoT Hub デバイス クライアントを作成します。</span><span class="sxs-lookup"><span data-stu-id="97fcb-109">Creates an IoT Hub device client from the given connection string using the given transport type.</span></span>
  syntax:
    content: 'static function fromConnectionString(connStr: string, transportCtor: any)'
    parameters:
    - id: connStr
      type:
      - string
      description: <span data-ttu-id="97fcb-110">IoT hub での「デバイスの接続」アクセス許可をカプセル化されている接続文字列。</span><span class="sxs-lookup"><span data-stu-id="97fcb-110">A connection string which encapsulates "device connect" permissions on an IoT hub.</span></span>
    - id: transportCtor
      type:
      - any
      description: >
        <span data-ttu-id="97fcb-111">トランスポートのコンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="97fcb-111">A transport constructor.</span></span>
    return:
      type:
      - azure-iot-device.ModuleClient
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.fromEnvironment
  name: fromEnvironment
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="97fcb-112">環境から構成情報を使用して、IoT Hub モジュールのクライアントを作成します。</span><span class="sxs-lookup"><span data-stu-id="97fcb-112">Creates an IoT Hub module client by using configuration information from the environment.</span></span>

    <span data-ttu-id="97fcb-113">環境変数が呼び出された場合`EdgeHubConnectionString`または`IotHubConnectionString`その値が使用され、動作を呼び出すことと同じですが、存在する`fromConnectionString`で渡します。</span><span class="sxs-lookup"><span data-stu-id="97fcb-113">If an environment variable called `EdgeHubConnectionString` or `IotHubConnectionString` exists, then that value is used and behavior is identical to calling `fromConnectionString` passing that in.</span></span> <span data-ttu-id="97fcb-114">これらの環境変数が存在しない場合は、次の変数を定義する必要があります。</span><span class="sxs-lookup"><span data-stu-id="97fcb-114">If those environment variables do not exist then the following variables MUST be defined:</span></span>

        - <span data-ttu-id="97fcb-115">API の iotedged のワークロードの IOTEDGE_WORKLOADURI URI</span><span class="sxs-lookup"><span data-stu-id="97fcb-115">IOTEDGE_WORKLOADURI          URI for iotedged's workload API</span></span>
        - <span data-ttu-id="97fcb-116">IOTEDGE_DEVICEID デバイス識別子</span><span class="sxs-lookup"><span data-stu-id="97fcb-116">IOTEDGE_DEVICEID             Device identifier</span></span>
        - <span data-ttu-id="97fcb-117">IOTEDGE_MODULEID モジュールの識別子</span><span class="sxs-lookup"><span data-stu-id="97fcb-117">IOTEDGE_MODULEID             Module identifier</span></span>
        - <span data-ttu-id="97fcb-118">IOTEDGE_MODULEGENERATIONID モジュール id</span><span class="sxs-lookup"><span data-stu-id="97fcb-118">IOTEDGE_MODULEGENERATIONID   Module generation identifier</span></span>
        - <span data-ttu-id="97fcb-119">IOTEDGE_IOTHUBHOSTNAME IoT Hub ホスト名</span><span class="sxs-lookup"><span data-stu-id="97fcb-119">IOTEDGE_IOTHUBHOSTNAME       IoT Hub host name</span></span>
        - <span data-ttu-id="97fcb-120">を使用する IOTEDGE_AUTHSCHEME 認証スキーム"sasToken"である必要があります。</span><span class="sxs-lookup"><span data-stu-id="97fcb-120">IOTEDGE_AUTHSCHEME           Authentication scheme to use; must be "sasToken"</span></span>
  syntax:
    content: 'static function fromEnvironment(transportCtor: any, callback: (err?: Error, client?: ModuleClient) => void)'
    parameters:
    - id: transportCtor
      type:
      - any
      description: <span data-ttu-id="97fcb-121">トランスポート プロトコルの IoT hub に接続するために使用します。</span><span class="sxs-lookup"><span data-stu-id="97fcb-121">Transport protocol used to connect to IoT hub.</span></span>
    - id: callback
      type:
      - '(err?: Error, client?: ModuleClient) => void'
      description: >
        <span data-ttu-id="97fcb-122">クライアントの作成中にエラーが発生した場合や、ModuleClient constructured がときに呼び出すコールバック。</span><span class="sxs-lookup"><span data-stu-id="97fcb-122">Callback to invoke when the ModuleClient has been constructured or if an error occurs while creating the client.</span></span>
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.fromSharedAccessSignature
  name: fromSharedAccessSignature
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="97fcb-123">特定のトランスポートの種類を使用して特定の共有アクセス署名から、IoT Hub モジュールのクライアントを作成します。</span><span class="sxs-lookup"><span data-stu-id="97fcb-123">Creates an IoT Hub module client from the given shared access signature using the given transport type.</span></span>
  syntax:
    content: 'static function fromSharedAccessSignature(sharedAccessSignature: string, transportCtor: any)'
    parameters:
    - id: sharedAccessSignature
      type:
      - string
      description: <span data-ttu-id="97fcb-124">IoT hub での「デバイスの接続」アクセス許可をカプセル化されている共有アクセス署名を指定します。</span><span class="sxs-lookup"><span data-stu-id="97fcb-124">A shared access signature which encapsulates "device connect" permissions on an IoT hub.</span></span>
    - id: transportCtor
      type:
      - any
      description: ''
    return:
      type:
      - any
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.invokeMethod
  name: invokeMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="97fcb-125">ダウン ストリーム デバイスまたは同じのエッジ デバイス上の別のモジュールにメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="97fcb-125">Invokes a method on a downstream device or on another module on the same Edge device.</span></span> <span data-ttu-id="97fcb-126">エッジ デバイスの一部として、モジュールが実行されている、この機能が動作だけに注意してください。</span><span class="sxs-lookup"><span data-stu-id="97fcb-126">Please note that this feature only works when the module is being run as part of an Edge device.</span></span>
  syntax:
    content: 'function invokeMethod(deviceId: string, methodParams: MethodParams, callback: MethodCallback)'
    parameters:
    - id: deviceId
      type:
      - string
      description: <span data-ttu-id="97fcb-127">ターゲット デバイスの識別子</span><span class="sxs-lookup"><span data-stu-id="97fcb-127">target device identifier</span></span>
    - id: methodParams
      type:
      - azure-iot-device.MethodParams
      description: <span data-ttu-id="97fcb-128">ダイレクト メソッド呼び出しのパラメーター</span><span class="sxs-lookup"><span data-stu-id="97fcb-128">parameters of the direct method call</span></span>
    - id: callback
      type:
      - azure-iot-device.MethodCallback
      description: >
        <span data-ttu-id="97fcb-129">エラー オブジェクトまたはメソッド呼び出しの結果で呼び出されるコールバック。</span><span class="sxs-lookup"><span data-stu-id="97fcb-129">callback that will be invoked either with an Error object or the result of the method call.</span></span>
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.invokeMethod_1
  name: invokeMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="97fcb-130">ダウン ストリーム デバイスまたは同じのエッジ デバイス上の別のモジュールにメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="97fcb-130">Invokes a method on a downstream device or on another module on the same Edge device.</span></span> <span data-ttu-id="97fcb-131">エッジ デバイスの一部として、モジュールが実行されている、この機能が動作だけに注意してください。</span><span class="sxs-lookup"><span data-stu-id="97fcb-131">Please note that this feature only works when the module is being run as part of an Edge device.</span></span>
  syntax:
    content: 'function invokeMethod(deviceId: string, moduleId: string, methodParams: MethodParams, callback: MethodCallback)'
    parameters:
    - id: deviceId
      type:
      - string
      description: ''
    - id: moduleId
      type:
      - string
      description: ''
    - id: methodParams
      type:
      - azure-iot-device.MethodParams
      description: ''
    - id: callback
      type:
      - azure-iot-device.MethodCallback
      description: ''
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.onMethod
  name: onMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="97fcb-132">という名前のメソッドのコールバックを登録`methodName`します。</span><span class="sxs-lookup"><span data-stu-id="97fcb-132">Registers a callback for a method named `methodName`.</span></span>
  syntax:
    content: 'function onMethod(methodName: string, callback: (request: DeviceMethodRequest, response: DeviceMethodResponse) => void)'
    parameters:
    - id: methodName
      type:
      - string
      description: <span data-ttu-id="97fcb-133">コールバックによって処理されるメソッドの名前</span><span class="sxs-lookup"><span data-stu-id="97fcb-133">Name of the method that will be handled by the callback</span></span>
    - id: callback
      type:
      - '(request: DeviceMethodRequest, response: DeviceMethodResponse) => void'
      description: >
        <span data-ttu-id="97fcb-134">メソッドのメソッドの要求が呼び出されるたびに呼び出されます関数`methodName`を受信します。</span><span class="sxs-lookup"><span data-stu-id="97fcb-134">Function that shall be called whenever a method request for the method called `methodName` is received.</span></span>
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.sendOutputEvent
  name: sendOutputEvent
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="97fcb-135">指定したモジュールの出力にイベントを送信します。</span><span class="sxs-lookup"><span data-stu-id="97fcb-135">Sends an event to the given module output</span></span>
  syntax:
    content: 'function sendOutputEvent(outputName: string, message: Message, callback: (err?: Error, result?: MessageEnqueued) => void)'
    parameters:
    - id: outputName
      type:
      - string
      description: <span data-ttu-id="97fcb-136">イベントを送信する出力の名前</span><span class="sxs-lookup"><span data-stu-id="97fcb-136">Name of the output to send the event to</span></span>
    - id: message
      type:
      - Message
      description: <span data-ttu-id="97fcb-137">指定した出力に送信するメッセージ</span><span class="sxs-lookup"><span data-stu-id="97fcb-137">Message to send to the given output</span></span>
    - id: callback
      type:
      - '(err?: Error, result?: MessageEnqueued) => void'
      description: >
        <span data-ttu-id="97fcb-138">操作がキューに登録されているときに呼び出す関数。</span><span class="sxs-lookup"><span data-stu-id="97fcb-138">Function to call when the operation has been queued.</span></span>
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.sendOutputEventBatch
  name: sendOutputEventBatch
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="97fcb-139">イベントの配列を指定したモジュール出力に送信します。</span><span class="sxs-lookup"><span data-stu-id="97fcb-139">Sends an array of events to the given module output</span></span>
  syntax:
    content: 'function sendOutputEventBatch(outputName: string, messages: Message[], callback: (err?: Error, result?: MessageEnqueued) => void)'
    parameters:
    - id: outputName
      type:
      - string
      description: <span data-ttu-id="97fcb-140">イベントを送信する出力の名前</span><span class="sxs-lookup"><span data-stu-id="97fcb-140">Name of the output to send the events to</span></span>
    - id: messages
      type:
      - Message[]
      description: ''
    - id: callback
      type:
      - '(err?: Error, result?: MessageEnqueued) => void'
      description: >
        <span data-ttu-id="97fcb-141">操作がキュー登録されたときに呼び出す関数。</span><span class="sxs-lookup"><span data-stu-id="97fcb-141">Function to call when the operations have been queued.</span></span>
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.setOptions
  name: setOptions
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="97fcb-142">オプションを渡す、`ModuleClient`トランスポートを構成するために使用できるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="97fcb-142">Passes options to the `ModuleClient` object that can be used to configure the transport.</span></span>
  syntax:
    content: 'function setOptions(options: DeviceClientOptions, done?: (err?: Error, result?: TransportConfigured) => void)'
    parameters:
    - id: options
      type:
      - azure-iot-device.DeviceClientOptions
      description: <span data-ttu-id="97fcb-143">A<xref:DeviceClientOptions>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="97fcb-143">A <xref:DeviceClientOptions> object.</span></span>
    - id: done
      type:
      - '(err?: Error, result?: TransportConfigured) => void'
      description: >
        <span data-ttu-id="97fcb-144">オプションが設定されている 1 回呼び出すコールバック。</span><span class="sxs-lookup"><span data-stu-id="97fcb-144">The callback to call once the options have been set.</span></span>
      optional: true
  package: azure-iot-device
references:
- uid: azure-iot-device.MethodParams
  spec.typeScript:
  - name: MethodParams
    fullName: MethodParams
    uid: azure-iot-device.MethodParams
- uid: azure-iot-device.MethodCallback
  spec.typeScript:
  - name: MethodCallback
    fullName: MethodCallback
    uid: azure-iot-device.MethodCallback
- uid: azure-iot-device.DeviceClientOptions
  spec.typeScript:
  - name: DeviceClientOptions
    fullName: DeviceClientOptions
    uid: azure-iot-device.DeviceClientOptions
- uid: azure-iot-device.ModuleClient
  spec.typeScript:
  - name: ModuleClient
    fullName: ModuleClient
    uid: azure-iot-device.ModuleClient
