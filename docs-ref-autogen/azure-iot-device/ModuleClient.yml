### YamlMime:UniversalReference
ms.openlocfilehash: c2b93dacc7cedb9cb424f2fd53eb419a9b4b1a63
ms.sourcegitcommit: ce76ec3eda83746ef9a765165173b5c00b5b7df6
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 12/20/2018
ms.locfileid: "53710507"
items:
- uid: azure-iot-device.ModuleClient
  name: ModuleClient
  fullName: ModuleClient
  children:
  - azure-iot-device.ModuleClient.close_1
  - azure-iot-device.ModuleClient.close
  - azure-iot-device.ModuleClient.fromAuthenticationProvider
  - azure-iot-device.ModuleClient.fromConnectionString
  - azure-iot-device.ModuleClient.fromEnvironment_1
  - azure-iot-device.ModuleClient.fromEnvironment
  - azure-iot-device.ModuleClient.fromSharedAccessSignature
  - azure-iot-device.ModuleClient.invokeMethod_2
  - azure-iot-device.ModuleClient.invokeMethod
  - azure-iot-device.ModuleClient.invokeMethod_3
  - azure-iot-device.ModuleClient.invokeMethod_1
  - azure-iot-device.ModuleClient.onMethod
  - azure-iot-device.ModuleClient.sendOutputEvent_1
  - azure-iot-device.ModuleClient.sendOutputEvent
  - azure-iot-device.ModuleClient.sendOutputEventBatch_1
  - azure-iot-device.ModuleClient.sendOutputEventBatch
  - azure-iot-device.ModuleClient.setOptions_1
  - azure-iot-device.ModuleClient.setOptions
  langs:
  - typeScript
  type: class
  summary: >
    <span data-ttu-id="d8c8f-101">IoT Hub デバイス クライアントは、Azure IoT hub とデバイスを接続するために使用します。</span><span class="sxs-lookup"><span data-stu-id="d8c8f-101">IoT Hub device client used to connect a device with an Azure IoT hub.</span></span>

    <span data-ttu-id="d8c8f-102">SDK のユーザーは、ファクトリ メソッドのいずれかを呼び出す必要があります[fromConnectionString](xref:azure-iot-device.Client.fromConnectionString)または[fromSharedAccessSignature](xref:azure-iot-device.Client.fromSharedAccessSignature) IoT Hub デバイス クライアントを作成します。</span><span class="sxs-lookup"><span data-stu-id="d8c8f-102">Users of the SDK should call one of the factory methods, [fromConnectionString](xref:azure-iot-device.Client.fromConnectionString) or [fromSharedAccessSignature](xref:azure-iot-device.Client.fromSharedAccessSignature) to create an IoT Hub device client.</span></span>
  extends:
    name: InternalClient
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.close_1
  name: close()
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="d8c8f-103">トランスポート接続を終了し、クライアントのリソースを破棄します。</span><span class="sxs-lookup"><span data-stu-id="d8c8f-103">Closes the transport connection and destroys the client resources.</span></span>

    <span data-ttu-id="d8c8f-104">*注:ModuleClient、このメソッドを呼び出した後は、オブジェクトを再利用することはできません。*</span><span class="sxs-lookup"><span data-stu-id="d8c8f-104">*Note: After calling this method the ModuleClient object cannot be reused.*</span></span>
  syntax:
    content: function close()
    parameters: []
    return:
      type:
      - Promise<Disconnected>
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.close
  name: close(Callback<Disconnected>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="d8c8f-105">トランスポート接続を終了し、クライアントのリソースを破棄します。</span><span class="sxs-lookup"><span data-stu-id="d8c8f-105">Closes the transport connection and destroys the client resources.</span></span>

    <span data-ttu-id="d8c8f-106">*注:ModuleClient、このメソッドを呼び出した後は、オブジェクトを再利用することはできません。*</span><span class="sxs-lookup"><span data-stu-id="d8c8f-106">*Note: After calling this method the ModuleClient object cannot be reused.*</span></span>
  syntax:
    content: 'function close(closeCallback: Callback<Disconnected>)'
    parameters:
    - id: closeCallback
      type:
      - Callback<Disconnected>
      description: ''
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.fromAuthenticationProvider
  name: fromAuthenticationProvider(AuthenticationProvider, any)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d8c8f-107">指定された認証方法と、特定のトランスポートの種類を使用して、IoT Hub モジュールのクライアントを作成します。</span><span class="sxs-lookup"><span data-stu-id="d8c8f-107">Creates an IoT Hub module client from the given authentication method and using the given transport type.</span></span>
  syntax:
    content: 'static function fromAuthenticationProvider(authenticationProvider: AuthenticationProvider, transportCtor: any)'
    parameters:
    - id: authenticationProvider
      type:
      - AuthenticationProvider
      description: <span data-ttu-id="d8c8f-108">IoT hub の認証パラメーターを取得するために使用するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d8c8f-108">Object used to obtain the authentication parameters for the IoT hub.</span></span>
    - id: transportCtor
      type:
      - any
      description: >
        <span data-ttu-id="d8c8f-109">トランスポート プロトコルの IoT hub に接続するために使用します。</span><span class="sxs-lookup"><span data-stu-id="d8c8f-109">Transport protocol used to connect to IoT hub.</span></span>
    return:
      type:
      - azure-iot-device.ModuleClient
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.fromConnectionString
  name: fromConnectionString(string, any)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d8c8f-110">特定のトランスポートの種類を使用して、特定の接続文字列から、IoT Hub デバイス クライアントを作成します。</span><span class="sxs-lookup"><span data-stu-id="d8c8f-110">Creates an IoT Hub device client from the given connection string using the given transport type.</span></span>
  syntax:
    content: 'static function fromConnectionString(connStr: string, transportCtor: any)'
    parameters:
    - id: connStr
      type:
      - string
      description: <span data-ttu-id="d8c8f-111">IoT hub での「デバイスの接続」アクセス許可をカプセル化されている接続文字列。</span><span class="sxs-lookup"><span data-stu-id="d8c8f-111">A connection string which encapsulates "device connect" permissions on an IoT hub.</span></span>
    - id: transportCtor
      type:
      - any
      description: >
        <span data-ttu-id="d8c8f-112">トランスポートのコンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="d8c8f-112">A transport constructor.</span></span>
    return:
      type:
      - azure-iot-device.ModuleClient
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.fromEnvironment_1
  name: fromEnvironment(any)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="d8c8f-113">環境から構成情報を使用して、IoT Hub モジュールのクライアントを作成します。</span><span class="sxs-lookup"><span data-stu-id="d8c8f-113">Creates an IoT Hub module client by using configuration information from the environment.</span></span>

    <span data-ttu-id="d8c8f-114">環境変数が呼び出された場合`EdgeHubConnectionString`または`IotHubConnectionString`その値が使用され、動作を呼び出すことと同じですが、存在する`fromConnectionString`で渡します。</span><span class="sxs-lookup"><span data-stu-id="d8c8f-114">If an environment variable called `EdgeHubConnectionString` or `IotHubConnectionString` exists, then that value is used and behavior is identical to calling `fromConnectionString` passing that in.</span></span> <span data-ttu-id="d8c8f-115">これらの環境変数が存在しない場合は、次の変数を定義する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d8c8f-115">If those environment variables do not exist then the following variables MUST be defined:</span></span>

        - <span data-ttu-id="d8c8f-116">API の iotedged のワークロードの IOTEDGE_WORKLOADURI URI</span><span class="sxs-lookup"><span data-stu-id="d8c8f-116">IOTEDGE_WORKLOADURI          URI for iotedged's workload API</span></span>
        - <span data-ttu-id="d8c8f-117">IOTEDGE_DEVICEID デバイス識別子</span><span class="sxs-lookup"><span data-stu-id="d8c8f-117">IOTEDGE_DEVICEID             Device identifier</span></span>
        - <span data-ttu-id="d8c8f-118">IOTEDGE_MODULEID モジュールの識別子</span><span class="sxs-lookup"><span data-stu-id="d8c8f-118">IOTEDGE_MODULEID             Module identifier</span></span>
        - <span data-ttu-id="d8c8f-119">IOTEDGE_MODULEGENERATIONID モジュール id</span><span class="sxs-lookup"><span data-stu-id="d8c8f-119">IOTEDGE_MODULEGENERATIONID   Module generation identifier</span></span>
        - <span data-ttu-id="d8c8f-120">IOTEDGE_IOTHUBHOSTNAME IoT Hub ホスト名</span><span class="sxs-lookup"><span data-stu-id="d8c8f-120">IOTEDGE_IOTHUBHOSTNAME       IoT Hub host name</span></span>
        - <span data-ttu-id="d8c8f-121">を使用する IOTEDGE_AUTHSCHEME 認証スキーム"sasToken"である必要があります。</span><span class="sxs-lookup"><span data-stu-id="d8c8f-121">IOTEDGE_AUTHSCHEME           Authentication scheme to use; must be "sasToken"</span></span>
  syntax:
    content: 'static function fromEnvironment(transportCtor: any)'
    parameters:
    - id: transportCtor
      type:
      - any
      description: ''
    return:
      type:
      - Promise<azure-iot-device.ModuleClient>
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.fromEnvironment
  name: fromEnvironment(any, Callback<ModuleClient>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="d8c8f-122">環境から構成情報を使用して、IoT Hub モジュールのクライアントを作成します。</span><span class="sxs-lookup"><span data-stu-id="d8c8f-122">Creates an IoT Hub module client by using configuration information from the environment.</span></span>

    <span data-ttu-id="d8c8f-123">環境変数が呼び出された場合`EdgeHubConnectionString`または`IotHubConnectionString`その値が使用され、動作を呼び出すことと同じですが、存在する`fromConnectionString`で渡します。</span><span class="sxs-lookup"><span data-stu-id="d8c8f-123">If an environment variable called `EdgeHubConnectionString` or `IotHubConnectionString` exists, then that value is used and behavior is identical to calling `fromConnectionString` passing that in.</span></span> <span data-ttu-id="d8c8f-124">これらの環境変数が存在しない場合は、次の変数を定義する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d8c8f-124">If those environment variables do not exist then the following variables MUST be defined:</span></span>

        - <span data-ttu-id="d8c8f-125">API の iotedged のワークロードの IOTEDGE_WORKLOADURI URI</span><span class="sxs-lookup"><span data-stu-id="d8c8f-125">IOTEDGE_WORKLOADURI          URI for iotedged's workload API</span></span>
        - <span data-ttu-id="d8c8f-126">IOTEDGE_DEVICEID デバイス識別子</span><span class="sxs-lookup"><span data-stu-id="d8c8f-126">IOTEDGE_DEVICEID             Device identifier</span></span>
        - <span data-ttu-id="d8c8f-127">IOTEDGE_MODULEID モジュールの識別子</span><span class="sxs-lookup"><span data-stu-id="d8c8f-127">IOTEDGE_MODULEID             Module identifier</span></span>
        - <span data-ttu-id="d8c8f-128">IOTEDGE_MODULEGENERATIONID モジュール id</span><span class="sxs-lookup"><span data-stu-id="d8c8f-128">IOTEDGE_MODULEGENERATIONID   Module generation identifier</span></span>
        - <span data-ttu-id="d8c8f-129">IOTEDGE_IOTHUBHOSTNAME IoT Hub ホスト名</span><span class="sxs-lookup"><span data-stu-id="d8c8f-129">IOTEDGE_IOTHUBHOSTNAME       IoT Hub host name</span></span>
        - <span data-ttu-id="d8c8f-130">を使用する IOTEDGE_AUTHSCHEME 認証スキーム"sasToken"である必要があります。</span><span class="sxs-lookup"><span data-stu-id="d8c8f-130">IOTEDGE_AUTHSCHEME           Authentication scheme to use; must be "sasToken"</span></span>
  syntax:
    content: 'static function fromEnvironment(transportCtor: any, callback: Callback<ModuleClient>)'
    parameters:
    - id: transportCtor
      type:
      - any
      description: <span data-ttu-id="d8c8f-131">トランスポート プロトコルの IoT hub に接続するために使用します。</span><span class="sxs-lookup"><span data-stu-id="d8c8f-131">Transport protocol used to connect to IoT hub.</span></span>
    - id: callback
      type:
      - Callback<azure-iot-device.ModuleClient>
      description: ''
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.fromSharedAccessSignature
  name: fromSharedAccessSignature(string, any)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d8c8f-132">特定のトランスポートの種類を使用して特定の共有アクセス署名から、IoT Hub モジュールのクライアントを作成します。</span><span class="sxs-lookup"><span data-stu-id="d8c8f-132">Creates an IoT Hub module client from the given shared access signature using the given transport type.</span></span>
  syntax:
    content: 'static function fromSharedAccessSignature(sharedAccessSignature: string, transportCtor: any)'
    parameters:
    - id: sharedAccessSignature
      type:
      - string
      description: <span data-ttu-id="d8c8f-133">IoT hub での「デバイスの接続」アクセス許可をカプセル化されている共有アクセス署名を指定します。</span><span class="sxs-lookup"><span data-stu-id="d8c8f-133">A shared access signature which encapsulates "device connect" permissions on an IoT hub.</span></span>
    - id: transportCtor
      type:
      - any
      description: ''
    return:
      type:
      - azure-iot-device.ModuleClient
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.invokeMethod_2
  name: invokeMethod(string, MethodParams)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d8c8f-134">ダウン ストリーム デバイスまたは同じのエッジ デバイス上の別のモジュールにメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d8c8f-134">Invokes a method on a downstream device or on another module on the same Edge device.</span></span> <span data-ttu-id="d8c8f-135">エッジ デバイスの一部として、モジュールが実行されている、この機能が動作だけに注意してください。</span><span class="sxs-lookup"><span data-stu-id="d8c8f-135">Please note that this feature only works when the module is being run as part of an Edge device.</span></span>
  syntax:
    content: 'function invokeMethod(deviceId: string, methodParams: MethodParams)'
    parameters:
    - id: deviceId
      type:
      - string
      description: ''
    - id: methodParams
      type:
      - azure-iot-device.MethodParams
      description: ''
    return:
      type:
      - Promise<azure-iot-device.MethodResult>
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.invokeMethod
  name: invokeMethod(string, MethodParams, Callback<MethodResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d8c8f-136">ダウン ストリーム デバイスまたは同じのエッジ デバイス上の別のモジュールにメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d8c8f-136">Invokes a method on a downstream device or on another module on the same Edge device.</span></span> <span data-ttu-id="d8c8f-137">エッジ デバイスの一部として、モジュールが実行されている、この機能が動作だけに注意してください。</span><span class="sxs-lookup"><span data-stu-id="d8c8f-137">Please note that this feature only works when the module is being run as part of an Edge device.</span></span>
  syntax:
    content: 'function invokeMethod(deviceId: string, methodParams: MethodParams, callback: Callback<MethodResult>)'
    parameters:
    - id: deviceId
      type:
      - string
      description: <span data-ttu-id="d8c8f-138">ターゲット デバイスの識別子</span><span class="sxs-lookup"><span data-stu-id="d8c8f-138">target device identifier</span></span>
    - id: methodParams
      type:
      - azure-iot-device.MethodParams
      description: <span data-ttu-id="d8c8f-139">ダイレクト メソッド呼び出しのパラメーター</span><span class="sxs-lookup"><span data-stu-id="d8c8f-139">parameters of the direct method call</span></span>
    - id: callback
      type:
      - Callback<azure-iot-device.MethodResult>
      description: ''
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.invokeMethod_3
  name: invokeMethod(string, string, MethodParams)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d8c8f-140">ダウン ストリーム デバイスまたは同じのエッジ デバイス上の別のモジュールにメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d8c8f-140">Invokes a method on a downstream device or on another module on the same Edge device.</span></span> <span data-ttu-id="d8c8f-141">エッジ デバイスの一部として、モジュールが実行されている、この機能が動作だけに注意してください。</span><span class="sxs-lookup"><span data-stu-id="d8c8f-141">Please note that this feature only works when the module is being run as part of an Edge device.</span></span>
  syntax:
    content: 'function invokeMethod(deviceId: string, moduleId: string, methodParams: MethodParams)'
    parameters:
    - id: deviceId
      type:
      - string
      description: ''
    - id: moduleId
      type:
      - string
      description: ''
    - id: methodParams
      type:
      - azure-iot-device.MethodParams
      description: ''
    return:
      type:
      - Promise<azure-iot-device.MethodResult>
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.invokeMethod_1
  name: invokeMethod(string, string, MethodParams, Callback<MethodResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d8c8f-142">ダウン ストリーム デバイスまたは同じのエッジ デバイス上の別のモジュールにメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d8c8f-142">Invokes a method on a downstream device or on another module on the same Edge device.</span></span> <span data-ttu-id="d8c8f-143">エッジ デバイスの一部として、モジュールが実行されている、この機能が動作だけに注意してください。</span><span class="sxs-lookup"><span data-stu-id="d8c8f-143">Please note that this feature only works when the module is being run as part of an Edge device.</span></span>
  syntax:
    content: 'function invokeMethod(deviceId: string, moduleId: string, methodParams: MethodParams, callback: Callback<MethodResult>)'
    parameters:
    - id: deviceId
      type:
      - string
      description: ''
    - id: moduleId
      type:
      - string
      description: ''
    - id: methodParams
      type:
      - azure-iot-device.MethodParams
      description: ''
    - id: callback
      type:
      - Callback<azure-iot-device.MethodResult>
      description: ''
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.onMethod
  name: onMethod(string, DoubleValueCallback<DeviceMethodRequest, DeviceMethodResponse>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d8c8f-144">という名前のメソッドのコールバックを登録`methodName`します。</span><span class="sxs-lookup"><span data-stu-id="d8c8f-144">Registers a callback for a method named `methodName`.</span></span>
  syntax:
    content: 'function onMethod(methodName: string, callback: DoubleValueCallback<DeviceMethodRequest, DeviceMethodResponse>)'
    parameters:
    - id: methodName
      type:
      - string
      description: <span data-ttu-id="d8c8f-145">コールバックによって処理されるメソッドの名前</span><span class="sxs-lookup"><span data-stu-id="d8c8f-145">Name of the method that will be handled by the callback</span></span>
    - id: callback
      type:
      - DoubleValueCallback<azure-iot-device.DeviceMethodRequest, azure-iot-device.DeviceMethodResponse>
      description: >
        <span data-ttu-id="d8c8f-146">メソッドのメソッドの要求が呼び出されるたびに呼び出されます関数`methodName`を受信します。</span><span class="sxs-lookup"><span data-stu-id="d8c8f-146">Function that shall be called whenever a method request for the method called `methodName` is received.</span></span>
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.sendOutputEvent_1
  name: sendOutputEvent(string, Message)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d8c8f-147">指定したモジュールの出力にイベントを送信します。</span><span class="sxs-lookup"><span data-stu-id="d8c8f-147">Sends an event to the given module output</span></span>
  syntax:
    content: 'function sendOutputEvent(outputName: string, message: Message)'
    parameters:
    - id: outputName
      type:
      - string
      description: ''
    - id: message
      type:
      - Message
      description: ''
    return:
      type:
      - Promise<MessageEnqueued>
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.sendOutputEvent
  name: sendOutputEvent(string, Message, Callback<MessageEnqueued>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d8c8f-148">指定したモジュールの出力にイベントを送信します。</span><span class="sxs-lookup"><span data-stu-id="d8c8f-148">Sends an event to the given module output</span></span>
  syntax:
    content: 'function sendOutputEvent(outputName: string, message: Message, callback: Callback<MessageEnqueued>)'
    parameters:
    - id: outputName
      type:
      - string
      description: <span data-ttu-id="d8c8f-149">イベントを送信する出力の名前</span><span class="sxs-lookup"><span data-stu-id="d8c8f-149">Name of the output to send the event to</span></span>
    - id: message
      type:
      - Message
      description: <span data-ttu-id="d8c8f-150">指定した出力に送信するメッセージ</span><span class="sxs-lookup"><span data-stu-id="d8c8f-150">Message to send to the given output</span></span>
    - id: callback
      type:
      - Callback<MessageEnqueued>
      description: ''
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.sendOutputEventBatch_1
  name: sendOutputEventBatch(string, Message[])
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d8c8f-151">イベントの配列を指定したモジュール出力に送信します。</span><span class="sxs-lookup"><span data-stu-id="d8c8f-151">Sends an array of events to the given module output</span></span>
  syntax:
    content: 'function sendOutputEventBatch(outputName: string, messages: Message[])'
    parameters:
    - id: outputName
      type:
      - string
      description: ''
    - id: messages
      type:
      - Message[]
      description: ''
    return:
      type:
      - Promise<MessageEnqueued>
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.sendOutputEventBatch
  name: sendOutputEventBatch(string, Message[], Callback<MessageEnqueued>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d8c8f-152">イベントの配列を指定したモジュール出力に送信します。</span><span class="sxs-lookup"><span data-stu-id="d8c8f-152">Sends an array of events to the given module output</span></span>
  syntax:
    content: 'function sendOutputEventBatch(outputName: string, messages: Message[], callback: Callback<MessageEnqueued>)'
    parameters:
    - id: outputName
      type:
      - string
      description: <span data-ttu-id="d8c8f-153">イベントを送信する出力の名前</span><span class="sxs-lookup"><span data-stu-id="d8c8f-153">Name of the output to send the events to</span></span>
    - id: messages
      type:
      - Message[]
      description: ''
    - id: callback
      type:
      - Callback<MessageEnqueued>
      description: ''
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.setOptions_1
  name: setOptions(DeviceClientOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d8c8f-154">オプションを渡す、`ModuleClient`トランスポートを構成するために使用できるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d8c8f-154">Passes options to the `ModuleClient` object that can be used to configure the transport.</span></span>
  syntax:
    content: 'function setOptions(options: DeviceClientOptions)'
    parameters:
    - id: options
      type:
      - azure-iot-device.DeviceClientOptions
      description: ''
    return:
      type:
      - Promise<TransportConfigured>
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.setOptions
  name: setOptions(DeviceClientOptions, Callback<TransportConfigured>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d8c8f-155">オプションを渡す、`ModuleClient`トランスポートを構成するために使用できるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d8c8f-155">Passes options to the `ModuleClient` object that can be used to configure the transport.</span></span>
  syntax:
    content: 'function setOptions(options: DeviceClientOptions, done: Callback<TransportConfigured>)'
    parameters:
    - id: options
      type:
      - azure-iot-device.DeviceClientOptions
      description: <span data-ttu-id="d8c8f-156"><xref:DeviceClientOptions> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d8c8f-156">A <xref:DeviceClientOptions> object.</span></span>
    - id: done
      type:
      - Callback<TransportConfigured>
      description: ''
  package: azure-iot-device
references:
- uid: azure-iot-device.MethodParams
  name: MethodParams
  spec.typeScript:
  - name: MethodParams
    fullName: MethodParams
    uid: azure-iot-device.MethodParams
- uid: Callback<azure-iot-device.MethodResult>
  name: MethodResult>
  spec.typeScript:
  - name: Callback<
    fullName: Callback<
  - name: MethodResult
    fullName: MethodResult
    uid: azure-iot-device.MethodResult
  - name: '>'
    fullName: '>'
- uid: Promise<azure-iot-device.MethodResult>
  name: MethodResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: MethodResult
    fullName: MethodResult
    uid: azure-iot-device.MethodResult
  - name: '>'
    fullName: '>'
- uid: DoubleValueCallback<azure-iot-device.DeviceMethodRequest, azure-iot-device.DeviceMethodResponse>
  name: DeviceMethodResponse>
  spec.typeScript:
  - name: DoubleValueCallback<
    fullName: DoubleValueCallback<
  - name: DeviceMethodRequest
    fullName: DeviceMethodRequest
    uid: azure-iot-device.DeviceMethodRequest
  - name: ', '
    fullName: ', '
  - name: DeviceMethodResponse
    fullName: DeviceMethodResponse
    uid: azure-iot-device.DeviceMethodResponse
  - name: '>'
    fullName: '>'
- uid: azure-iot-device.DeviceClientOptions
  name: DeviceClientOptions
  spec.typeScript:
  - name: DeviceClientOptions
    fullName: DeviceClientOptions
    uid: azure-iot-device.DeviceClientOptions
- uid: azure-iot-device.ModuleClient
  name: ModuleClient
  spec.typeScript:
  - name: ModuleClient
    fullName: ModuleClient
    uid: azure-iot-device.ModuleClient
- uid: Callback<azure-iot-device.ModuleClient>
  name: ModuleClient>
  spec.typeScript:
  - name: Callback<
    fullName: Callback<
  - name: ModuleClient
    fullName: ModuleClient
    uid: azure-iot-device.ModuleClient
  - name: '>'
    fullName: '>'
- uid: Promise<azure-iot-device.ModuleClient>
  name: ModuleClient>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ModuleClient
    fullName: ModuleClient
    uid: azure-iot-device.ModuleClient
  - name: '>'
    fullName: '>'
