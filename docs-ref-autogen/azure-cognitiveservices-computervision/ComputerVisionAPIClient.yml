### YamlMime:UniversalReference
ms.openlocfilehash: 496552af79989c144ce96db561de8b0882be0c21
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 08/12/2018
ms.locfileid: "40068843"
items:
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient
  name: ComputerVisionAPIClient
  fullName: ComputerVisionAPIClient
  children:
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImage
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImage_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImage_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomain
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomain_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomain_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomainInStream
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomainInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomainInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomainInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomainWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageInStream
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.azureRegion
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.constructor
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.credentials
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImage_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImage
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImage_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImageInStream
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImageInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImageInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImageInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImageWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnail_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnail_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnail
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnailInStream
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnailInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnailInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnailInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnailWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.getTextOperationResult
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.getTextOperationResult_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.getTextOperationResult_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.getTextOperationResultWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.listModels
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.listModels_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.listModels_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.listModelsWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedText_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedText
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedText_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedTextInStream
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedTextInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedTextInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedTextInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedTextWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeText
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeText_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeText_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeTextInStream
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeTextInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeTextInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeTextInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeTextWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImage
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImage_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImage_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImageInStream
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImageInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImageInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImageInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImageWithHttpOperationResponse
  langs:
  - typeScript
  type: class
  summary: ''
  extends:
    name: ServiceClient
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImage
  name: analyzeImage
  children: []
  type: method
  langs:
  - typeScript
  summary: この操作は、イメージのコンテンツに基づいて視覚機能の豊富なセットを抽出します。 (1)、イメージをアップロードまたは (2)、画像の URL を指定する - 2 つの入力方式がサポートされます。  要求を返す機能を選択できるように、オプションのパラメーターがあります。  既定では、イメージのカテゴリは、応答で返されます。
  syntax:
    content: 'function analyzeImage(url: string, options?: function)'
    parameters:
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImage_2
  name: analyzeImage
  children: []
  type: method
  langs:
  - typeScript
  summary: この操作は、イメージのコンテンツに基づいて視覚機能の豊富なセットを抽出します。 (1)、イメージをアップロードまたは (2)、画像の URL を指定する - 2 つの入力方式がサポートされます。  要求を返す機能を選択できるように、オプションのパラメーターがあります。  既定では、イメージのカテゴリは、応答で返されます。
  syntax:
    content: 'function analyzeImage(url: string, options: function, callback: ServiceCallback<ImageAnalysis>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImage_1
  name: analyzeImage
  children: []
  type: method
  langs:
  - typeScript
  summary: この操作は、イメージのコンテンツに基づいて視覚機能の豊富なセットを抽出します。 (1)、イメージをアップロードまたは (2)、画像の URL を指定する - 2 つの入力方式がサポートされます。  要求を返す機能を選択できるように、オプションのパラメーターがあります。  既定では、イメージのカテゴリは、応答で返されます。
  syntax:
    content: 'function analyzeImage(url: string, callback: ServiceCallback<ImageAnalysis>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomain
  name: analyzeImageByDomain
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    この操作は、ドメイン固有モデルを適用することで、イメージ内のコンテンツを認識します。  Computer Vision API でサポートされているドメイン固有モデルの一覧は、/models の GET 要求を使用して取得できます。  現時点では、API は、1 つのドメイン固有モデルのみを提供します。 著名人。 (1)、イメージをアップロードまたは (2)、画像の URL を指定する - 2 つの入力方式がサポートされます。 成功応答は JSON で返されます。

    要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。
  syntax:
    content: 'function analyzeImageByDomain(model: string, url: string, options?: function)'
    parameters:
    - id: model
      type:
      - string
      description: >
        認識するドメイン固有のコンテンツ。 使用可能な値が含まれます: '著名人の'、'ランドマーク'
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomain_1
  name: analyzeImageByDomain
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    この操作は、ドメイン固有モデルを適用することで、イメージ内のコンテンツを認識します。  Computer Vision API でサポートされているドメイン固有モデルの一覧は、/models の GET 要求を使用して取得できます。  現時点では、API は、1 つのドメイン固有モデルのみを提供します。 著名人。 (1)、イメージをアップロードまたは (2)、画像の URL を指定する - 2 つの入力方式がサポートされます。 成功応答は JSON で返されます。

    要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。
  syntax:
    content: 'function analyzeImageByDomain(model: string, url: string, callback: ServiceCallback<DomainModelResults>)'
    parameters:
    - id: model
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomain_2
  name: analyzeImageByDomain
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    この操作は、ドメイン固有モデルを適用することで、イメージ内のコンテンツを認識します。  Computer Vision API でサポートされているドメイン固有モデルの一覧は、/models の GET 要求を使用して取得できます。  現時点では、API は、1 つのドメイン固有モデルのみを提供します。 著名人。 (1)、イメージをアップロードまたは (2)、画像の URL を指定する - 2 つの入力方式がサポートされます。 成功応答は JSON で返されます。

    要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。
  syntax:
    content: 'function analyzeImageByDomain(model: string, url: string, options: function, callback: ServiceCallback<DomainModelResults>)'
    parameters:
    - id: model
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomainInStream
  name: analyzeImageByDomainInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    この操作は、ドメイン固有モデルを適用することで、イメージ内のコンテンツを認識します。  Computer Vision API でサポートされているドメイン固有モデルの一覧は、/models の GET 要求を使用して取得できます。  現時点では、API は、1 つのドメイン固有モデルのみを提供します。 著名人。 (1)、イメージをアップロードまたは (2)、画像の URL を指定する - 2 つの入力方式がサポートされます。 成功応答は JSON で返されます。

    要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。
  syntax:
    content: 'function analyzeImageByDomainInStream(model: string, image: stream.Readable, options?: function)'
    parameters:
    - id: model
      type:
      - string
      description: >
        認識するドメイン固有のコンテンツ。
    - id: image
      type:
      - stream.Readable
      description: >
        イメージ ストリーム。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomainInStream_1
  name: analyzeImageByDomainInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    この操作は、ドメイン固有モデルを適用することで、イメージ内のコンテンツを認識します。  Computer Vision API でサポートされているドメイン固有モデルの一覧は、/models の GET 要求を使用して取得できます。  現時点では、API は、1 つのドメイン固有モデルのみを提供します。 著名人。 (1)、イメージをアップロードまたは (2)、画像の URL を指定する - 2 つの入力方式がサポートされます。 成功応答は JSON で返されます。

    要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。
  syntax:
    content: 'function analyzeImageByDomainInStream(model: string, image: stream.Readable, callback: ServiceCallback<DomainModelResults>)'
    parameters:
    - id: model
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomainInStream_2
  name: analyzeImageByDomainInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    この操作は、ドメイン固有モデルを適用することで、イメージ内のコンテンツを認識します。  Computer Vision API でサポートされているドメイン固有モデルの一覧は、/models の GET 要求を使用して取得できます。  現時点では、API は、1 つのドメイン固有モデルのみを提供します。 著名人。 (1)、イメージをアップロードまたは (2)、画像の URL を指定する - 2 つの入力方式がサポートされます。 成功応答は JSON で返されます。

    要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。
  syntax:
    content: 'function analyzeImageByDomainInStream(model: string, image: stream.Readable, options: function, callback: ServiceCallback<DomainModelResults>)'
    parameters:
    - id: model
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomainInStreamWithHttpOperationResponse
  name: analyzeImageByDomainInStreamWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    この操作は、ドメイン固有モデルを適用することで、イメージ内のコンテンツを認識します。  Computer Vision API でサポートされているドメイン固有モデルの一覧は、/models の GET 要求を使用して取得できます。  現時点では、API は、1 つのドメイン固有モデルのみを提供します。 著名人。 (1)、イメージをアップロードまたは (2)、画像の URL を指定する - 2 つの入力方式がサポートされます。 成功応答は JSON で返されます。

    要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。
  syntax:
    content: 'function analyzeImageByDomainInStreamWithHttpOperationResponse(model: string, image: stream.Readable, options?: function)'
    parameters:
    - id: model
      type:
      - string
      description: >
        認識するドメイン固有のコンテンツ。
    - id: image
      type:
      - stream.Readable
      description: >
        イメージ ストリーム。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.DomainModelResults>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomainWithHttpOperationResponse
  name: analyzeImageByDomainWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    この操作は、ドメイン固有モデルを適用することで、イメージ内のコンテンツを認識します。  Computer Vision API でサポートされているドメイン固有モデルの一覧は、/models の GET 要求を使用して取得できます。  現時点では、API は、1 つのドメイン固有モデルのみを提供します。 著名人。 (1)、イメージをアップロードまたは (2)、画像の URL を指定する - 2 つの入力方式がサポートされます。 成功応答は JSON で返されます。

    要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。
  syntax:
    content: 'function analyzeImageByDomainWithHttpOperationResponse(model: string, url: string, options?: function)'
    parameters:
    - id: model
      type:
      - string
      description: >
        認識するドメイン固有のコンテンツ。 使用可能な値が含まれます: '著名人の'、'ランドマーク'
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.DomainModelResults>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageInStream
  name: analyzeImageInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: この操作は、イメージのコンテンツに基づいて視覚機能の豊富なセットを抽出します。
  syntax:
    content: 'function analyzeImageInStream(image: stream.Readable, options?: function)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        イメージ ストリーム。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageInStream_1
  name: analyzeImageInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: この操作は、イメージのコンテンツに基づいて視覚機能の豊富なセットを抽出します。
  syntax:
    content: 'function analyzeImageInStream(image: stream.Readable, callback: ServiceCallback<ImageAnalysis>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageInStream_2
  name: analyzeImageInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: この操作は、イメージのコンテンツに基づいて視覚機能の豊富なセットを抽出します。
  syntax:
    content: 'function analyzeImageInStream(image: stream.Readable, options: function, callback: ServiceCallback<ImageAnalysis>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageInStreamWithHttpOperationResponse
  name: analyzeImageInStreamWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: この操作は、イメージのコンテンツに基づいて視覚機能の豊富なセットを抽出します。
  syntax:
    content: 'function analyzeImageInStreamWithHttpOperationResponse(image: stream.Readable, options?: function)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        イメージ ストリーム。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageAnalysis>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageWithHttpOperationResponse
  name: analyzeImageWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: この操作は、イメージのコンテンツに基づいて視覚機能の豊富なセットを抽出します。 (1)、イメージをアップロードまたは (2)、画像の URL を指定する - 2 つの入力方式がサポートされます。  要求を返す機能を選択できるように、オプションのパラメーターがあります。  既定では、イメージのカテゴリは、応答で返されます。
  syntax:
    content: 'function analyzeImageWithHttpOperationResponse(url: string, options?: function)'
    parameters:
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageAnalysis>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.azureRegion
  name: azureRegion
  fullName: azureRegion
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'azureRegion: string'
    return:
      type:
      - string
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.constructor
  name: ComputerVisionAPIClient
  children: []
  type: constructor
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'new ComputerVisionAPIClient(credentials: ServiceClientCredentials, azureRegion: string, options?: ServiceClientOptions)'
    parameters:
    - id: credentials
      type:
      - ServiceClientCredentials
      description: >
        サブスクリプションの資格情報をクライアント サブスクリプションを一意に識別します。
    - id: azureRegion
      type:
      - string
      description: >
        Cognitive Services エンドポイントでサポートされる Azure リージョン。 使用可能な値が含まれます: 'westus'、'westeurope' 'southeastasia'、'eastus2' 'westcentralus'、'westus2'、'eastus'、'southcentralus'、'northeurope'、'eastasia'、'australiaeast'、'brazilsouth'
    - id: options
      type:
      - ServiceClientOptions
      description: ''
      optional: true
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.credentials
  name: credentials
  fullName: credentials
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'credentials: ServiceClientCredentials'
    return:
      type:
      - ServiceClientCredentials
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImage_1
  name: describeImage
  children: []
  type: method
  langs:
  - typeScript
  summary: この操作では、完全な文で読み取り可能な言語で、イメージの説明が生成されます。  説明は、操作によって返されることも、コンテンツのタグのコレクションに基づいています。 各イメージの 1 つ以上の説明を生成できます。  説明は、その信頼度スコアで並べ替えられます。 すべての説明は英語にします。 (1)、イメージをアップロードまたは (2)、画像の URL を指定する - 2 つの入力方式がサポートされます。成功応答は JSON で返されます。  要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。
  syntax:
    content: 'function describeImage(url: string, callback: ServiceCallback<ImageDescription>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImage
  name: describeImage
  children: []
  type: method
  langs:
  - typeScript
  summary: この操作では、完全な文で読み取り可能な言語で、イメージの説明が生成されます。  説明は、操作によって返されることも、コンテンツのタグのコレクションに基づいています。 各イメージの 1 つ以上の説明を生成できます。  説明は、その信頼度スコアで並べ替えられます。 すべての説明は英語にします。 (1)、イメージをアップロードまたは (2)、画像の URL を指定する - 2 つの入力方式がサポートされます。成功応答は JSON で返されます。  要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。
  syntax:
    content: 'function describeImage(url: string, options?: function)'
    parameters:
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImage_2
  name: describeImage
  children: []
  type: method
  langs:
  - typeScript
  summary: この操作では、完全な文で読み取り可能な言語で、イメージの説明が生成されます。  説明は、操作によって返されることも、コンテンツのタグのコレクションに基づいています。 各イメージの 1 つ以上の説明を生成できます。  説明は、その信頼度スコアで並べ替えられます。 すべての説明は英語にします。 (1)、イメージをアップロードまたは (2)、画像の URL を指定する - 2 つの入力方式がサポートされます。成功応答は JSON で返されます。  要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。
  syntax:
    content: 'function describeImage(url: string, options: function, callback: ServiceCallback<ImageDescription>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImageInStream
  name: describeImageInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: この操作では、完全な文で読み取り可能な言語で、イメージの説明が生成されます。  説明は、操作によって返されることも、コンテンツのタグのコレクションに基づいています。 各イメージの 1 つ以上の説明を生成できます。  説明は、その信頼度スコアで並べ替えられます。 すべての説明は英語にします。 (1)、イメージをアップロードまたは (2)、画像の URL を指定する - 2 つの入力方式がサポートされます。成功応答は JSON で返されます。  要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。
  syntax:
    content: 'function describeImageInStream(image: stream.Readable, options?: function)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        イメージ ストリーム。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImageInStream_1
  name: describeImageInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: この操作では、完全な文で読み取り可能な言語で、イメージの説明が生成されます。  説明は、操作によって返されることも、コンテンツのタグのコレクションに基づいています。 各イメージの 1 つ以上の説明を生成できます。  説明は、その信頼度スコアで並べ替えられます。 すべての説明は英語にします。 (1)、イメージをアップロードまたは (2)、画像の URL を指定する - 2 つの入力方式がサポートされます。成功応答は JSON で返されます。  要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。
  syntax:
    content: 'function describeImageInStream(image: stream.Readable, callback: ServiceCallback<ImageDescription>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImageInStream_2
  name: describeImageInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: この操作では、完全な文で読み取り可能な言語で、イメージの説明が生成されます。  説明は、操作によって返されることも、コンテンツのタグのコレクションに基づいています。 各イメージの 1 つ以上の説明を生成できます。  説明は、その信頼度スコアで並べ替えられます。 すべての説明は英語にします。 (1)、イメージをアップロードまたは (2)、画像の URL を指定する - 2 つの入力方式がサポートされます。成功応答は JSON で返されます。  要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。
  syntax:
    content: 'function describeImageInStream(image: stream.Readable, options: function, callback: ServiceCallback<ImageDescription>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImageInStreamWithHttpOperationResponse
  name: describeImageInStreamWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: この操作では、完全な文で読み取り可能な言語で、イメージの説明が生成されます。  説明は、操作によって返されることも、コンテンツのタグのコレクションに基づいています。 各イメージの 1 つ以上の説明を生成できます。  説明は、その信頼度スコアで並べ替えられます。 すべての説明は英語にします。 (1)、イメージをアップロードまたは (2)、画像の URL を指定する - 2 つの入力方式がサポートされます。成功応答は JSON で返されます。  要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。
  syntax:
    content: 'function describeImageInStreamWithHttpOperationResponse(image: stream.Readable, options?: function)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        イメージ ストリーム。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageDescription>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImageWithHttpOperationResponse
  name: describeImageWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: この操作では、完全な文で読み取り可能な言語で、イメージの説明が生成されます。  説明は、操作によって返されることも、コンテンツのタグのコレクションに基づいています。 各イメージの 1 つ以上の説明を生成できます。  説明は、その信頼度スコアで並べ替えられます。 すべての説明は英語にします。 (1)、イメージをアップロードまたは (2)、画像の URL を指定する - 2 つの入力方式がサポートされます。成功応答は JSON で返されます。  要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。
  syntax:
    content: 'function describeImageWithHttpOperationResponse(url: string, options?: function)'
    parameters:
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageDescription>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnail_1
  name: generateThumbnail
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    この操作は、ユーザーが指定した幅と高さでサムネイル画像を生成します。 既定では、サービスは、イメージを分析し、目的 (ROI) の領域を識別、ROI に基づく、スマート トリミング座標が生成されます。

    スマート トリミングとは異なる入力画像の縦横比を指定する場合に役立ちます。 正常な応答には、サムネイル画像バイナリにはが含まれています。 要求が失敗した場合、応答には、エラー コードと問題点を確認するためのメッセージが含まれます。
  syntax:
    content: 'function generateThumbnail(width: number, height: number, url: string, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: width
      type:
      - number
      description: ''
    - id: height
      type:
      - number
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnail_2
  name: generateThumbnail
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    この操作は、ユーザーが指定した幅と高さでサムネイル画像を生成します。 既定では、サービスは、イメージを分析し、目的 (ROI) の領域を識別、ROI に基づく、スマート トリミング座標が生成されます。

    スマート トリミングとは異なる入力画像の縦横比を指定する場合に役立ちます。 正常な応答には、サムネイル画像バイナリにはが含まれています。 要求が失敗した場合、応答には、エラー コードと問題点を確認するためのメッセージが含まれます。
  syntax:
    content: 'function generateThumbnail(width: number, height: number, url: string, options: function, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: width
      type:
      - number
      description: ''
    - id: height
      type:
      - number
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnail
  name: generateThumbnail
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    この操作は、ユーザーが指定した幅と高さでサムネイル画像を生成します。 既定では、サービスは、イメージを分析し、目的 (ROI) の領域を識別、ROI に基づく、スマート トリミング座標が生成されます。

    スマート トリミングとは異なる入力画像の縦横比を指定する場合に役立ちます。 正常な応答には、サムネイル画像バイナリにはが含まれています。 要求が失敗した場合、応答には、エラー コードと問題点を確認するためのメッセージが含まれます。
  syntax:
    content: 'function generateThumbnail(width: number, height: number, url: string, options?: function)'
    parameters:
    - id: width
      type:
      - number
      description: >
        サムネイルの幅。 1 ~ 1024 のことがあります。

        50 の推奨される最小値。
    - id: height
      type:
      - number
      description: >
        サムネイルの高さ。 1 の間である必要がありますが、

        1024. 50 の推奨される最小値。
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnailInStream
  name: generateThumbnailInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    この操作は、ユーザーが指定した幅と高さでサムネイル画像を生成します。 既定では、サービスは、イメージを分析し、目的 (ROI) の領域を識別、ROI に基づく、スマート トリミング座標が生成されます。

    スマート トリミングとは異なる入力画像の縦横比を指定する場合に役立ちます。 正常な応答には、サムネイル画像バイナリにはが含まれています。 要求が失敗した場合、応答には、エラー コードと問題点を確認するためのメッセージが含まれます。
  syntax:
    content: 'function generateThumbnailInStream(width: number, height: number, image: stream.Readable, options?: function)'
    parameters:
    - id: width
      type:
      - number
      description: >
        サムネイルの幅。 1 ~ 1024 のことがあります。

        50 の推奨される最小値。
    - id: height
      type:
      - number
      description: >
        サムネイルの高さ。 1 の間である必要がありますが、

        1024. 50 の推奨される最小値。
    - id: image
      type:
      - stream.Readable
      description: >
        イメージ ストリーム。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnailInStream_1
  name: generateThumbnailInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    この操作は、ユーザーが指定した幅と高さでサムネイル画像を生成します。 既定では、サービスは、イメージを分析し、目的 (ROI) の領域を識別、ROI に基づく、スマート トリミング座標が生成されます。

    スマート トリミングとは異なる入力画像の縦横比を指定する場合に役立ちます。 正常な応答には、サムネイル画像バイナリにはが含まれています。 要求が失敗した場合、応答には、エラー コードと問題点を確認するためのメッセージが含まれます。
  syntax:
    content: 'function generateThumbnailInStream(width: number, height: number, image: stream.Readable, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: width
      type:
      - number
      description: ''
    - id: height
      type:
      - number
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnailInStream_2
  name: generateThumbnailInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    この操作は、ユーザーが指定した幅と高さでサムネイル画像を生成します。 既定では、サービスは、イメージを分析し、目的 (ROI) の領域を識別、ROI に基づく、スマート トリミング座標が生成されます。

    スマート トリミングとは異なる入力画像の縦横比を指定する場合に役立ちます。 正常な応答には、サムネイル画像バイナリにはが含まれています。 要求が失敗した場合、応答には、エラー コードと問題点を確認するためのメッセージが含まれます。
  syntax:
    content: 'function generateThumbnailInStream(width: number, height: number, image: stream.Readable, options: function, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: width
      type:
      - number
      description: ''
    - id: height
      type:
      - number
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnailInStreamWithHttpOperationResponse
  name: generateThumbnailInStreamWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    この操作は、ユーザーが指定した幅と高さでサムネイル画像を生成します。 既定では、サービスは、イメージを分析し、目的 (ROI) の領域を識別、ROI に基づく、スマート トリミング座標が生成されます。

    スマート トリミングとは異なる入力画像の縦横比を指定する場合に役立ちます。 正常な応答には、サムネイル画像バイナリにはが含まれています。 要求が失敗した場合、応答には、エラー コードと問題点を確認するためのメッセージが含まれます。
  syntax:
    content: 'function generateThumbnailInStreamWithHttpOperationResponse(width: number, height: number, image: stream.Readable, options?: function)'
    parameters:
    - id: width
      type:
      - number
      description: >
        サムネイルの幅。 1 ~ 1024 のことがあります。

        50 の推奨される最小値。
    - id: height
      type:
      - number
      description: >
        サムネイルの高さ。 1 の間である必要がありますが、

        1024. 50 の推奨される最小値。
    - id: image
      type:
      - stream.Readable
      description: >
        イメージ ストリーム。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<stream.Readable>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnailWithHttpOperationResponse
  name: generateThumbnailWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    この操作は、ユーザーが指定した幅と高さでサムネイル画像を生成します。 既定では、サービスは、イメージを分析し、目的 (ROI) の領域を識別、ROI に基づく、スマート トリミング座標が生成されます。

    スマート トリミングとは異なる入力画像の縦横比を指定する場合に役立ちます。 正常な応答には、サムネイル画像バイナリにはが含まれています。 要求が失敗した場合、応答には、エラー コードと問題点を確認するためのメッセージが含まれます。
  syntax:
    content: 'function generateThumbnailWithHttpOperationResponse(width: number, height: number, url: string, options?: function)'
    parameters:
    - id: width
      type:
      - number
      description: >
        サムネイルの幅。 1 ~ 1024 のことがあります。

        50 の推奨される最小値。
    - id: height
      type:
      - number
      description: >
        サムネイルの高さ。 1 の間である必要がありますが、

        1024. 50 の推奨される最小値。
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<stream.Readable>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.getTextOperationResult
  name: getTextOperationResult
  children: []
  type: method
  langs:
  - typeScript
  summary: このインターフェイスは、テキスト操作の結果を取得するために使用されます。 このインターフェイスへの URL は、テキスト認識インターフェイスから返された ' 操作の場所 フィールドから取得する必要があります。
  syntax:
    content: 'function getTextOperationResult(operationId: string, options?: function)'
    parameters:
    - id: operationId
      type:
      - string
      description: "'手書きテキスト認識' の応答で返されるテキスト操作の id\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TextOperationResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.getTextOperationResult_2
  name: getTextOperationResult
  children: []
  type: method
  langs:
  - typeScript
  summary: このインターフェイスは、テキスト操作の結果を取得するために使用されます。 このインターフェイスへの URL は、テキスト認識インターフェイスから返された ' 操作の場所 フィールドから取得する必要があります。
  syntax:
    content: 'function getTextOperationResult(operationId: string, options: function, callback: ServiceCallback<TextOperationResult>)'
    parameters:
    - id: operationId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TextOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TextOperationResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.getTextOperationResult_1
  name: getTextOperationResult
  children: []
  type: method
  langs:
  - typeScript
  summary: このインターフェイスは、テキスト操作の結果を取得するために使用されます。 このインターフェイスへの URL は、テキスト認識インターフェイスから返された ' 操作の場所 フィールドから取得する必要があります。
  syntax:
    content: 'function getTextOperationResult(operationId: string, callback: ServiceCallback<TextOperationResult>)'
    parameters:
    - id: operationId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TextOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TextOperationResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.getTextOperationResultWithHttpOperationResponse
  name: getTextOperationResultWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: このインターフェイスは、テキスト操作の結果を取得するために使用されます。 このインターフェイスへの URL は、テキスト認識インターフェイスから返された ' 操作の場所 フィールドから取得する必要があります。
  syntax:
    content: 'function getTextOperationResultWithHttpOperationResponse(operationId: string, options?: function)'
    parameters:
    - id: operationId
      type:
      - string
      description: "'手書きテキスト認識' の応答で返されるテキスト操作の id\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TextOperationResult>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.listModels
  name: listModels
  children: []
  type: method
  langs:
  - typeScript
  summary: 'この操作は、Computer Vision API でサポートされているドメイン固有モデルの一覧を返します。  現時点では、API は、1 つのドメイン固有モデルのみをサポート: 著名人認識します。 成功応答は JSON で返されます。  要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。'
  syntax:
    content: 'function listModels(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ListModelsResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.listModels_2
  name: listModels
  children: []
  type: method
  langs:
  - typeScript
  summary: 'この操作は、Computer Vision API でサポートされているドメイン固有モデルの一覧を返します。  現時点では、API は、1 つのドメイン固有モデルのみをサポート: 著名人認識します。 成功応答は JSON で返されます。  要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。'
  syntax:
    content: 'function listModels(options: function, callback: ServiceCallback<ListModelsResult>)'
    parameters:
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ListModelsResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ListModelsResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.listModels_1
  name: listModels
  children: []
  type: method
  langs:
  - typeScript
  summary: 'この操作は、Computer Vision API でサポートされているドメイン固有モデルの一覧を返します。  現時点では、API は、1 つのドメイン固有モデルのみをサポート: 著名人認識します。 成功応答は JSON で返されます。  要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。'
  syntax:
    content: 'function listModels(callback: ServiceCallback<ListModelsResult>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ListModelsResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ListModelsResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.listModelsWithHttpOperationResponse
  name: listModelsWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: 'この操作は、Computer Vision API でサポートされているドメイン固有モデルの一覧を返します。  現時点では、API は、1 つのドメイン固有モデルのみをサポート: 著名人認識します。 成功応答は JSON で返されます。  要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。'
  syntax:
    content: 'function listModelsWithHttpOperationResponse(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ListModelsResult>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedText_1
  name: recognizePrintedText
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    光学式文字認識 (OCR) では、画像の印刷したテキストを検出し、マシンの使用可能な文字ストリームに認識されている文字を抽出します。

    成功すると、OCR 結果が返されます。 失敗した場合、エラー メッセージと共にエラー コードが返されます。 エラー コードは、InvalidImageUrl、InvalidImageFormat、InvalidImageSize、NotSupportedImage、NotSupportedLanguage、または InternalServerError のいずれかを指定できます。
  syntax:
    content: 'function recognizePrintedText(detectOrientation: boolean, url: string, callback: ServiceCallback<OcrResult>)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedText
  name: recognizePrintedText
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    光学式文字認識 (OCR) では、画像の印刷したテキストを検出し、マシンの使用可能な文字ストリームに認識されている文字を抽出します。

    成功すると、OCR 結果が返されます。 失敗した場合、エラー メッセージと共にエラー コードが返されます。 エラー コードは、InvalidImageUrl、InvalidImageFormat、InvalidImageSize、NotSupportedImage、NotSupportedLanguage、または InternalServerError のいずれかを指定できます。
  syntax:
    content: 'function recognizePrintedText(detectOrientation: boolean, url: string, options?: function)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: >
        かどうか、イメージのテキストの向きを検出します。 DetectOrientation = true、OCR サービスとイメージの向きを検出し、さらに処理する前に修正します (例: が上下にある場合)。
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedText_2
  name: recognizePrintedText
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    光学式文字認識 (OCR) では、画像の印刷したテキストを検出し、マシンの使用可能な文字ストリームに認識されている文字を抽出します。

    成功すると、OCR 結果が返されます。 失敗した場合、エラー メッセージと共にエラー コードが返されます。 エラー コードは、InvalidImageUrl、InvalidImageFormat、InvalidImageSize、NotSupportedImage、NotSupportedLanguage、または InternalServerError のいずれかを指定できます。
  syntax:
    content: 'function recognizePrintedText(detectOrientation: boolean, url: string, options: function, callback: ServiceCallback<OcrResult>)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedTextInStream
  name: recognizePrintedTextInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    光学式文字認識 (OCR) では、画像の印刷したテキストを検出し、マシンの使用可能な文字ストリームに認識されている文字を抽出します。

    成功すると、OCR 結果が返されます。 失敗した場合、エラー メッセージと共にエラー コードが返されます。 エラー コードは、InvalidImageUrl、InvalidImageFormat、InvalidImageSize、NotSupportedImage、NotSupportedLanguage、または InternalServerError のいずれかを指定できます。
  syntax:
    content: 'function recognizePrintedTextInStream(detectOrientation: boolean, image: stream.Readable, options?: function)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: >
        かどうか、イメージのテキストの向きを検出します。 DetectOrientation = true、OCR サービスとイメージの向きを検出し、さらに処理する前に修正します (例: が上下にある場合)。
    - id: image
      type:
      - stream.Readable
      description: >
        イメージ ストリーム。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedTextInStream_1
  name: recognizePrintedTextInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    光学式文字認識 (OCR) では、画像の印刷したテキストを検出し、マシンの使用可能な文字ストリームに認識されている文字を抽出します。

    成功すると、OCR 結果が返されます。 失敗した場合、エラー メッセージと共にエラー コードが返されます。 エラー コードは、InvalidImageUrl、InvalidImageFormat、InvalidImageSize、NotSupportedImage、NotSupportedLanguage、または InternalServerError のいずれかを指定できます。
  syntax:
    content: 'function recognizePrintedTextInStream(detectOrientation: boolean, image: stream.Readable, callback: ServiceCallback<OcrResult>)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedTextInStream_2
  name: recognizePrintedTextInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    光学式文字認識 (OCR) では、画像の印刷したテキストを検出し、マシンの使用可能な文字ストリームに認識されている文字を抽出します。

    成功すると、OCR 結果が返されます。 失敗した場合、エラー メッセージと共にエラー コードが返されます。 エラー コードは、InvalidImageUrl、InvalidImageFormat、InvalidImageSize、NotSupportedImage、NotSupportedLanguage、または InternalServerError のいずれかを指定できます。
  syntax:
    content: 'function recognizePrintedTextInStream(detectOrientation: boolean, image: stream.Readable, options: function, callback: ServiceCallback<OcrResult>)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedTextInStreamWithHttpOperationResponse
  name: recognizePrintedTextInStreamWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    光学式文字認識 (OCR) では、画像の印刷したテキストを検出し、マシンの使用可能な文字ストリームに認識されている文字を抽出します。

    成功すると、OCR 結果が返されます。 失敗した場合、エラー メッセージと共にエラー コードが返されます。 エラー コードは、InvalidImageUrl、InvalidImageFormat、InvalidImageSize、NotSupportedImage、NotSupportedLanguage、または InternalServerError のいずれかを指定できます。
  syntax:
    content: 'function recognizePrintedTextInStreamWithHttpOperationResponse(detectOrientation: boolean, image: stream.Readable, options?: function)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: >
        かどうか、イメージのテキストの向きを検出します。 DetectOrientation = true、OCR サービスとイメージの向きを検出し、さらに処理する前に修正します (例: が上下にある場合)。
    - id: image
      type:
      - stream.Readable
      description: >
        イメージ ストリーム。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.OcrResult>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedTextWithHttpOperationResponse
  name: recognizePrintedTextWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    光学式文字認識 (OCR) では、画像の印刷したテキストを検出し、マシンの使用可能な文字ストリームに認識されている文字を抽出します。

    成功すると、OCR 結果が返されます。 失敗した場合、エラー メッセージと共にエラー コードが返されます。 エラー コードは、InvalidImageUrl、InvalidImageFormat、InvalidImageSize、NotSupportedImage、NotSupportedLanguage、または InternalServerError のいずれかを指定できます。
  syntax:
    content: 'function recognizePrintedTextWithHttpOperationResponse(detectOrientation: boolean, url: string, options?: function)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: >
        かどうか、イメージのテキストの向きを検出します。 DetectOrientation = true、OCR サービスとイメージの向きを検出し、さらに処理する前に修正します (例: が上下にある場合)。
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.OcrResult>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeText
  name: recognizeText
  children: []
  type: method
  langs:
  - typeScript
  summary: テキストの操作を認識します。 テキスト認識インターフェイスを使用すると、応答には、"操作-Location"という名前のフィールドが含まれます。 「操作の場所」フィールドには、手書きテキスト操作結果の取得操作を行う際に使用する URL が含まれています。
  syntax:
    content: 'function recognizeText(url: string, options?: function)'
    parameters:
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeText_2
  name: recognizeText
  children: []
  type: method
  langs:
  - typeScript
  summary: テキストの操作を認識します。 テキスト認識インターフェイスを使用すると、応答には、"操作-Location"という名前のフィールドが含まれます。 「操作の場所」フィールドには、手書きテキスト操作結果の取得操作を行う際に使用する URL が含まれています。
  syntax:
    content: 'function recognizeText(url: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeText_1
  name: recognizeText
  children: []
  type: method
  langs:
  - typeScript
  summary: テキストの操作を認識します。 テキスト認識インターフェイスを使用すると、応答には、"操作-Location"という名前のフィールドが含まれます。 「操作の場所」フィールドには、手書きテキスト操作結果の取得操作を行う際に使用する URL が含まれています。
  syntax:
    content: 'function recognizeText(url: string, callback: ServiceCallback<void>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeTextInStream
  name: recognizeTextInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: テキストの操作を認識します。 テキスト認識インターフェイスを使用すると、応答には、"操作-Location"という名前のフィールドが含まれます。 「操作の場所」フィールドには、手書きテキスト操作結果の取得操作を行う際に使用する URL が含まれています。
  syntax:
    content: 'function recognizeTextInStream(image: stream.Readable, options?: function)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        イメージ ストリーム。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeTextInStream_1
  name: recognizeTextInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: テキストの操作を認識します。 テキスト認識インターフェイスを使用すると、応答には、"操作-Location"という名前のフィールドが含まれます。 「操作の場所」フィールドには、手書きテキスト操作結果の取得操作を行う際に使用する URL が含まれています。
  syntax:
    content: 'function recognizeTextInStream(image: stream.Readable, callback: ServiceCallback<void>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeTextInStream_2
  name: recognizeTextInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: テキストの操作を認識します。 テキスト認識インターフェイスを使用すると、応答には、"操作-Location"という名前のフィールドが含まれます。 「操作の場所」フィールドには、手書きテキスト操作結果の取得操作を行う際に使用する URL が含まれています。
  syntax:
    content: 'function recognizeTextInStream(image: stream.Readable, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeTextInStreamWithHttpOperationResponse
  name: recognizeTextInStreamWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: テキストの操作を認識します。 テキスト認識インターフェイスを使用すると、応答には、"操作-Location"という名前のフィールドが含まれます。 「操作の場所」フィールドには、手書きテキスト操作結果の取得操作を行う際に使用する URL が含まれています。
  syntax:
    content: 'function recognizeTextInStreamWithHttpOperationResponse(image: stream.Readable, options?: function)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        イメージ ストリーム。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeTextWithHttpOperationResponse
  name: recognizeTextWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: テキストの操作を認識します。 テキスト認識インターフェイスを使用すると、応答には、"操作-Location"という名前のフィールドが含まれます。 「操作の場所」フィールドには、手書きテキスト操作結果の取得操作を行う際に使用する URL が含まれています。
  syntax:
    content: 'function recognizeTextWithHttpOperationResponse(url: string, options?: function)'
    parameters:
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImage
  name: tagImage
  children: []
  type: method
  langs:
  - typeScript
  summary: この操作は、単語、または、指定されたイメージのコンテンツに関連するタグのリストを生成します。 Computer Vision API は、ャェォェォェや風景画像内にある操作で動作しているオブジェクトをタグ ベース返すことができます。 カテゴリとは異なりタグは、階層的な分類システムに従ってしない構成されていますが、イメージのコンテンツに対応しています。 タグは、あいまいさを避けるか、コンテキストを提供するヒントを含めることができます、たとえばヒント「楽器」によって"cello"タグを伴うことがあります。 すべてのタグは英語にします。
  syntax:
    content: 'function tagImage(url: string, options?: function)'
    parameters:
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImage_1
  name: tagImage
  children: []
  type: method
  langs:
  - typeScript
  summary: この操作は、単語、または、指定されたイメージのコンテンツに関連するタグのリストを生成します。 Computer Vision API は、ャェォェォェや風景画像内にある操作で動作しているオブジェクトをタグ ベース返すことができます。 カテゴリとは異なりタグは、階層的な分類システムに従ってしない構成されていますが、イメージのコンテンツに対応しています。 タグは、あいまいさを避けるか、コンテキストを提供するヒントを含めることができます、たとえばヒント「楽器」によって"cello"タグを伴うことがあります。 すべてのタグは英語にします。
  syntax:
    content: 'function tagImage(url: string, callback: ServiceCallback<TagResult>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TagResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImage_2
  name: tagImage
  children: []
  type: method
  langs:
  - typeScript
  summary: この操作は、単語、または、指定されたイメージのコンテンツに関連するタグのリストを生成します。 Computer Vision API は、ャェォェォェや風景画像内にある操作で動作しているオブジェクトをタグ ベース返すことができます。 カテゴリとは異なりタグは、階層的な分類システムに従ってしない構成されていますが、イメージのコンテンツに対応しています。 タグは、あいまいさを避けるか、コンテキストを提供するヒントを含めることができます、たとえばヒント「楽器」によって"cello"タグを伴うことがあります。 すべてのタグは英語にします。
  syntax:
    content: 'function tagImage(url: string, options: function, callback: ServiceCallback<TagResult>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TagResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImageInStream
  name: tagImageInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: この操作は、単語、または、指定されたイメージのコンテンツに関連するタグのリストを生成します。 Computer Vision API は、ャェォェォェや風景画像内にある操作で動作しているオブジェクトをタグ ベース返すことができます。 カテゴリとは異なりタグは、階層的な分類システムに従ってしない構成されていますが、イメージのコンテンツに対応しています。 タグは、あいまいさを避けるか、コンテキストを提供するヒントを含めることができます、たとえばヒント「楽器」によって"cello"タグを伴うことがあります。 すべてのタグは英語にします。
  syntax:
    content: 'function tagImageInStream(image: stream.Readable, options?: function)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        イメージ ストリーム。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImageInStream_1
  name: tagImageInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: この操作は、単語、または、指定されたイメージのコンテンツに関連するタグのリストを生成します。 Computer Vision API は、ャェォェォェや風景画像内にある操作で動作しているオブジェクトをタグ ベース返すことができます。 カテゴリとは異なりタグは、階層的な分類システムに従ってしない構成されていますが、イメージのコンテンツに対応しています。 タグは、あいまいさを避けるか、コンテキストを提供するヒントを含めることができます、たとえばヒント「楽器」によって"cello"タグを伴うことがあります。 すべてのタグは英語にします。
  syntax:
    content: 'function tagImageInStream(image: stream.Readable, callback: ServiceCallback<TagResult>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TagResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImageInStream_2
  name: tagImageInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: この操作は、単語、または、指定されたイメージのコンテンツに関連するタグのリストを生成します。 Computer Vision API は、ャェォェォェや風景画像内にある操作で動作しているオブジェクトをタグ ベース返すことができます。 カテゴリとは異なりタグは、階層的な分類システムに従ってしない構成されていますが、イメージのコンテンツに対応しています。 タグは、あいまいさを避けるか、コンテキストを提供するヒントを含めることができます、たとえばヒント「楽器」によって"cello"タグを伴うことがあります。 すべてのタグは英語にします。
  syntax:
    content: 'function tagImageInStream(image: stream.Readable, options: function, callback: ServiceCallback<TagResult>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TagResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImageInStreamWithHttpOperationResponse
  name: tagImageInStreamWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: この操作は、単語、または、指定されたイメージのコンテンツに関連するタグのリストを生成します。 Computer Vision API は、ャェォェォェや風景画像内にある操作で動作しているオブジェクトをタグ ベース返すことができます。 カテゴリとは異なりタグは、階層的な分類システムに従ってしない構成されていますが、イメージのコンテンツに対応しています。 タグは、あいまいさを避けるか、コンテキストを提供するヒントを含めることができます、たとえばヒント「楽器」によって"cello"タグを伴うことがあります。 すべてのタグは英語にします。
  syntax:
    content: 'function tagImageInStreamWithHttpOperationResponse(image: stream.Readable, options?: function)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        イメージ ストリーム。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TagResult>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImageWithHttpOperationResponse
  name: tagImageWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: この操作は、単語、または、指定されたイメージのコンテンツに関連するタグのリストを生成します。 Computer Vision API は、ャェォェォェや風景画像内にある操作で動作しているオブジェクトをタグ ベース返すことができます。 カテゴリとは異なりタグは、階層的な分類システムに従ってしない構成されていますが、イメージのコンテンツに対応しています。 タグは、あいまいさを避けるか、コンテキストを提供するヒントを含めることができます、たとえばヒント「楽器」によって"cello"タグを伴うことがあります。 すべてのタグは英語にします。
  syntax:
    content: 'function tagImageWithHttpOperationResponse(url: string, options?: function)'
    parameters:
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TagResult>>
  package: azure-cognitiveservices-computervision
references:
- uid: Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ImageAnalysis
    fullName: ImageAnalysis
    uid: azure-cognitiveservices-computervision.ImageAnalysis
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ImageAnalysis
    fullName: ImageAnalysis
    uid: azure-cognitiveservices-computervision.ImageAnalysis
  - name: '>'
    fullName: '>'
- uid: Promise<azure-cognitiveservices-computervision.DomainModelResults>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: DomainModelResults
    fullName: DomainModelResults
    uid: azure-cognitiveservices-computervision.DomainModelResults
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: DomainModelResults
    fullName: DomainModelResults
    uid: azure-cognitiveservices-computervision.DomainModelResults
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.DomainModelResults>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: DomainModelResults
    fullName: DomainModelResults
    uid: azure-cognitiveservices-computervision.DomainModelResults
  - name: '>>'
    fullName: '>>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageAnalysis>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ImageAnalysis
    fullName: ImageAnalysis
    uid: azure-cognitiveservices-computervision.ImageAnalysis
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-computervision.ImageDescription>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ImageDescription
    fullName: ImageDescription
    uid: azure-cognitiveservices-computervision.ImageDescription
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ImageDescription
    fullName: ImageDescription
    uid: azure-cognitiveservices-computervision.ImageDescription
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageDescription>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ImageDescription
    fullName: ImageDescription
    uid: azure-cognitiveservices-computervision.ImageDescription
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-computervision.TextOperationResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: TextOperationResult
    fullName: TextOperationResult
    uid: azure-cognitiveservices-computervision.TextOperationResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.TextOperationResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: TextOperationResult
    fullName: TextOperationResult
    uid: azure-cognitiveservices-computervision.TextOperationResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TextOperationResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: TextOperationResult
    fullName: TextOperationResult
    uid: azure-cognitiveservices-computervision.TextOperationResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-computervision.ListModelsResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ListModelsResult
    fullName: ListModelsResult
    uid: azure-cognitiveservices-computervision.ListModelsResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.ListModelsResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ListModelsResult
    fullName: ListModelsResult
    uid: azure-cognitiveservices-computervision.ListModelsResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ListModelsResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ListModelsResult
    fullName: ListModelsResult
    uid: azure-cognitiveservices-computervision.ListModelsResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-computervision.OcrResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: OcrResult
    fullName: OcrResult
    uid: azure-cognitiveservices-computervision.OcrResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: OcrResult
    fullName: OcrResult
    uid: azure-cognitiveservices-computervision.OcrResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.OcrResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: OcrResult
    fullName: OcrResult
    uid: azure-cognitiveservices-computervision.OcrResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-computervision.TagResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: TagResult
    fullName: TagResult
    uid: azure-cognitiveservices-computervision.TagResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.TagResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: TagResult
    fullName: TagResult
    uid: azure-cognitiveservices-computervision.TagResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TagResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: TagResult
    fullName: TagResult
    uid: azure-cognitiveservices-computervision.TagResult
  - name: '>>'
    fullName: '>>'
