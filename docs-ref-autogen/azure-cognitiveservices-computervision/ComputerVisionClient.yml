### YamlMime:UniversalReference
items:
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient
    name: ComputerVisionClient
    fullName: ComputerVisionClient
    children:
      - azure-cognitiveservices-computervision.ComputerVisionClient.addUserAgentInfo
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImage
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImage_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImage_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStreamWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStreamWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFile
      - azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFile_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFile_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFileInStream
      - azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFileInStream_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFileInStream_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFileInStreamWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFileWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.constructor
      - azure-cognitiveservices-computervision.ComputerVisionClient.credentials
      - azure-cognitiveservices-computervision.ComputerVisionClient.describeImage
      - azure-cognitiveservices-computervision.ComputerVisionClient.describeImage_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.describeImage_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStream
      - azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStream_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStream_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStreamWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.describeImageWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.detectObjects
      - azure-cognitiveservices-computervision.ComputerVisionClient.detectObjects_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.detectObjects_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.detectObjectsInStream
      - azure-cognitiveservices-computervision.ComputerVisionClient.detectObjectsInStream_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.detectObjectsInStream_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.detectObjectsInStreamWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.detectObjectsWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.endpoint
      - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnail
      - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnail_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnail_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream
      - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStreamWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterest
      - azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterest_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterest_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestInStream
      - azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestInStream_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestInStream_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestInStreamWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.getPackageJsonInfo
      - azure-cognitiveservices-computervision.ComputerVisionClient.getReadOperationResult
      - azure-cognitiveservices-computervision.ComputerVisionClient.getReadOperationResult_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.getReadOperationResult_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.getReadOperationResultWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult
      - azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResultWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.listModels
      - azure-cognitiveservices-computervision.ComputerVisionClient.listModels_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.listModels_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.listModelsWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStreamWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeText
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeText_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeText_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStreamWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.sendRequest_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.sendRequest
      - azure-cognitiveservices-computervision.ComputerVisionClient.sendRequestWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.tagImage
      - azure-cognitiveservices-computervision.ComputerVisionClient.tagImage_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.tagImage_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStream
      - azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStream_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStream_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStreamWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.tagImageWithHttpOperationResponse
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: ServiceClient
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.addUserAgentInfo
    name: addUserAgentInfo(any)
    children: []
    type: method
    langs:
      - typeScript
    summary: ユーザー エージェント ヘッダーをカスタム情報を追加します。
    syntax:
      content: 'function addUserAgentInfo(additionalUserAgentInfo: any)'
      parameters:
        - id: additionalUserAgentInfo
          type:
            - any
          description: |
            文字列としてのユーザー エージェント ヘッダーに追加する情報です。
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImage
    name: 'analyzeImage(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      この操作では､画像の内容に基づいて、さまざまな視覚的特徴のセットを抽出できます。
      (1)、イメージをアップロードまたは (2)、画像の URL を指定する - 2 つの入力方式がサポートされます。 要求を返す機能を選択できるように、オプションのパラメーターがあります。 既定では、イメージのカテゴリは、応答で返されます。
      成功応答は JSON で返されます。 要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。
    syntax:
      content: 'function analyzeImage(url: string, options?: Object)'
      parameters:
        - id: url
          type:
            - string
          description: |
            イメージの URL をパブリックに到達可能です。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImage_2
    name: 'analyzeImage(string, Object, ServiceCallback<ImageAnalysis>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      この操作では､画像の内容に基づいて、さまざまな視覚的特徴のセットを抽出できます。
      (1)、イメージをアップロードまたは (2)、画像の URL を指定する - 2 つの入力方式がサポートされます。 要求を返す機能を選択できるように、オプションのパラメーターがあります。 既定では、イメージのカテゴリは、応答で返されます。
      成功応答は JSON で返されます。 要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。
    syntax:
      content: 'function analyzeImage(url: string, options: Object, callback: ServiceCallback<ImageAnalysis>)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImage_1
    name: 'analyzeImage(string, ServiceCallback<ImageAnalysis>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      この操作では､画像の内容に基づいて、さまざまな視覚的特徴のセットを抽出できます。
      (1)、イメージをアップロードまたは (2)、画像の URL を指定する - 2 つの入力方式がサポートされます。 要求を返す機能を選択できるように、オプションのパラメーターがあります。 既定では、イメージのカテゴリは、応答で返されます。
      成功応答は JSON で返されます。 要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。
    syntax:
      content: 'function analyzeImage(url: string, callback: ServiceCallback<ImageAnalysis>)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain
    name: 'analyzeImageByDomain(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      この操作は、ドメイン固有モデルを適用することで、画像内のコンテンツを認識します。 Computer Vision API によってサポートされるドメイン固有モデルの一覧は、/models GET 要求を使用して取得できます。
      現時点で、この API によって提供されるドメイン固有モデルは著名人とランドマークです。
      (1)、イメージをアップロードまたは (2)、画像の URL を指定する - 2 つの入力方式がサポートされます。
      成功応答は JSON で返されます。
      要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。
    syntax:
      content: 'function analyzeImageByDomain(model: string, url: string, options?: Object)'
      parameters:
        - id: model
          type:
            - string
          description: |
            認識するドメイン固有のコンテンツ。
        - id: url
          type:
            - string
          description: |
            イメージの URL をパブリックに到達可能です。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.DomainModelResults>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain_2
    name: 'analyzeImageByDomain(string, string, Object, ServiceCallback<DomainModelResults>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      この操作は、ドメイン固有モデルを適用することで、画像内のコンテンツを認識します。 Computer Vision API によってサポートされるドメイン固有モデルの一覧は、/models GET 要求を使用して取得できます。
      現時点で、この API によって提供されるドメイン固有モデルは著名人とランドマークです。
      (1)、イメージをアップロードまたは (2)、画像の URL を指定する - 2 つの入力方式がサポートされます。
      成功応答は JSON で返されます。
      要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。
    syntax:
      content: 'function analyzeImageByDomain(model: string, url: string, options: Object, callback: ServiceCallback<DomainModelResults>)'
      parameters:
        - id: model
          type:
            - string
          description: ''
        - id: url
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.DomainModelResults>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain_1
    name: 'analyzeImageByDomain(string, string, ServiceCallback<DomainModelResults>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      この操作は、ドメイン固有モデルを適用することで、画像内のコンテンツを認識します。 Computer Vision API によってサポートされるドメイン固有モデルの一覧は、/models GET 要求を使用して取得できます。
      現時点で、この API によって提供されるドメイン固有モデルは著名人とランドマークです。
      (1)、イメージをアップロードまたは (2)、画像の URL を指定する - 2 つの入力方式がサポートされます。
      成功応答は JSON で返されます。
      要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。
    syntax:
      content: 'function analyzeImageByDomain(model: string, url: string, callback: ServiceCallback<DomainModelResults>)'
      parameters:
        - id: model
          type:
            - string
          description: ''
        - id: url
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.DomainModelResults>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream
    name: 'analyzeImageByDomainInStream(string, stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      この操作は、ドメイン固有モデルを適用することで、画像内のコンテンツを認識します。 Computer Vision API によってサポートされるドメイン固有モデルの一覧は、/models GET 要求を使用して取得できます。
      現時点で、この API によって提供されるドメイン固有モデルは著名人とランドマークです。
      (1)、イメージをアップロードまたは (2)、画像の URL を指定する - 2 つの入力方式がサポートされます。
      成功応答は JSON で返されます。
      要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。
    syntax:
      content: 'function analyzeImageByDomainInStream(model: string, image: stream.Readable, options?: Object)'
      parameters:
        - id: model
          type:
            - string
          description: |
            認識するドメイン固有のコンテンツ。
        - id: image
          type:
            - stream.Readable
          description: |
            イメージ ストリーム。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.DomainModelResults>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream_2
    name: 'analyzeImageByDomainInStream(string, stream.Readable, Object, ServiceCallback<DomainModelResults>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      この操作は、ドメイン固有モデルを適用することで、画像内のコンテンツを認識します。 Computer Vision API によってサポートされるドメイン固有モデルの一覧は、/models GET 要求を使用して取得できます。
      現時点で、この API によって提供されるドメイン固有モデルは著名人とランドマークです。
      (1)、イメージをアップロードまたは (2)、画像の URL を指定する - 2 つの入力方式がサポートされます。
      成功応答は JSON で返されます。
      要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。
    syntax:
      content: 'function analyzeImageByDomainInStream(model: string, image: stream.Readable, options: Object, callback: ServiceCallback<DomainModelResults>)'
      parameters:
        - id: model
          type:
            - string
          description: ''
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.DomainModelResults>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream_1
    name: 'analyzeImageByDomainInStream(string, stream.Readable, ServiceCallback<DomainModelResults>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      この操作は、ドメイン固有モデルを適用することで、画像内のコンテンツを認識します。 Computer Vision API によってサポートされるドメイン固有モデルの一覧は、/models GET 要求を使用して取得できます。
      現時点で、この API によって提供されるドメイン固有モデルは著名人とランドマークです。
      (1)、イメージをアップロードまたは (2)、画像の URL を指定する - 2 つの入力方式がサポートされます。
      成功応答は JSON で返されます。
      要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。
    syntax:
      content: 'function analyzeImageByDomainInStream(model: string, image: stream.Readable, callback: ServiceCallback<DomainModelResults>)'
      parameters:
        - id: model
          type:
            - string
          description: ''
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.DomainModelResults>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStreamWithHttpOperationResponse
    name: 'analyzeImageByDomainInStreamWithHttpOperationResponse(string, stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      この操作は、ドメイン固有モデルを適用することで、画像内のコンテンツを認識します。 Computer Vision API によってサポートされるドメイン固有モデルの一覧は、/models GET 要求を使用して取得できます。
      現時点で、この API によって提供されるドメイン固有モデルは著名人とランドマークです。
      (1)、イメージをアップロードまたは (2)、画像の URL を指定する - 2 つの入力方式がサポートされます。
      成功応答は JSON で返されます。
      要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。
    syntax:
      content: 'function analyzeImageByDomainInStreamWithHttpOperationResponse(model: string, image: stream.Readable, options?: Object)'
      parameters:
        - id: model
          type:
            - string
          description: |
            認識するドメイン固有のコンテンツ。
        - id: image
          type:
            - stream.Readable
          description: |
            イメージ ストリーム。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.DomainModelResults>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainWithHttpOperationResponse
    name: 'analyzeImageByDomainWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      この操作は、ドメイン固有モデルを適用することで、画像内のコンテンツを認識します。 Computer Vision API によってサポートされるドメイン固有モデルの一覧は、/models GET 要求を使用して取得できます。
      現時点で、この API によって提供されるドメイン固有モデルは著名人とランドマークです。
      (1)、イメージをアップロードまたは (2)、画像の URL を指定する - 2 つの入力方式がサポートされます。
      成功応答は JSON で返されます。
      要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。
    syntax:
      content: 'function analyzeImageByDomainWithHttpOperationResponse(model: string, url: string, options?: Object)'
      parameters:
        - id: model
          type:
            - string
          description: |
            認識するドメイン固有のコンテンツ。
        - id: url
          type:
            - string
          description: |
            イメージの URL をパブリックに到達可能です。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.DomainModelResults>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream
    name: 'analyzeImageInStream(stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      この操作では､画像の内容に基づいて、さまざまな視覚的特徴のセットを抽出できます。
      (1)、イメージをアップロードまたは (2)、画像の URL を指定する - 2 つの入力方式がサポートされます。 要求を返す機能を選択できるように、オプションのパラメーターがあります。 既定では、イメージのカテゴリは、応答で返されます。
      成功応答は JSON で返されます。 要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。
    syntax:
      content: 'function analyzeImageInStream(image: stream.Readable, options?: Object)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: |
            イメージ ストリーム。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream_2
    name: 'analyzeImageInStream(stream.Readable, Object, ServiceCallback<ImageAnalysis>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      この操作では､画像の内容に基づいて、さまざまな視覚的特徴のセットを抽出できます。
      (1)、イメージをアップロードまたは (2)、画像の URL を指定する - 2 つの入力方式がサポートされます。 要求を返す機能を選択できるように、オプションのパラメーターがあります。 既定では、イメージのカテゴリは、応答で返されます。
      成功応答は JSON で返されます。 要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。
    syntax:
      content: 'function analyzeImageInStream(image: stream.Readable, options: Object, callback: ServiceCallback<ImageAnalysis>)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream_1
    name: 'analyzeImageInStream(stream.Readable, ServiceCallback<ImageAnalysis>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      この操作では､画像の内容に基づいて、さまざまな視覚的特徴のセットを抽出できます。
      (1)、イメージをアップロードまたは (2)、画像の URL を指定する - 2 つの入力方式がサポートされます。 要求を返す機能を選択できるように、オプションのパラメーターがあります。 既定では、イメージのカテゴリは、応答で返されます。
      成功応答は JSON で返されます。 要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。
    syntax:
      content: 'function analyzeImageInStream(image: stream.Readable, callback: ServiceCallback<ImageAnalysis>)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStreamWithHttpOperationResponse
    name: 'analyzeImageInStreamWithHttpOperationResponse(stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      この操作では､画像の内容に基づいて、さまざまな視覚的特徴のセットを抽出できます。
      (1)、イメージをアップロードまたは (2)、画像の URL を指定する - 2 つの入力方式がサポートされます。 要求を返す機能を選択できるように、オプションのパラメーターがあります。 既定では、イメージのカテゴリは、応答で返されます。
      成功応答は JSON で返されます。 要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。
    syntax:
      content: 'function analyzeImageInStreamWithHttpOperationResponse(image: stream.Readable, options?: Object)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: |
            イメージ ストリーム。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageAnalysis>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageWithHttpOperationResponse
    name: 'analyzeImageWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      この操作では､画像の内容に基づいて、さまざまな視覚的特徴のセットを抽出できます。
      (1)、イメージをアップロードまたは (2)、画像の URL を指定する - 2 つの入力方式がサポートされます。 要求を返す機能を選択できるように、オプションのパラメーターがあります。 既定では、イメージのカテゴリは、応答で返されます。
      成功応答は JSON で返されます。 要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。
    syntax:
      content: 'function analyzeImageWithHttpOperationResponse(url: string, options?: Object)'
      parameters:
        - id: url
          type:
            - string
          description: |
            イメージの URL をパブリックに到達可能です。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageAnalysis>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFile
    name: 'batchReadFile(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: このインターフェイスを使用して、負荷の高いテキスト ドキュメント用に最適化された最新の光学式文字認識 (OCR) アルゴリズムを使用して、読み取り操作の結果を取得します。 ファイルの読み取りのインターフェイスを使用すると、応答には、"操作-Location"という名前のフィールドが含まれます。 「操作の場所」フィールドには、結果にアクセス OCR する「操作結果の読み取り」操作を行う際に使用する URL が含まれています。
    syntax:
      content: 'function batchReadFile(url: string, mode: string, options?: Object)'
      parameters:
        - id: url
          type:
            - string
          description: |
            イメージの URL をパブリックに到達可能です。
        - id: mode
          type:
            - string
          description: |
            テキストを認識する型。 指定できる値は、次のとおりです。'手書き'、' 出力 '
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFile_2
    name: 'batchReadFile(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: このインターフェイスを使用して、負荷の高いテキスト ドキュメント用に最適化された最新の光学式文字認識 (OCR) アルゴリズムを使用して、読み取り操作の結果を取得します。 ファイルの読み取りのインターフェイスを使用すると、応答には、"操作-Location"という名前のフィールドが含まれます。 「操作の場所」フィールドには、結果にアクセス OCR する「操作結果の読み取り」操作を行う際に使用する URL が含まれています。
    syntax:
      content: 'function batchReadFile(url: string, mode: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: mode
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFile_1
    name: 'batchReadFile(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: このインターフェイスを使用して、負荷の高いテキスト ドキュメント用に最適化された最新の光学式文字認識 (OCR) アルゴリズムを使用して、読み取り操作の結果を取得します。 ファイルの読み取りのインターフェイスを使用すると、応答には、"操作-Location"という名前のフィールドが含まれます。 「操作の場所」フィールドには、結果にアクセス OCR する「操作結果の読み取り」操作を行う際に使用する URL が含まれています。
    syntax:
      content: 'function batchReadFile(url: string, mode: string, callback: ServiceCallback<void>)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: mode
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFileInStream
    name: 'batchReadFileInStream(stream.Readable, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: このインターフェイスを使用して、負荷の高いテキスト ドキュメント用に最適化された最新の光学式文字認識 (OCR) アルゴリズムを使用して、ドキュメントの読み取り操作の結果を取得します。 ドキュメントの読み取りのインターフェイスを使用すると、応答には、"操作-Location"という名前のフィールドが含まれます。 「操作の場所」フィールドには、OCR アクセス結果を"Get ・操作の結果の読み取り"を使用する必要がある URL が含まれています。
    syntax:
      content: 'function batchReadFileInStream(image: stream.Readable, mode: string, options?: Object)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: |
            イメージ ストリーム。
        - id: mode
          type:
            - string
          description: |
            テキストを認識する型。 指定できる値は、次のとおりです。'手書き'、' 出力 '
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFileInStream_2
    name: 'batchReadFileInStream(stream.Readable, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: このインターフェイスを使用して、負荷の高いテキスト ドキュメント用に最適化された最新の光学式文字認識 (OCR) アルゴリズムを使用して、ドキュメントの読み取り操作の結果を取得します。 ドキュメントの読み取りのインターフェイスを使用すると、応答には、"操作-Location"という名前のフィールドが含まれます。 「操作の場所」フィールドには、OCR アクセス結果を"Get ・操作の結果の読み取り"を使用する必要がある URL が含まれています。
    syntax:
      content: 'function batchReadFileInStream(image: stream.Readable, mode: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: mode
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFileInStream_1
    name: 'batchReadFileInStream(stream.Readable, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: このインターフェイスを使用して、負荷の高いテキスト ドキュメント用に最適化された最新の光学式文字認識 (OCR) アルゴリズムを使用して、ドキュメントの読み取り操作の結果を取得します。 ドキュメントの読み取りのインターフェイスを使用すると、応答には、"操作-Location"という名前のフィールドが含まれます。 「操作の場所」フィールドには、OCR アクセス結果を"Get ・操作の結果の読み取り"を使用する必要がある URL が含まれています。
    syntax:
      content: 'function batchReadFileInStream(image: stream.Readable, mode: string, callback: ServiceCallback<void>)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: mode
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFileInStreamWithHttpOperationResponse
    name: 'batchReadFileInStreamWithHttpOperationResponse(stream.Readable, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: このインターフェイスを使用して、負荷の高いテキスト ドキュメント用に最適化された最新の光学式文字認識 (OCR) アルゴリズムを使用して、ドキュメントの読み取り操作の結果を取得します。 ドキュメントの読み取りのインターフェイスを使用すると、応答には、"操作-Location"という名前のフィールドが含まれます。 「操作の場所」フィールドには、OCR アクセス結果を"Get ・操作の結果の読み取り"を使用する必要がある URL が含まれています。
    syntax:
      content: 'function batchReadFileInStreamWithHttpOperationResponse(image: stream.Readable, mode: string, options?: Object)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: |
            イメージ ストリーム。
        - id: mode
          type:
            - string
          description: |
            テキストを認識する型。 指定できる値は、次のとおりです。'手書き'、' 出力 '
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFileWithHttpOperationResponse
    name: 'batchReadFileWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: このインターフェイスを使用して、負荷の高いテキスト ドキュメント用に最適化された最新の光学式文字認識 (OCR) アルゴリズムを使用して、読み取り操作の結果を取得します。 ファイルの読み取りのインターフェイスを使用すると、応答には、"操作-Location"という名前のフィールドが含まれます。 「操作の場所」フィールドには、結果にアクセス OCR する「操作結果の読み取り」操作を行う際に使用する URL が含まれています。
    syntax:
      content: 'function batchReadFileWithHttpOperationResponse(url: string, mode: string, options?: Object)'
      parameters:
        - id: url
          type:
            - string
          description: |
            イメージの URL をパブリックに到達可能です。
        - id: mode
          type:
            - string
          description: |
            テキストを認識する型。 指定できる値は、次のとおりです。'手書き'、' 出力 '
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.constructor
    name: 'ComputerVisionClient(ServiceClientCredentials, string, ServiceClientOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new ComputerVisionClient(credentials: ServiceClientCredentials, endpoint: string, options?: ServiceClientOptions)'
      parameters:
        - id: credentials
          type:
            - ServiceClientCredentials
          description: |
            サブスクリプションの資格情報をクライアント サブスクリプションを一意に識別します。
        - id: endpoint
          type:
            - string
          description: |
            Cognitive Services のサポートされているエンドポイント。
        - id: options
          type:
            - ServiceClientOptions
          description: ''
          optional: true
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.credentials
    name: credentials
    fullName: credentials
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type:
          - ServiceClientCredentials
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImage
    name: 'describeImage(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      この操作は、完全な文を使用して、人間が判読できる言語でイメージ全体の説明を生成します。 説明はコンテンツ タグのコレクションに基づいていますが、コンテンツ タグもこの操作によって返されます。 各画像に対して複数の説明が生成されることがあります。 説明はその信頼度スコアの順に並んでいます。 すべての説明は英語です。
      (1)、イメージをアップロードまたは (2)、画像の URL を指定する - 2 つの入力方式がサポートされます。
      成功応答は JSON で返されます。 要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。
    syntax:
      content: 'function describeImage(url: string, options?: Object)'
      parameters:
        - id: url
          type:
            - string
          description: |
            イメージの URL をパブリックに到達可能です。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ImageDescription>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImage_2
    name: 'describeImage(string, Object, ServiceCallback<ImageDescription>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      この操作は、完全な文を使用して、人間が判読できる言語でイメージ全体の説明を生成します。 説明はコンテンツ タグのコレクションに基づいていますが、コンテンツ タグもこの操作によって返されます。 各画像に対して複数の説明が生成されることがあります。 説明はその信頼度スコアの順に並んでいます。 すべての説明は英語です。
      (1)、イメージをアップロードまたは (2)、画像の URL を指定する - 2 つの入力方式がサポートされます。
      成功応答は JSON で返されます。 要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。
    syntax:
      content: 'function describeImage(url: string, options: Object, callback: ServiceCallback<ImageDescription>)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ImageDescription>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImage_1
    name: 'describeImage(string, ServiceCallback<ImageDescription>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      この操作は、完全な文を使用して、人間が判読できる言語でイメージ全体の説明を生成します。 説明はコンテンツ タグのコレクションに基づいていますが、コンテンツ タグもこの操作によって返されます。 各画像に対して複数の説明が生成されることがあります。 説明はその信頼度スコアの順に並んでいます。 すべての説明は英語です。
      (1)、イメージをアップロードまたは (2)、画像の URL を指定する - 2 つの入力方式がサポートされます。
      成功応答は JSON で返されます。 要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。
    syntax:
      content: 'function describeImage(url: string, callback: ServiceCallback<ImageDescription>)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ImageDescription>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStream
    name: 'describeImageInStream(stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      この操作は、完全な文を使用して、人間が判読できる言語でイメージ全体の説明を生成します。 説明はコンテンツ タグのコレクションに基づいていますが、コンテンツ タグもこの操作によって返されます。 各画像に対して複数の説明が生成されることがあります。 説明はその信頼度スコアの順に並んでいます。 すべての説明は英語です。
      (1)、イメージをアップロードまたは (2)、画像の URL を指定する - 2 つの入力方式がサポートされます。
      成功応答は JSON で返されます。 要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。
    syntax:
      content: 'function describeImageInStream(image: stream.Readable, options?: Object)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: |
            イメージ ストリーム。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ImageDescription>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStream_2
    name: 'describeImageInStream(stream.Readable, Object, ServiceCallback<ImageDescription>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      この操作は、完全な文を使用して、人間が判読できる言語でイメージ全体の説明を生成します。 説明はコンテンツ タグのコレクションに基づいていますが、コンテンツ タグもこの操作によって返されます。 各画像に対して複数の説明が生成されることがあります。 説明はその信頼度スコアの順に並んでいます。 すべての説明は英語です。
      (1)、イメージをアップロードまたは (2)、画像の URL を指定する - 2 つの入力方式がサポートされます。
      成功応答は JSON で返されます。 要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。
    syntax:
      content: 'function describeImageInStream(image: stream.Readable, options: Object, callback: ServiceCallback<ImageDescription>)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ImageDescription>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStream_1
    name: 'describeImageInStream(stream.Readable, ServiceCallback<ImageDescription>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      この操作は、完全な文を使用して、人間が判読できる言語でイメージ全体の説明を生成します。 説明はコンテンツ タグのコレクションに基づいていますが、コンテンツ タグもこの操作によって返されます。 各画像に対して複数の説明が生成されることがあります。 説明はその信頼度スコアの順に並んでいます。 すべての説明は英語です。
      (1)、イメージをアップロードまたは (2)、画像の URL を指定する - 2 つの入力方式がサポートされます。
      成功応答は JSON で返されます。 要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。
    syntax:
      content: 'function describeImageInStream(image: stream.Readable, callback: ServiceCallback<ImageDescription>)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ImageDescription>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStreamWithHttpOperationResponse
    name: 'describeImageInStreamWithHttpOperationResponse(stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      この操作は、完全な文を使用して、人間が判読できる言語でイメージ全体の説明を生成します。 説明はコンテンツ タグのコレクションに基づいていますが、コンテンツ タグもこの操作によって返されます。 各画像に対して複数の説明が生成されることがあります。 説明はその信頼度スコアの順に並んでいます。 すべての説明は英語です。
      (1)、イメージをアップロードまたは (2)、画像の URL を指定する - 2 つの入力方式がサポートされます。
      成功応答は JSON で返されます。 要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。
    syntax:
      content: 'function describeImageInStreamWithHttpOperationResponse(image: stream.Readable, options?: Object)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: |
            イメージ ストリーム。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageDescription>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImageWithHttpOperationResponse
    name: 'describeImageWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      この操作は、完全な文を使用して、人間が判読できる言語でイメージ全体の説明を生成します。 説明はコンテンツ タグのコレクションに基づいていますが、コンテンツ タグもこの操作によって返されます。 各画像に対して複数の説明が生成されることがあります。 説明はその信頼度スコアの順に並んでいます。 すべての説明は英語です。
      (1)、イメージをアップロードまたは (2)、画像の URL を指定する - 2 つの入力方式がサポートされます。
      成功応答は JSON で返されます。 要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。
    syntax:
      content: 'function describeImageWithHttpOperationResponse(url: string, options?: Object)'
      parameters:
        - id: url
          type:
            - string
          description: |
            イメージの URL をパブリックに到達可能です。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageDescription>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.detectObjects
    name: 'detectObjects(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      指定したイメージに対してオブジェクト検出を実行します。
      (1)、イメージをアップロードまたは (2)、画像の URL を指定する - 2 つの入力方式がサポートされます。
      成功応答は JSON で返されます。 要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。
    syntax:
      content: 'function detectObjects(url: string, options?: Object)'
      parameters:
        - id: url
          type:
            - string
          description: |
            イメージの URL をパブリックに到達可能です。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.DetectResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.detectObjects_2
    name: 'detectObjects(string, Object, ServiceCallback<DetectResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      指定したイメージに対してオブジェクト検出を実行します。
      (1)、イメージをアップロードまたは (2)、画像の URL を指定する - 2 つの入力方式がサポートされます。
      成功応答は JSON で返されます。 要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。
    syntax:
      content: 'function detectObjects(url: string, options: Object, callback: ServiceCallback<DetectResult>)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.DetectResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.DetectResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.detectObjects_1
    name: 'detectObjects(string, ServiceCallback<DetectResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      指定したイメージに対してオブジェクト検出を実行します。
      (1)、イメージをアップロードまたは (2)、画像の URL を指定する - 2 つの入力方式がサポートされます。
      成功応答は JSON で返されます。 要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。
    syntax:
      content: 'function detectObjects(url: string, callback: ServiceCallback<DetectResult>)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.DetectResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.DetectResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.detectObjectsInStream
    name: 'detectObjectsInStream(stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      指定したイメージに対してオブジェクト検出を実行します。
      (1)、イメージをアップロードまたは (2)、画像の URL を指定する - 2 つの入力方式がサポートされます。
      成功応答は JSON で返されます。 要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。
    syntax:
      content: 'function detectObjectsInStream(image: stream.Readable, options?: Object)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: |
            イメージ ストリーム。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.DetectResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.detectObjectsInStream_2
    name: 'detectObjectsInStream(stream.Readable, Object, ServiceCallback<DetectResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      指定したイメージに対してオブジェクト検出を実行します。
      (1)、イメージをアップロードまたは (2)、画像の URL を指定する - 2 つの入力方式がサポートされます。
      成功応答は JSON で返されます。 要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。
    syntax:
      content: 'function detectObjectsInStream(image: stream.Readable, options: Object, callback: ServiceCallback<DetectResult>)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.DetectResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.DetectResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.detectObjectsInStream_1
    name: 'detectObjectsInStream(stream.Readable, ServiceCallback<DetectResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      指定したイメージに対してオブジェクト検出を実行します。
      (1)、イメージをアップロードまたは (2)、画像の URL を指定する - 2 つの入力方式がサポートされます。
      成功応答は JSON で返されます。 要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。
    syntax:
      content: 'function detectObjectsInStream(image: stream.Readable, callback: ServiceCallback<DetectResult>)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.DetectResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.DetectResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.detectObjectsInStreamWithHttpOperationResponse
    name: 'detectObjectsInStreamWithHttpOperationResponse(stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      指定したイメージに対してオブジェクト検出を実行します。
      (1)、イメージをアップロードまたは (2)、画像の URL を指定する - 2 つの入力方式がサポートされます。
      成功応答は JSON で返されます。 要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。
    syntax:
      content: 'function detectObjectsInStreamWithHttpOperationResponse(image: stream.Readable, options?: Object)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: |
            イメージ ストリーム。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.DetectResult>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.detectObjectsWithHttpOperationResponse
    name: 'detectObjectsWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      指定したイメージに対してオブジェクト検出を実行します。
      (1)、イメージをアップロードまたは (2)、画像の URL を指定する - 2 つの入力方式がサポートされます。
      成功応答は JSON で返されます。 要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。
    syntax:
      content: 'function detectObjectsWithHttpOperationResponse(url: string, options?: Object)'
      parameters:
        - id: url
          type:
            - string
          description: |
            イメージの URL をパブリックに到達可能です。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.DetectResult>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.endpoint
    name: endpoint
    fullName: endpoint
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'endpoint: string'
      return:
        type:
          - string
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnail
    name: 'generateThumbnail(number, number, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      この操作は、ユーザーが指定した幅と高さのサムネイル画像を生成します。 既定では、サービスが画像を分析し、関心領域 (ROI) を特定し、ROI に基づいてスマート トリミング座標を生成します。
      スマート トリミングとは異なる入力画像の縦横比を指定する場合に役立ちます。
      成功時の応答には、サムネイル画像のバイナリが格納されます。 要求が失敗した場合、応答には、エラー コードと問題点を確認するためのメッセージが含まれます。
      失敗した場合、エラー コードとエラー メッセージが返されます。 エラー コードは、InvalidImageUrl、InvalidImageFormat、InvalidImageSize、InvalidThumbnailSize NotSupportedImage、FailedToProcess、タイムアウト、または InternalServerError のいずれかになります。
    syntax:
      content: 'function generateThumbnail(width: number, height: number, url: string, options?: Object)'
      parameters:
        - id: width
          type:
            - number
          description: |
            ピクセル単位で、サムネイルの幅。 1 ~ 1024 のことがあります。 50 の推奨される最小値。
        - id: height
          type:
            - number
          description: |
            ピクセル単位で、サムネイルの高さ。 1 ~ 1024 のことがあります。 50 の推奨される最小値。
        - id: url
          type:
            - string
          description: |
            イメージの URL をパブリックに到達可能です。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<stream.Readable>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnail_2
    name: 'generateThumbnail(number, number, string, Object, ServiceCallback<stream.Readable>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      この操作は、ユーザーが指定した幅と高さのサムネイル画像を生成します。 既定では、サービスが画像を分析し、関心領域 (ROI) を特定し、ROI に基づいてスマート トリミング座標を生成します。
      スマート トリミングとは異なる入力画像の縦横比を指定する場合に役立ちます。
      成功時の応答には、サムネイル画像のバイナリが格納されます。 要求が失敗した場合、応答には、エラー コードと問題点を確認するためのメッセージが含まれます。
      失敗した場合、エラー コードとエラー メッセージが返されます。 エラー コードは、InvalidImageUrl、InvalidImageFormat、InvalidImageSize、InvalidThumbnailSize NotSupportedImage、FailedToProcess、タイムアウト、または InternalServerError のいずれかになります。
    syntax:
      content: 'function generateThumbnail(width: number, height: number, url: string, options: Object, callback: ServiceCallback<stream.Readable>)'
      parameters:
        - id: width
          type:
            - number
          description: ''
        - id: height
          type:
            - number
          description: ''
        - id: url
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<stream.Readable>
          description: ''
      return:
        type:
          - Promise<stream.Readable>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnail_1
    name: 'generateThumbnail(number, number, string, ServiceCallback<stream.Readable>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      この操作は、ユーザーが指定した幅と高さのサムネイル画像を生成します。 既定では、サービスが画像を分析し、関心領域 (ROI) を特定し、ROI に基づいてスマート トリミング座標を生成します。
      スマート トリミングとは異なる入力画像の縦横比を指定する場合に役立ちます。
      成功時の応答には、サムネイル画像のバイナリが格納されます。 要求が失敗した場合、応答には、エラー コードと問題点を確認するためのメッセージが含まれます。
      失敗した場合、エラー コードとエラー メッセージが返されます。 エラー コードは、InvalidImageUrl、InvalidImageFormat、InvalidImageSize、InvalidThumbnailSize NotSupportedImage、FailedToProcess、タイムアウト、または InternalServerError のいずれかになります。
    syntax:
      content: 'function generateThumbnail(width: number, height: number, url: string, callback: ServiceCallback<stream.Readable>)'
      parameters:
        - id: width
          type:
            - number
          description: ''
        - id: height
          type:
            - number
          description: ''
        - id: url
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<stream.Readable>
          description: ''
      return:
        type:
          - Promise<stream.Readable>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream
    name: 'generateThumbnailInStream(number, number, stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      この操作は、ユーザーが指定した幅と高さのサムネイル画像を生成します。 既定では、サービスが画像を分析し、関心領域 (ROI) を特定し、ROI に基づいてスマート トリミング座標を生成します。
      スマート トリミングとは異なる入力画像の縦横比を指定する場合に役立ちます。
      成功時の応答には、サムネイル画像のバイナリが格納されます。 要求が失敗した場合、応答には、エラー コードと問題点を確認するためのメッセージが含まれます。
      失敗した場合、エラー コードとエラー メッセージが返されます。 エラー コードは、InvalidImageUrl、InvalidImageFormat、InvalidImageSize、InvalidThumbnailSize NotSupportedImage、FailedToProcess、タイムアウト、または InternalServerError のいずれかになります。
    syntax:
      content: 'function generateThumbnailInStream(width: number, height: number, image: stream.Readable, options?: Object)'
      parameters:
        - id: width
          type:
            - number
          description: |
            ピクセル単位で、サムネイルの幅。 1 ~ 1024 のことがあります。 50 の推奨される最小値。
        - id: height
          type:
            - number
          description: |
            ピクセル単位で、サムネイルの高さ。 1 ~ 1024 のことがあります。 50 の推奨される最小値。
        - id: image
          type:
            - stream.Readable
          description: |
            イメージ ストリーム。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<stream.Readable>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream_2
    name: 'generateThumbnailInStream(number, number, stream.Readable, Object, ServiceCallback<stream.Readable>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      この操作は、ユーザーが指定した幅と高さのサムネイル画像を生成します。 既定では、サービスが画像を分析し、関心領域 (ROI) を特定し、ROI に基づいてスマート トリミング座標を生成します。
      スマート トリミングとは異なる入力画像の縦横比を指定する場合に役立ちます。
      成功時の応答には、サムネイル画像のバイナリが格納されます。 要求が失敗した場合、応答には、エラー コードと問題点を確認するためのメッセージが含まれます。
      失敗した場合、エラー コードとエラー メッセージが返されます。 エラー コードは、InvalidImageUrl、InvalidImageFormat、InvalidImageSize、InvalidThumbnailSize NotSupportedImage、FailedToProcess、タイムアウト、または InternalServerError のいずれかになります。
    syntax:
      content: 'function generateThumbnailInStream(width: number, height: number, image: stream.Readable, options: Object, callback: ServiceCallback<stream.Readable>)'
      parameters:
        - id: width
          type:
            - number
          description: ''
        - id: height
          type:
            - number
          description: ''
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<stream.Readable>
          description: ''
      return:
        type:
          - Promise<stream.Readable>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream_1
    name: 'generateThumbnailInStream(number, number, stream.Readable, ServiceCallback<stream.Readable>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      この操作は、ユーザーが指定した幅と高さのサムネイル画像を生成します。 既定では、サービスが画像を分析し、関心領域 (ROI) を特定し、ROI に基づいてスマート トリミング座標を生成します。
      スマート トリミングとは異なる入力画像の縦横比を指定する場合に役立ちます。
      成功時の応答には、サムネイル画像のバイナリが格納されます。 要求が失敗した場合、応答には、エラー コードと問題点を確認するためのメッセージが含まれます。
      失敗した場合、エラー コードとエラー メッセージが返されます。 エラー コードは、InvalidImageUrl、InvalidImageFormat、InvalidImageSize、InvalidThumbnailSize NotSupportedImage、FailedToProcess、タイムアウト、または InternalServerError のいずれかになります。
    syntax:
      content: 'function generateThumbnailInStream(width: number, height: number, image: stream.Readable, callback: ServiceCallback<stream.Readable>)'
      parameters:
        - id: width
          type:
            - number
          description: ''
        - id: height
          type:
            - number
          description: ''
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: callback
          type:
            - ServiceCallback<stream.Readable>
          description: ''
      return:
        type:
          - Promise<stream.Readable>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStreamWithHttpOperationResponse
    name: 'generateThumbnailInStreamWithHttpOperationResponse(number, number, stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      この操作は、ユーザーが指定した幅と高さのサムネイル画像を生成します。 既定では、サービスが画像を分析し、関心領域 (ROI) を特定し、ROI に基づいてスマート トリミング座標を生成します。
      スマート トリミングとは異なる入力画像の縦横比を指定する場合に役立ちます。
      成功時の応答には、サムネイル画像のバイナリが格納されます。 要求が失敗した場合、応答には、エラー コードと問題点を確認するためのメッセージが含まれます。
      失敗した場合、エラー コードとエラー メッセージが返されます。 エラー コードは、InvalidImageUrl、InvalidImageFormat、InvalidImageSize、InvalidThumbnailSize NotSupportedImage、FailedToProcess、タイムアウト、または InternalServerError のいずれかになります。
    syntax:
      content: 'function generateThumbnailInStreamWithHttpOperationResponse(width: number, height: number, image: stream.Readable, options?: Object)'
      parameters:
        - id: width
          type:
            - number
          description: |
            ピクセル単位で、サムネイルの幅。 1 ~ 1024 のことがあります。 50 の推奨される最小値。
        - id: height
          type:
            - number
          description: |
            ピクセル単位で、サムネイルの高さ。 1 ~ 1024 のことがあります。 50 の推奨される最小値。
        - id: image
          type:
            - stream.Readable
          description: |
            イメージ ストリーム。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<stream.Readable>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailWithHttpOperationResponse
    name: 'generateThumbnailWithHttpOperationResponse(number, number, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      この操作は、ユーザーが指定した幅と高さのサムネイル画像を生成します。 既定では、サービスが画像を分析し、関心領域 (ROI) を特定し、ROI に基づいてスマート トリミング座標を生成します。
      スマート トリミングとは異なる入力画像の縦横比を指定する場合に役立ちます。
      成功時の応答には、サムネイル画像のバイナリが格納されます。 要求が失敗した場合、応答には、エラー コードと問題点を確認するためのメッセージが含まれます。
      失敗した場合、エラー コードとエラー メッセージが返されます。 エラー コードは、InvalidImageUrl、InvalidImageFormat、InvalidImageSize、InvalidThumbnailSize NotSupportedImage、FailedToProcess、タイムアウト、または InternalServerError のいずれかになります。
    syntax:
      content: 'function generateThumbnailWithHttpOperationResponse(width: number, height: number, url: string, options?: Object)'
      parameters:
        - id: width
          type:
            - number
          description: |
            ピクセル単位で、サムネイルの幅。 1 ~ 1024 のことがあります。 50 の推奨される最小値。
        - id: height
          type:
            - number
          description: |
            ピクセル単位で、サムネイルの高さ。 1 ~ 1024 のことがあります。 50 の推奨される最小値。
        - id: url
          type:
            - string
          description: |
            イメージの URL をパブリックに到達可能です。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<stream.Readable>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterest
    name: 'getAreaOfInterest(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      この操作は、画像の最も重要な部分を囲む境界ボックスを返します。
      成功応答は JSON で返されます。 要求が失敗した場合、応答には、エラー コードと問題点を確認するためのメッセージが含まれます。
      失敗した場合、エラー コードとエラー メッセージが返されます。 エラー コードは、InvalidImageUrl、InvalidImageFormat、InvalidImageSize、NotSupportedImage、FailedToProcess、タイムアウト、または InternalServerError のいずれかになります。
    syntax:
      content: 'function getAreaOfInterest(url: string, options?: Object)'
      parameters:
        - id: url
          type:
            - string
          description: |
            イメージの URL をパブリックに到達可能です。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.AreaOfInterestResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterest_2
    name: 'getAreaOfInterest(string, Object, ServiceCallback<AreaOfInterestResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      この操作は、画像の最も重要な部分を囲む境界ボックスを返します。
      成功応答は JSON で返されます。 要求が失敗した場合、応答には、エラー コードと問題点を確認するためのメッセージが含まれます。
      失敗した場合、エラー コードとエラー メッセージが返されます。 エラー コードは、InvalidImageUrl、InvalidImageFormat、InvalidImageSize、NotSupportedImage、FailedToProcess、タイムアウト、または InternalServerError のいずれかになります。
    syntax:
      content: 'function getAreaOfInterest(url: string, options: Object, callback: ServiceCallback<AreaOfInterestResult>)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.AreaOfInterestResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.AreaOfInterestResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterest_1
    name: 'getAreaOfInterest(string, ServiceCallback<AreaOfInterestResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      この操作は、画像の最も重要な部分を囲む境界ボックスを返します。
      成功応答は JSON で返されます。 要求が失敗した場合、応答には、エラー コードと問題点を確認するためのメッセージが含まれます。
      失敗した場合、エラー コードとエラー メッセージが返されます。 エラー コードは、InvalidImageUrl、InvalidImageFormat、InvalidImageSize、NotSupportedImage、FailedToProcess、タイムアウト、または InternalServerError のいずれかになります。
    syntax:
      content: 'function getAreaOfInterest(url: string, callback: ServiceCallback<AreaOfInterestResult>)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.AreaOfInterestResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.AreaOfInterestResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestInStream
    name: 'getAreaOfInterestInStream(stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      この操作は、画像の最も重要な部分を囲む境界ボックスを返します。
      成功応答は JSON で返されます。 要求が失敗した場合、応答には、エラー コードと問題点を確認するためのメッセージが含まれます。
      失敗した場合、エラー コードとエラー メッセージが返されます。 エラー コードは、InvalidImageUrl、InvalidImageFormat、InvalidImageSize、NotSupportedImage、FailedToProcess、タイムアウト、または InternalServerError のいずれかになります。
    syntax:
      content: 'function getAreaOfInterestInStream(image: stream.Readable, options?: Object)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: |
            イメージ ストリーム。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.AreaOfInterestResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestInStream_2
    name: 'getAreaOfInterestInStream(stream.Readable, Object, ServiceCallback<AreaOfInterestResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      この操作は、画像の最も重要な部分を囲む境界ボックスを返します。
      成功応答は JSON で返されます。 要求が失敗した場合、応答には、エラー コードと問題点を確認するためのメッセージが含まれます。
      失敗した場合、エラー コードとエラー メッセージが返されます。 エラー コードは、InvalidImageUrl、InvalidImageFormat、InvalidImageSize、NotSupportedImage、FailedToProcess、タイムアウト、または InternalServerError のいずれかになります。
    syntax:
      content: 'function getAreaOfInterestInStream(image: stream.Readable, options: Object, callback: ServiceCallback<AreaOfInterestResult>)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.AreaOfInterestResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.AreaOfInterestResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestInStream_1
    name: 'getAreaOfInterestInStream(stream.Readable, ServiceCallback<AreaOfInterestResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      この操作は、画像の最も重要な部分を囲む境界ボックスを返します。
      成功応答は JSON で返されます。 要求が失敗した場合、応答には、エラー コードと問題点を確認するためのメッセージが含まれます。
      失敗した場合、エラー コードとエラー メッセージが返されます。 エラー コードは、InvalidImageUrl、InvalidImageFormat、InvalidImageSize、NotSupportedImage、FailedToProcess、タイムアウト、または InternalServerError のいずれかになります。
    syntax:
      content: 'function getAreaOfInterestInStream(image: stream.Readable, callback: ServiceCallback<AreaOfInterestResult>)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.AreaOfInterestResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.AreaOfInterestResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestInStreamWithHttpOperationResponse
    name: 'getAreaOfInterestInStreamWithHttpOperationResponse(stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      この操作は、画像の最も重要な部分を囲む境界ボックスを返します。
      成功応答は JSON で返されます。 要求が失敗した場合、応答には、エラー コードと問題点を確認するためのメッセージが含まれます。
      失敗した場合、エラー コードとエラー メッセージが返されます。 エラー コードは、InvalidImageUrl、InvalidImageFormat、InvalidImageSize、NotSupportedImage、FailedToProcess、タイムアウト、または InternalServerError のいずれかになります。
    syntax:
      content: 'function getAreaOfInterestInStreamWithHttpOperationResponse(image: stream.Readable, options?: Object)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: |
            イメージ ストリーム。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.AreaOfInterestResult>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestWithHttpOperationResponse
    name: 'getAreaOfInterestWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      この操作は、画像の最も重要な部分を囲む境界ボックスを返します。
      成功応答は JSON で返されます。 要求が失敗した場合、応答には、エラー コードと問題点を確認するためのメッセージが含まれます。
      失敗した場合、エラー コードとエラー メッセージが返されます。 エラー コードは、InvalidImageUrl、InvalidImageFormat、InvalidImageSize、NotSupportedImage、FailedToProcess、タイムアウト、または InternalServerError のいずれかになります。
    syntax:
      content: 'function getAreaOfInterestWithHttpOperationResponse(url: string, options?: Object)'
      parameters:
        - id: url
          type:
            - string
          description: |
            イメージの URL をパブリックに到達可能です。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.AreaOfInterestResult>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getPackageJsonInfo
    name: getPackageJsonInfo(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Package.json を azure nodejs の指定したパッケージの検索を試みます。
      場合、名前とバージョンを返しますがパッケージの読み取りでの package.json package.json が見つからない場合、既定値を返します。
    syntax:
      content: 'function getPackageJsonInfo(managementClientDir: string)'
      parameters:
        - id: managementClientDir
          type:
            - string
          description: 特定の azure の管理クライアントのディレクトリを渡します。
      return:
        type:
          - Object
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getReadOperationResult
    name: 'getReadOperationResult(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: このインターフェイスは、読み取り操作の結果を OCR を取得するために使用されます。 このインターフェイスへの URL は、バッチ ファイルの読み取りインターフェイスから返された「操作の場所」フィールドから取得する必要があります。
    syntax:
      content: 'function getReadOperationResult(operationId: string, options?: Object)'
      parameters:
        - id: operationId
          type:
            - string
          description: |
            「バッチ ファイルの読み取り」インターフェイスの応答で返される読み取り操作の id。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ReadOperationResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getReadOperationResult_2
    name: 'getReadOperationResult(string, Object, ServiceCallback<ReadOperationResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: このインターフェイスは、読み取り操作の結果を OCR を取得するために使用されます。 このインターフェイスへの URL は、バッチ ファイルの読み取りインターフェイスから返された「操作の場所」フィールドから取得する必要があります。
    syntax:
      content: 'function getReadOperationResult(operationId: string, options: Object, callback: ServiceCallback<ReadOperationResult>)'
      parameters:
        - id: operationId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.ReadOperationResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ReadOperationResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getReadOperationResult_1
    name: 'getReadOperationResult(string, ServiceCallback<ReadOperationResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: このインターフェイスは、読み取り操作の結果を OCR を取得するために使用されます。 このインターフェイスへの URL は、バッチ ファイルの読み取りインターフェイスから返された「操作の場所」フィールドから取得する必要があります。
    syntax:
      content: 'function getReadOperationResult(operationId: string, callback: ServiceCallback<ReadOperationResult>)'
      parameters:
        - id: operationId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.ReadOperationResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ReadOperationResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getReadOperationResultWithHttpOperationResponse
    name: 'getReadOperationResultWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: このインターフェイスは、読み取り操作の結果を OCR を取得するために使用されます。 このインターフェイスへの URL は、バッチ ファイルの読み取りインターフェイスから返された「操作の場所」フィールドから取得する必要があります。
    syntax:
      content: 'function getReadOperationResultWithHttpOperationResponse(operationId: string, options?: Object)'
      parameters:
        - id: operationId
          type:
            - string
          description: |
            「バッチ ファイルの読み取り」インターフェイスの応答で返される読み取り操作の id。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ReadOperationResult>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult
    name: 'getTextOperationResult(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: このインターフェイスは、テキスト操作の結果を取得するために使用されます。 このインターフェイスへの URL は、テキスト認識インターフェイスから返された ' 操作の場所 フィールドから取得する必要があります。
    syntax:
      content: 'function getTextOperationResult(operationId: string, options?: Object)'
      parameters:
        - id: operationId
          type:
            - string
          description: |
            ' 認識 Text' の応答で返されるテキスト操作の id
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.TextOperationResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult_2
    name: 'getTextOperationResult(string, Object, ServiceCallback<TextOperationResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: このインターフェイスは、テキスト操作の結果を取得するために使用されます。 このインターフェイスへの URL は、テキスト認識インターフェイスから返された ' 操作の場所 フィールドから取得する必要があります。
    syntax:
      content: 'function getTextOperationResult(operationId: string, options: Object, callback: ServiceCallback<TextOperationResult>)'
      parameters:
        - id: operationId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.TextOperationResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.TextOperationResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult_1
    name: 'getTextOperationResult(string, ServiceCallback<TextOperationResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: このインターフェイスは、テキスト操作の結果を取得するために使用されます。 このインターフェイスへの URL は、テキスト認識インターフェイスから返された ' 操作の場所 フィールドから取得する必要があります。
    syntax:
      content: 'function getTextOperationResult(operationId: string, callback: ServiceCallback<TextOperationResult>)'
      parameters:
        - id: operationId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.TextOperationResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.TextOperationResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResultWithHttpOperationResponse
    name: 'getTextOperationResultWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: このインターフェイスは、テキスト操作の結果を取得するために使用されます。 このインターフェイスへの URL は、テキスト認識インターフェイスから返された ' 操作の場所 フィールドから取得する必要があります。
    syntax:
      content: 'function getTextOperationResultWithHttpOperationResponse(operationId: string, options?: Object)'
      parameters:
        - id: operationId
          type:
            - string
          description: |
            ' 認識 Text' の応答で返されるテキスト操作の id
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TextOperationResult>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.listModels
    name: listModels(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      この操作は、Computer Vision API でサポートされているドメイン固有モデルの一覧を返します。 現時点では、この API によってサポートされるドメイン固有モデルは著名人認識機能とランドマーク認識機能です。
      成功応答は JSON で返されます。 要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。
    syntax:
      content: 'function listModels(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ListModelsResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.listModels_2
    name: 'listModels(Object, ServiceCallback<ListModelsResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      この操作は、Computer Vision API でサポートされているドメイン固有モデルの一覧を返します。 現時点では、この API によってサポートされるドメイン固有モデルは著名人認識機能とランドマーク認識機能です。
      成功応答は JSON で返されます。 要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。
    syntax:
      content: 'function listModels(options: Object, callback: ServiceCallback<ListModelsResult>)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.ListModelsResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ListModelsResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.listModels_1
    name: listModels(ServiceCallback<ListModelsResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      この操作は、Computer Vision API でサポートされているドメイン固有モデルの一覧を返します。 現時点では、この API によってサポートされるドメイン固有モデルは著名人認識機能とランドマーク認識機能です。
      成功応答は JSON で返されます。 要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。
    syntax:
      content: 'function listModels(callback: ServiceCallback<ListModelsResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.ListModelsResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ListModelsResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.listModelsWithHttpOperationResponse
    name: listModelsWithHttpOperationResponse(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      この操作は、Computer Vision API でサポートされているドメイン固有モデルの一覧を返します。 現時点では、この API によってサポートされるドメイン固有モデルは著名人認識機能とランドマーク認識機能です。
      成功応答は JSON で返されます。 要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。
    syntax:
      content: 'function listModelsWithHttpOperationResponse(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ListModelsResult>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText
    name: 'recognizePrintedText(boolean, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      光学式文字認識 (OCR) により画像内のテキストを検出し、認識した文字を抽出して、コンピューターで処理可能な文字ストリームに変換します。
      成功すると、OCR 結果が返されます。
      失敗した場合、エラー メッセージと共にエラー コードが返されます。 エラー コードは、InvalidImageUrl、InvalidImageFormat、InvalidImageSize、NotSupportedImage、NotSupportedLanguage、または InternalServerError のいずれかを指定できます。
    syntax:
      content: 'function recognizePrintedText(detectOrientation: boolean, url: string, options?: Object)'
      parameters:
        - id: detectOrientation
          type:
            - boolean
          description: |
            かどうか、イメージのテキストの向きを検出します。 DetectOrientation = true、OCR サービスとイメージの向きを検出し、さらに処理する前に修正します (例: が上下にある場合)。
        - id: url
          type:
            - string
          description: |
            イメージの URL をパブリックに到達可能です。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.OcrResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText_2
    name: 'recognizePrintedText(boolean, string, Object, ServiceCallback<OcrResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      光学式文字認識 (OCR) により画像内のテキストを検出し、認識した文字を抽出して、コンピューターで処理可能な文字ストリームに変換します。
      成功すると、OCR 結果が返されます。
      失敗した場合、エラー メッセージと共にエラー コードが返されます。 エラー コードは、InvalidImageUrl、InvalidImageFormat、InvalidImageSize、NotSupportedImage、NotSupportedLanguage、または InternalServerError のいずれかを指定できます。
    syntax:
      content: 'function recognizePrintedText(detectOrientation: boolean, url: string, options: Object, callback: ServiceCallback<OcrResult>)'
      parameters:
        - id: detectOrientation
          type:
            - boolean
          description: ''
        - id: url
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.OcrResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText_1
    name: 'recognizePrintedText(boolean, string, ServiceCallback<OcrResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      光学式文字認識 (OCR) により画像内のテキストを検出し、認識した文字を抽出して、コンピューターで処理可能な文字ストリームに変換します。
      成功すると、OCR 結果が返されます。
      失敗した場合、エラー メッセージと共にエラー コードが返されます。 エラー コードは、InvalidImageUrl、InvalidImageFormat、InvalidImageSize、NotSupportedImage、NotSupportedLanguage、または InternalServerError のいずれかを指定できます。
    syntax:
      content: 'function recognizePrintedText(detectOrientation: boolean, url: string, callback: ServiceCallback<OcrResult>)'
      parameters:
        - id: detectOrientation
          type:
            - boolean
          description: ''
        - id: url
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.OcrResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream
    name: 'recognizePrintedTextInStream(boolean, stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      光学式文字認識 (OCR) により画像内のテキストを検出し、認識した文字を抽出して、コンピューターで処理可能な文字ストリームに変換します。
      成功すると、OCR 結果が返されます。
      失敗した場合、エラー メッセージと共にエラー コードが返されます。 エラー コードは、InvalidImageUrl、InvalidImageFormat、InvalidImageSize、NotSupportedImage、NotSupportedLanguage、または InternalServerError のいずれかを指定できます。
    syntax:
      content: 'function recognizePrintedTextInStream(detectOrientation: boolean, image: stream.Readable, options?: Object)'
      parameters:
        - id: detectOrientation
          type:
            - boolean
          description: |
            かどうか、イメージのテキストの向きを検出します。 DetectOrientation = true、OCR サービスとイメージの向きを検出し、さらに処理する前に修正します (例: が上下にある場合)。
        - id: image
          type:
            - stream.Readable
          description: |
            イメージ ストリーム。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.OcrResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream_2
    name: 'recognizePrintedTextInStream(boolean, stream.Readable, Object, ServiceCallback<OcrResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      光学式文字認識 (OCR) により画像内のテキストを検出し、認識した文字を抽出して、コンピューターで処理可能な文字ストリームに変換します。
      成功すると、OCR 結果が返されます。
      失敗した場合、エラー メッセージと共にエラー コードが返されます。 エラー コードは、InvalidImageUrl、InvalidImageFormat、InvalidImageSize、NotSupportedImage、NotSupportedLanguage、または InternalServerError のいずれかを指定できます。
    syntax:
      content: 'function recognizePrintedTextInStream(detectOrientation: boolean, image: stream.Readable, options: Object, callback: ServiceCallback<OcrResult>)'
      parameters:
        - id: detectOrientation
          type:
            - boolean
          description: ''
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.OcrResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream_1
    name: 'recognizePrintedTextInStream(boolean, stream.Readable, ServiceCallback<OcrResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      光学式文字認識 (OCR) により画像内のテキストを検出し、認識した文字を抽出して、コンピューターで処理可能な文字ストリームに変換します。
      成功すると、OCR 結果が返されます。
      失敗した場合、エラー メッセージと共にエラー コードが返されます。 エラー コードは、InvalidImageUrl、InvalidImageFormat、InvalidImageSize、NotSupportedImage、NotSupportedLanguage、または InternalServerError のいずれかを指定できます。
    syntax:
      content: 'function recognizePrintedTextInStream(detectOrientation: boolean, image: stream.Readable, callback: ServiceCallback<OcrResult>)'
      parameters:
        - id: detectOrientation
          type:
            - boolean
          description: ''
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.OcrResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStreamWithHttpOperationResponse
    name: 'recognizePrintedTextInStreamWithHttpOperationResponse(boolean, stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      光学式文字認識 (OCR) により画像内のテキストを検出し、認識した文字を抽出して、コンピューターで処理可能な文字ストリームに変換します。
      成功すると、OCR 結果が返されます。
      失敗した場合、エラー メッセージと共にエラー コードが返されます。 エラー コードは、InvalidImageUrl、InvalidImageFormat、InvalidImageSize、NotSupportedImage、NotSupportedLanguage、または InternalServerError のいずれかを指定できます。
    syntax:
      content: 'function recognizePrintedTextInStreamWithHttpOperationResponse(detectOrientation: boolean, image: stream.Readable, options?: Object)'
      parameters:
        - id: detectOrientation
          type:
            - boolean
          description: |
            かどうか、イメージのテキストの向きを検出します。 DetectOrientation = true、OCR サービスとイメージの向きを検出し、さらに処理する前に修正します (例: が上下にある場合)。
        - id: image
          type:
            - stream.Readable
          description: |
            イメージ ストリーム。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.OcrResult>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextWithHttpOperationResponse
    name: 'recognizePrintedTextWithHttpOperationResponse(boolean, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      光学式文字認識 (OCR) により画像内のテキストを検出し、認識した文字を抽出して、コンピューターで処理可能な文字ストリームに変換します。
      成功すると、OCR 結果が返されます。
      失敗した場合、エラー メッセージと共にエラー コードが返されます。 エラー コードは、InvalidImageUrl、InvalidImageFormat、InvalidImageSize、NotSupportedImage、NotSupportedLanguage、または InternalServerError のいずれかを指定できます。
    syntax:
      content: 'function recognizePrintedTextWithHttpOperationResponse(detectOrientation: boolean, url: string, options?: Object)'
      parameters:
        - id: detectOrientation
          type:
            - boolean
          description: |
            かどうか、イメージのテキストの向きを検出します。 DetectOrientation = true、OCR サービスとイメージの向きを検出し、さらに処理する前に修正します (例: が上下にある場合)。
        - id: url
          type:
            - string
          description: |
            イメージの URL をパブリックに到達可能です。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.OcrResult>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeText
    name: 'recognizeText(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: テキストの操作を認識します。 テキスト認識インターフェイスを使用すると、応答には、' 操作の場所 ' という名前のフィールドが含まれます。 ' 操作の場所 フィールドには、認識テキスト操作結果の取得操作を行う際に使用する URL が含まれています。
    syntax:
      content: 'function recognizeText(url: string, mode: string, options?: Object)'
      parameters:
        - id: url
          type:
            - string
          description: |
            イメージの URL をパブリックに到達可能です。
        - id: mode
          type:
            - string
          description: |
            テキストを認識する型。 指定できる値は、次のとおりです。'手書き'、' 出力 '
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeText_2
    name: 'recognizeText(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: テキストの操作を認識します。 テキスト認識インターフェイスを使用すると、応答には、' 操作の場所 ' という名前のフィールドが含まれます。 ' 操作の場所 フィールドには、認識テキスト操作結果の取得操作を行う際に使用する URL が含まれています。
    syntax:
      content: 'function recognizeText(url: string, mode: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: mode
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeText_1
    name: 'recognizeText(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: テキストの操作を認識します。 テキスト認識インターフェイスを使用すると、応答には、' 操作の場所 ' という名前のフィールドが含まれます。 ' 操作の場所 フィールドには、認識テキスト操作結果の取得操作を行う際に使用する URL が含まれています。
    syntax:
      content: 'function recognizeText(url: string, mode: string, callback: ServiceCallback<void>)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: mode
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream
    name: 'recognizeTextInStream(stream.Readable, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: テキストの操作を認識します。 テキスト認識インターフェイスを使用すると、応答には、' 操作の場所 ' という名前のフィールドが含まれます。 ' 操作の場所 フィールドには、認識テキスト操作結果の取得操作を行う際に使用する URL が含まれています。
    syntax:
      content: 'function recognizeTextInStream(image: stream.Readable, mode: string, options?: Object)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: |
            イメージ ストリーム。
        - id: mode
          type:
            - string
          description: |
            テキストを認識する型。 指定できる値は、次のとおりです。'手書き'、' 出力 '
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream_2
    name: 'recognizeTextInStream(stream.Readable, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: テキストの操作を認識します。 テキスト認識インターフェイスを使用すると、応答には、' 操作の場所 ' という名前のフィールドが含まれます。 ' 操作の場所 フィールドには、認識テキスト操作結果の取得操作を行う際に使用する URL が含まれています。
    syntax:
      content: 'function recognizeTextInStream(image: stream.Readable, mode: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: mode
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream_1
    name: 'recognizeTextInStream(stream.Readable, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: テキストの操作を認識します。 テキスト認識インターフェイスを使用すると、応答には、' 操作の場所 ' という名前のフィールドが含まれます。 ' 操作の場所 フィールドには、認識テキスト操作結果の取得操作を行う際に使用する URL が含まれています。
    syntax:
      content: 'function recognizeTextInStream(image: stream.Readable, mode: string, callback: ServiceCallback<void>)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: mode
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStreamWithHttpOperationResponse
    name: 'recognizeTextInStreamWithHttpOperationResponse(stream.Readable, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: テキストの操作を認識します。 テキスト認識インターフェイスを使用すると、応答には、' 操作の場所 ' という名前のフィールドが含まれます。 ' 操作の場所 フィールドには、認識テキスト操作結果の取得操作を行う際に使用する URL が含まれています。
    syntax:
      content: 'function recognizeTextInStreamWithHttpOperationResponse(image: stream.Readable, mode: string, options?: Object)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: |
            イメージ ストリーム。
        - id: mode
          type:
            - string
          description: |
            テキストを認識する型。 指定できる値は、次のとおりです。'手書き'、' 出力 '
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextWithHttpOperationResponse
    name: 'recognizeTextWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: テキストの操作を認識します。 テキスト認識インターフェイスを使用すると、応答には、' 操作の場所 ' という名前のフィールドが含まれます。 ' 操作の場所 フィールドには、認識テキスト操作結果の取得操作を行う際に使用する URL が含まれています。
    syntax:
      content: 'function recognizeTextWithHttpOperationResponse(url: string, mode: string, options?: Object)'
      parameters:
        - id: url
          type:
            - string
          description: |
            イメージの URL をパブリックに到達可能です。
        - id: mode
          type:
            - string
          description: |
            テキストを認識する型。 指定できる値は、次のとおりです。'手書き'、' 出力 '
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.sendRequest_1
    name: sendRequest(PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendRequest<TResult>(options: PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions)'
      parameters:
        - id: options
          type:
            - PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions
          description: ''
      return:
        type:
          - Promise<TResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.sendRequest
    name: 'sendRequest(PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions, ServiceCallback<TResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendRequest<TResult>(options: PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions, callback: ServiceCallback<TResult>)'
      parameters:
        - id: options
          type:
            - PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions
          description: ''
        - id: callback
          type:
            - ServiceCallback<TResult>
          description: ''
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.sendRequestWithHttpOperationResponse
    name: sendRequestWithHttpOperationResponse(PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendRequestWithHttpOperationResponse<TResult>(options: PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions)'
      parameters:
        - id: options
          type:
            - PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse<TResult>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImage
    name: 'tagImage(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      この操作は、指定された画像のコンテンツに関連する単語すなわちタグのリストを生成します。 Computer Vision API は、画像内で検出された物体、生物、景色、または動作に基づくタグを返すことができます。 カテゴリとは異なり、タグは階層的分類システムで整理されていませんが、画像のコンテンツに対応しています。 タグは、あいまいさを避けるか、コンテキストを提供するヒントを含めることができます、たとえばヒント「楽器」によって"cello"タグを伴うことがあります。 すべてのタグは英語です。
      (1)、イメージをアップロードまたは (2)、画像の URL を指定する - 2 つの入力方式がサポートされます。
      成功応答は JSON で返されます。 要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。
    syntax:
      content: 'function tagImage(url: string, options?: Object)'
      parameters:
        - id: url
          type:
            - string
          description: |
            イメージの URL をパブリックに到達可能です。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.TagResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImage_2
    name: 'tagImage(string, Object, ServiceCallback<TagResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      この操作は、指定された画像のコンテンツに関連する単語すなわちタグのリストを生成します。 Computer Vision API は、画像内で検出された物体、生物、景色、または動作に基づくタグを返すことができます。 カテゴリとは異なり、タグは階層的分類システムで整理されていませんが、画像のコンテンツに対応しています。 タグは、あいまいさを避けるか、コンテキストを提供するヒントを含めることができます、たとえばヒント「楽器」によって"cello"タグを伴うことがあります。 すべてのタグは英語です。
      (1)、イメージをアップロードまたは (2)、画像の URL を指定する - 2 つの入力方式がサポートされます。
      成功応答は JSON で返されます。 要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。
    syntax:
      content: 'function tagImage(url: string, options: Object, callback: ServiceCallback<TagResult>)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.TagResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.TagResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImage_1
    name: 'tagImage(string, ServiceCallback<TagResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      この操作は、指定された画像のコンテンツに関連する単語すなわちタグのリストを生成します。 Computer Vision API は、画像内で検出された物体、生物、景色、または動作に基づくタグを返すことができます。 カテゴリとは異なり、タグは階層的分類システムで整理されていませんが、画像のコンテンツに対応しています。 タグは、あいまいさを避けるか、コンテキストを提供するヒントを含めることができます、たとえばヒント「楽器」によって"cello"タグを伴うことがあります。 すべてのタグは英語です。
      (1)、イメージをアップロードまたは (2)、画像の URL を指定する - 2 つの入力方式がサポートされます。
      成功応答は JSON で返されます。 要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。
    syntax:
      content: 'function tagImage(url: string, callback: ServiceCallback<TagResult>)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.TagResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.TagResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStream
    name: 'tagImageInStream(stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      この操作は、指定された画像のコンテンツに関連する単語すなわちタグのリストを生成します。 Computer Vision API は、画像内で検出された物体、生物、景色、または動作に基づくタグを返すことができます。 カテゴリとは異なり、タグは階層的分類システムで整理されていませんが、画像のコンテンツに対応しています。 タグは、あいまいさを避けるか、コンテキストを提供するヒントを含めることができます、たとえばヒント「楽器」によって"cello"タグを伴うことがあります。 すべてのタグは英語です。
      (1)、イメージをアップロードまたは (2)、画像の URL を指定する - 2 つの入力方式がサポートされます。
      成功応答は JSON で返されます。 要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。
    syntax:
      content: 'function tagImageInStream(image: stream.Readable, options?: Object)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: |
            イメージ ストリーム。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.TagResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStream_2
    name: 'tagImageInStream(stream.Readable, Object, ServiceCallback<TagResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      この操作は、指定された画像のコンテンツに関連する単語すなわちタグのリストを生成します。 Computer Vision API は、画像内で検出された物体、生物、景色、または動作に基づくタグを返すことができます。 カテゴリとは異なり、タグは階層的分類システムで整理されていませんが、画像のコンテンツに対応しています。 タグは、あいまいさを避けるか、コンテキストを提供するヒントを含めることができます、たとえばヒント「楽器」によって"cello"タグを伴うことがあります。 すべてのタグは英語です。
      (1)、イメージをアップロードまたは (2)、画像の URL を指定する - 2 つの入力方式がサポートされます。
      成功応答は JSON で返されます。 要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。
    syntax:
      content: 'function tagImageInStream(image: stream.Readable, options: Object, callback: ServiceCallback<TagResult>)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.TagResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.TagResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStream_1
    name: 'tagImageInStream(stream.Readable, ServiceCallback<TagResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      この操作は、指定された画像のコンテンツに関連する単語すなわちタグのリストを生成します。 Computer Vision API は、画像内で検出された物体、生物、景色、または動作に基づくタグを返すことができます。 カテゴリとは異なり、タグは階層的分類システムで整理されていませんが、画像のコンテンツに対応しています。 タグは、あいまいさを避けるか、コンテキストを提供するヒントを含めることができます、たとえばヒント「楽器」によって"cello"タグを伴うことがあります。 すべてのタグは英語です。
      (1)、イメージをアップロードまたは (2)、画像の URL を指定する - 2 つの入力方式がサポートされます。
      成功応答は JSON で返されます。 要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。
    syntax:
      content: 'function tagImageInStream(image: stream.Readable, callback: ServiceCallback<TagResult>)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.TagResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.TagResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStreamWithHttpOperationResponse
    name: 'tagImageInStreamWithHttpOperationResponse(stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      この操作は、指定された画像のコンテンツに関連する単語すなわちタグのリストを生成します。 Computer Vision API は、画像内で検出された物体、生物、景色、または動作に基づくタグを返すことができます。 カテゴリとは異なり、タグは階層的分類システムで整理されていませんが、画像のコンテンツに対応しています。 タグは、あいまいさを避けるか、コンテキストを提供するヒントを含めることができます、たとえばヒント「楽器」によって"cello"タグを伴うことがあります。 すべてのタグは英語です。
      (1)、イメージをアップロードまたは (2)、画像の URL を指定する - 2 つの入力方式がサポートされます。
      成功応答は JSON で返されます。 要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。
    syntax:
      content: 'function tagImageInStreamWithHttpOperationResponse(image: stream.Readable, options?: Object)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: |
            イメージ ストリーム。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TagResult>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImageWithHttpOperationResponse
    name: 'tagImageWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      この操作は、指定された画像のコンテンツに関連する単語すなわちタグのリストを生成します。 Computer Vision API は、画像内で検出された物体、生物、景色、または動作に基づくタグを返すことができます。 カテゴリとは異なり、タグは階層的分類システムで整理されていませんが、画像のコンテンツに対応しています。 タグは、あいまいさを避けるか、コンテキストを提供するヒントを含めることができます、たとえばヒント「楽器」によって"cello"タグを伴うことがあります。 すべてのタグは英語です。
      (1)、イメージをアップロードまたは (2)、画像の URL を指定する - 2 つの入力方式がサポートされます。
      成功応答は JSON で返されます。 要求が失敗した場合、エラー コードと問題の原因がわかりやすくためのメッセージに応答が含まれます。
    syntax:
      content: 'function tagImageWithHttpOperationResponse(url: string, options?: Object)'
      parameters:
        - id: url
          type:
            - string
          description: |
            イメージの URL をパブリックに到達可能です。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TagResult>>
    package: azure-cognitiveservices-computervision
references:
  - uid: Promise<azure-cognitiveservices-computervision.ImageAnalysis>
    name: ImageAnalysis>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ImageAnalysis
        fullName: ImageAnalysis
        uid: azure-cognitiveservices-computervision.ImageAnalysis
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
    name: ImageAnalysis>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ImageAnalysis
        fullName: ImageAnalysis
        uid: azure-cognitiveservices-computervision.ImageAnalysis
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-cognitiveservices-computervision.DomainModelResults>
    name: DomainModelResults>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DomainModelResults
        fullName: DomainModelResults
        uid: azure-cognitiveservices-computervision.DomainModelResults
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
    name: DomainModelResults>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DomainModelResults
        fullName: DomainModelResults
        uid: azure-cognitiveservices-computervision.DomainModelResults
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.DomainModelResults>>
    name: DomainModelResults>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: DomainModelResults
        fullName: DomainModelResults
        uid: azure-cognitiveservices-computervision.DomainModelResults
      - name: '>>'
        fullName: '>>'
  - uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageAnalysis>>
    name: ImageAnalysis>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ImageAnalysis
        fullName: ImageAnalysis
        uid: azure-cognitiveservices-computervision.ImageAnalysis
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-cognitiveservices-computervision.ImageDescription>
    name: ImageDescription>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ImageDescription
        fullName: ImageDescription
        uid: azure-cognitiveservices-computervision.ImageDescription
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
    name: ImageDescription>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ImageDescription
        fullName: ImageDescription
        uid: azure-cognitiveservices-computervision.ImageDescription
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageDescription>>
    name: ImageDescription>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ImageDescription
        fullName: ImageDescription
        uid: azure-cognitiveservices-computervision.ImageDescription
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-cognitiveservices-computervision.DetectResult>
    name: DetectResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DetectResult
        fullName: DetectResult
        uid: azure-cognitiveservices-computervision.DetectResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-cognitiveservices-computervision.DetectResult>
    name: DetectResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DetectResult
        fullName: DetectResult
        uid: azure-cognitiveservices-computervision.DetectResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.DetectResult>>
    name: DetectResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: DetectResult
        fullName: DetectResult
        uid: azure-cognitiveservices-computervision.DetectResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-cognitiveservices-computervision.AreaOfInterestResult>
    name: AreaOfInterestResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: AreaOfInterestResult
        fullName: AreaOfInterestResult
        uid: azure-cognitiveservices-computervision.AreaOfInterestResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-cognitiveservices-computervision.AreaOfInterestResult>
    name: AreaOfInterestResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: AreaOfInterestResult
        fullName: AreaOfInterestResult
        uid: azure-cognitiveservices-computervision.AreaOfInterestResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.AreaOfInterestResult>>
    name: AreaOfInterestResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: AreaOfInterestResult
        fullName: AreaOfInterestResult
        uid: azure-cognitiveservices-computervision.AreaOfInterestResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-cognitiveservices-computervision.ReadOperationResult>
    name: ReadOperationResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ReadOperationResult
        fullName: ReadOperationResult
        uid: azure-cognitiveservices-computervision.ReadOperationResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-cognitiveservices-computervision.ReadOperationResult>
    name: ReadOperationResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ReadOperationResult
        fullName: ReadOperationResult
        uid: azure-cognitiveservices-computervision.ReadOperationResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ReadOperationResult>>
    name: ReadOperationResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ReadOperationResult
        fullName: ReadOperationResult
        uid: azure-cognitiveservices-computervision.ReadOperationResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-cognitiveservices-computervision.TextOperationResult>
    name: TextOperationResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: TextOperationResult
        fullName: TextOperationResult
        uid: azure-cognitiveservices-computervision.TextOperationResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-cognitiveservices-computervision.TextOperationResult>
    name: TextOperationResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: TextOperationResult
        fullName: TextOperationResult
        uid: azure-cognitiveservices-computervision.TextOperationResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TextOperationResult>>
    name: TextOperationResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: TextOperationResult
        fullName: TextOperationResult
        uid: azure-cognitiveservices-computervision.TextOperationResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-cognitiveservices-computervision.ListModelsResult>
    name: ListModelsResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ListModelsResult
        fullName: ListModelsResult
        uid: azure-cognitiveservices-computervision.ListModelsResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-cognitiveservices-computervision.ListModelsResult>
    name: ListModelsResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ListModelsResult
        fullName: ListModelsResult
        uid: azure-cognitiveservices-computervision.ListModelsResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ListModelsResult>>
    name: ListModelsResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ListModelsResult
        fullName: ListModelsResult
        uid: azure-cognitiveservices-computervision.ListModelsResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-cognitiveservices-computervision.OcrResult>
    name: OcrResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: OcrResult
        fullName: OcrResult
        uid: azure-cognitiveservices-computervision.OcrResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
    name: OcrResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: OcrResult
        fullName: OcrResult
        uid: azure-cognitiveservices-computervision.OcrResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.OcrResult>>
    name: OcrResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: OcrResult
        fullName: OcrResult
        uid: azure-cognitiveservices-computervision.OcrResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-cognitiveservices-computervision.TagResult>
    name: TagResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: TagResult
        fullName: TagResult
        uid: azure-cognitiveservices-computervision.TagResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-cognitiveservices-computervision.TagResult>
    name: TagResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: TagResult
        fullName: TagResult
        uid: azure-cognitiveservices-computervision.TagResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TagResult>>
    name: TagResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: TagResult
        fullName: TagResult
        uid: azure-cognitiveservices-computervision.TagResult
      - name: '>>'
        fullName: '>>'