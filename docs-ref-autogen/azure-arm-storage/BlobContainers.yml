### YamlMime:UniversalReference
ms.openlocfilehash: 16e5c8d5e48a413877be9cffa7bf2a859943cbd2
ms.sourcegitcommit: 286f52ea38c9eff2ec9d4f8cabeb86f62fd9c406
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 08/22/2018
ms.locfileid: "41697411"
items:
- uid: azure-arm-storage.BlobContainers
  name: BlobContainers
  fullName: BlobContainers
  children:
  - azure-arm-storage.BlobContainers.clearLegalHold
  - azure-arm-storage.BlobContainers.clearLegalHold_1
  - azure-arm-storage.BlobContainers.clearLegalHold_2
  - azure-arm-storage.BlobContainers.clearLegalHoldWithHttpOperationResponse
  - azure-arm-storage.BlobContainers.create
  - azure-arm-storage.BlobContainers.create_2
  - azure-arm-storage.BlobContainers.create_1
  - azure-arm-storage.BlobContainers.createOrUpdateImmutabilityPolicy
  - azure-arm-storage.BlobContainers.createOrUpdateImmutabilityPolicy_1
  - azure-arm-storage.BlobContainers.createOrUpdateImmutabilityPolicy_2
  - azure-arm-storage.BlobContainers.createOrUpdateImmutabilityPolicyWithHttpOperationResponse
  - azure-arm-storage.BlobContainers.createWithHttpOperationResponse
  - azure-arm-storage.BlobContainers.deleteImmutabilityPolicy_1
  - azure-arm-storage.BlobContainers.deleteImmutabilityPolicy
  - azure-arm-storage.BlobContainers.deleteImmutabilityPolicy_2
  - azure-arm-storage.BlobContainers.deleteImmutabilityPolicyWithHttpOperationResponse
  - azure-arm-storage.BlobContainers.deleteMethod
  - azure-arm-storage.BlobContainers.deleteMethod_1
  - azure-arm-storage.BlobContainers.deleteMethod_2
  - azure-arm-storage.BlobContainers.deleteMethodWithHttpOperationResponse
  - azure-arm-storage.BlobContainers.extendImmutabilityPolicy
  - azure-arm-storage.BlobContainers.extendImmutabilityPolicy_1
  - azure-arm-storage.BlobContainers.extendImmutabilityPolicy_2
  - azure-arm-storage.BlobContainers.extendImmutabilityPolicyWithHttpOperationResponse
  - azure-arm-storage.BlobContainers.get
  - azure-arm-storage.BlobContainers.get_1
  - azure-arm-storage.BlobContainers.get_2
  - azure-arm-storage.BlobContainers.getImmutabilityPolicy
  - azure-arm-storage.BlobContainers.getImmutabilityPolicy_2
  - azure-arm-storage.BlobContainers.getImmutabilityPolicy_1
  - azure-arm-storage.BlobContainers.getImmutabilityPolicyWithHttpOperationResponse
  - azure-arm-storage.BlobContainers.getWithHttpOperationResponse
  - azure-arm-storage.BlobContainers.list
  - azure-arm-storage.BlobContainers.list_1
  - azure-arm-storage.BlobContainers.list_2
  - azure-arm-storage.BlobContainers.listWithHttpOperationResponse
  - azure-arm-storage.BlobContainers.lockImmutabilityPolicy
  - azure-arm-storage.BlobContainers.lockImmutabilityPolicy_1
  - azure-arm-storage.BlobContainers.lockImmutabilityPolicy_2
  - azure-arm-storage.BlobContainers.lockImmutabilityPolicyWithHttpOperationResponse
  - azure-arm-storage.BlobContainers.setLegalHold
  - azure-arm-storage.BlobContainers.setLegalHold_1
  - azure-arm-storage.BlobContainers.setLegalHold_2
  - azure-arm-storage.BlobContainers.setLegalHoldWithHttpOperationResponse
  - azure-arm-storage.BlobContainers.update
  - azure-arm-storage.BlobContainers.update_1
  - azure-arm-storage.BlobContainers.update_2
  - azure-arm-storage.BlobContainers.updateWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.clearLegalHold
  name: clearLegalHold
  children: []
  type: method
  langs:
  - typeScript
  summary: クリア法律では、タグを保持します。 存在しないか、同じタグをクリアすると、べき等操作が発生します。 ClearLegalHold は、要求で指定したタグのみをクリアします。
  syntax:
    content: 'function clearLegalHold(resourceGroupName: string, accountName: string, containerName: string, tags: string[], options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        ユーザーのサブスクリプション内のリソース グループの名前。 名前は、大文字と小文字を区別しません。
    - id: accountName
      type:
      - string
      description: >
        指定されたリソース グループ内のストレージ アカウントの名前。 ストレージ アカウント名の長さは 3 ～ 24 文字で、数字と小文字のみを使用する必要があります。
    - id: containerName
      type:
      - string
      description: >
        指定されたストレージ アカウント内の blob コンテナーの名前。 Blob コンテナー名は、長さ 3 ~ 63 文字でなければし、数字、小文字、およびダッシュ (-) のみを使用する必要があります。

        すべてのダッシュ (-) 文字は、すぐに前し、後にアルファベットまたは数字をする必要があります。
    - id: tags
      type:
      - string[]
      description: >
        各タグは 3 ~ 23 文字の英数字にする必要があり、SRP で大文字と小文字に正規化されます。
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.LegalHold>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.clearLegalHold_1
  name: clearLegalHold
  children: []
  type: method
  langs:
  - typeScript
  summary: クリア法律では、タグを保持します。 存在しないか、同じタグをクリアすると、べき等操作が発生します。 ClearLegalHold は、要求で指定したタグのみをクリアします。
  syntax:
    content: 'function clearLegalHold(resourceGroupName: string, accountName: string, containerName: string, tags: string[], callback: ServiceCallback<LegalHold>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: tags
      type:
      - string[]
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.LegalHold>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.LegalHold>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.clearLegalHold_2
  name: clearLegalHold
  children: []
  type: method
  langs:
  - typeScript
  summary: クリア法律では、タグを保持します。 存在しないか、同じタグをクリアすると、べき等操作が発生します。 ClearLegalHold は、要求で指定したタグのみをクリアします。
  syntax:
    content: 'function clearLegalHold(resourceGroupName: string, accountName: string, containerName: string, tags: string[], options: Object, callback: ServiceCallback<LegalHold>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: tags
      type:
      - string[]
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.LegalHold>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.LegalHold>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.clearLegalHoldWithHttpOperationResponse
  name: clearLegalHoldWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: クリア法律では、タグを保持します。 存在しないか、同じタグをクリアすると、べき等操作が発生します。 ClearLegalHold は、要求で指定したタグのみをクリアします。
  syntax:
    content: 'function clearLegalHoldWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, tags: string[], options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        ユーザーのサブスクリプション内のリソース グループの名前。 名前は、大文字と小文字を区別しません。
    - id: accountName
      type:
      - string
      description: >
        指定されたリソース グループ内のストレージ アカウントの名前。 ストレージ アカウント名の長さは 3 ～ 24 文字で、数字と小文字のみを使用する必要があります。
    - id: containerName
      type:
      - string
      description: >
        指定されたストレージ アカウント内の blob コンテナーの名前。 Blob コンテナー名は、長さ 3 ~ 63 文字でなければし、数字、小文字、およびダッシュ (-) のみを使用する必要があります。

        すべてのダッシュ (-) 文字は、すぐに前し、後にアルファベットまたは数字をする必要があります。
    - id: tags
      type:
      - string[]
      description: >
        各タグは 3 ~ 23 文字の英数字にする必要があり、SRP で大文字と小文字に正規化されます。
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.LegalHold>>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.create
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: 要求本文での説明に従って、指定されたアカウントの新しいコンテナーを作成します。 コンテナーのリソースには、そのコンテナーのメタデータとプロパティが含まれています。 これは、コンテナーに含まれる blob の一覧には含まれません。
  syntax:
    content: 'function create(resourceGroupName: string, accountName: string, containerName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        ユーザーのサブスクリプション内のリソース グループの名前。 名前は、大文字と小文字を区別しません。
    - id: accountName
      type:
      - string
      description: >
        指定されたリソース グループ内のストレージ アカウントの名前。 ストレージ アカウント名の長さは 3 ～ 24 文字で、数字と小文字のみを使用する必要があります。
    - id: containerName
      type:
      - string
      description: >
        指定されたストレージ アカウント内の blob コンテナーの名前。 Blob コンテナー名は、長さ 3 ~ 63 文字でなければし、数字、小文字、およびダッシュ (-) のみを使用する必要があります。

        すべてのダッシュ (-) 文字は、すぐに前し、後にアルファベットまたは数字をする必要があります。
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.BlobContainer>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.create_2
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: 要求本文での説明に従って、指定されたアカウントの新しいコンテナーを作成します。 コンテナーのリソースには、そのコンテナーのメタデータとプロパティが含まれています。 これは、コンテナーに含まれる blob の一覧には含まれません。
  syntax:
    content: 'function create(resourceGroupName: string, accountName: string, containerName: string, options: Object, callback: ServiceCallback<BlobContainer>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.BlobContainer>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.BlobContainer>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.create_1
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: 要求本文での説明に従って、指定されたアカウントの新しいコンテナーを作成します。 コンテナーのリソースには、そのコンテナーのメタデータとプロパティが含まれています。 これは、コンテナーに含まれる blob の一覧には含まれません。
  syntax:
    content: 'function create(resourceGroupName: string, accountName: string, containerName: string, callback: ServiceCallback<BlobContainer>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.BlobContainer>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.BlobContainer>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.createOrUpdateImmutabilityPolicy
  name: createOrUpdateImmutabilityPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: 作成またはロックされた不変ポリシーを更新します。 指定されたが、この操作は必要ありません、If-match 内の ETag が受け入れられます。
  syntax:
    content: 'function createOrUpdateImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, immutabilityPeriodSinceCreationInDays: number, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        ユーザーのサブスクリプション内のリソース グループの名前。 名前は、大文字と小文字を区別しません。
    - id: accountName
      type:
      - string
      description: >
        指定されたリソース グループ内のストレージ アカウントの名前。 ストレージ アカウント名の長さは 3 ～ 24 文字で、数字と小文字のみを使用する必要があります。
    - id: containerName
      type:
      - string
      description: >
        指定されたストレージ アカウント内の blob コンテナーの名前。 Blob コンテナー名は、長さ 3 ~ 63 文字でなければし、数字、小文字、およびダッシュ (-) のみを使用する必要があります。

        すべてのダッシュ (-) 文字は、すぐに前し、後にアルファベットまたは数字をする必要があります。
    - id: immutabilityPeriodSinceCreationInDays
      type:
      - number
      description: >
        日以内に、ポリシーが作成されてからコンテナー内の blob の不変性期間。
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.createOrUpdateImmutabilityPolicy_1
  name: createOrUpdateImmutabilityPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: 作成またはロックされた不変ポリシーを更新します。 指定されたが、この操作は必要ありません、If-match 内の ETag が受け入れられます。
  syntax:
    content: 'function createOrUpdateImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, immutabilityPeriodSinceCreationInDays: number, callback: ServiceCallback<ImmutabilityPolicy>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: immutabilityPeriodSinceCreationInDays
      type:
      - number
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.createOrUpdateImmutabilityPolicy_2
  name: createOrUpdateImmutabilityPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: 作成またはロックされた不変ポリシーを更新します。 指定されたが、この操作は必要ありません、If-match 内の ETag が受け入れられます。
  syntax:
    content: 'function createOrUpdateImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, immutabilityPeriodSinceCreationInDays: number, options: Object, callback: ServiceCallback<ImmutabilityPolicy>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: immutabilityPeriodSinceCreationInDays
      type:
      - number
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.createOrUpdateImmutabilityPolicyWithHttpOperationResponse
  name: createOrUpdateImmutabilityPolicyWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: 作成またはロックされた不変ポリシーを更新します。 指定されたが、この操作は必要ありません、If-match 内の ETag が受け入れられます。
  syntax:
    content: 'function createOrUpdateImmutabilityPolicyWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, immutabilityPeriodSinceCreationInDays: number, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        ユーザーのサブスクリプション内のリソース グループの名前。 名前は、大文字と小文字を区別しません。
    - id: accountName
      type:
      - string
      description: >
        指定されたリソース グループ内のストレージ アカウントの名前。 ストレージ アカウント名の長さは 3 ～ 24 文字で、数字と小文字のみを使用する必要があります。
    - id: containerName
      type:
      - string
      description: >
        指定されたストレージ アカウント内の blob コンテナーの名前。 Blob コンテナー名は、長さ 3 ~ 63 文字でなければし、数字、小文字、およびダッシュ (-) のみを使用する必要があります。

        すべてのダッシュ (-) 文字は、すぐに前し、後にアルファベットまたは数字をする必要があります。
    - id: immutabilityPeriodSinceCreationInDays
      type:
      - number
      description: >
        日以内に、ポリシーが作成されてからコンテナー内の blob の不変性期間。
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.ImmutabilityPolicy>>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.createWithHttpOperationResponse
  name: createWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: 要求本文での説明に従って、指定されたアカウントの新しいコンテナーを作成します。 コンテナーのリソースには、そのコンテナーのメタデータとプロパティが含まれています。 これは、コンテナーに含まれる blob の一覧には含まれません。
  syntax:
    content: 'function createWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        ユーザーのサブスクリプション内のリソース グループの名前。 名前は、大文字と小文字を区別しません。
    - id: accountName
      type:
      - string
      description: >
        指定されたリソース グループ内のストレージ アカウントの名前。 ストレージ アカウント名の長さは 3 ～ 24 文字で、数字と小文字のみを使用する必要があります。
    - id: containerName
      type:
      - string
      description: >
        指定されたストレージ アカウント内の blob コンテナーの名前。 Blob コンテナー名は、長さ 3 ~ 63 文字でなければし、数字、小文字、およびダッシュ (-) のみを使用する必要があります。

        すべてのダッシュ (-) 文字は、すぐに前し、後にアルファベットまたは数字をする必要があります。
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.BlobContainer>>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.deleteImmutabilityPolicy_1
  name: deleteImmutabilityPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: ロックされた不変ポリシーを中止します。 削除の応答が、immutabilityPeriodSinceCreationInDays を 0 に設定します。 ETag が If-match では、この操作に必要です。 ロックされた不変ポリシーの削除は許可されませんは、コンテナー内のすべての blob を削除した後、コンテナーを削除するしかありません。
  syntax:
    content: 'function deleteImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, callback: ServiceCallback<ImmutabilityPolicy>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: ifMatch
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.deleteImmutabilityPolicy
  name: deleteImmutabilityPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: ロックされた不変ポリシーを中止します。 削除の応答が、immutabilityPeriodSinceCreationInDays を 0 に設定します。 ETag が If-match では、この操作に必要です。 ロックされた不変ポリシーの削除は許可されませんは、コンテナー内のすべての blob を削除した後、コンテナーを削除するしかありません。
  syntax:
    content: 'function deleteImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        ユーザーのサブスクリプション内のリソース グループの名前。 名前は、大文字と小文字を区別しません。
    - id: accountName
      type:
      - string
      description: >
        指定されたリソース グループ内のストレージ アカウントの名前。 ストレージ アカウント名の長さは 3 ～ 24 文字で、数字と小文字のみを使用する必要があります。
    - id: containerName
      type:
      - string
      description: >
        指定されたストレージ アカウント内の blob コンテナーの名前。 Blob コンテナー名は、長さ 3 ~ 63 文字でなければし、数字、小文字、およびダッシュ (-) のみを使用する必要があります。

        すべてのダッシュ (-) 文字は、すぐに前し、後にアルファベットまたは数字をする必要があります。
    - id: ifMatch
      type:
      - string
      description: >
        不変ポリシーを更新するエンティティの状態 (ETag) バージョン。 値"*"操作の不変ポリシーが既に存在する場合にのみ適用できます。 省略した場合、この操作は常に適用します。
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.deleteImmutabilityPolicy_2
  name: deleteImmutabilityPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: ロックされた不変ポリシーを中止します。 削除の応答が、immutabilityPeriodSinceCreationInDays を 0 に設定します。 ETag が If-match では、この操作に必要です。 ロックされた不変ポリシーの削除は許可されませんは、コンテナー内のすべての blob を削除した後、コンテナーを削除するしかありません。
  syntax:
    content: 'function deleteImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, options: Object, callback: ServiceCallback<ImmutabilityPolicy>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: ifMatch
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.deleteImmutabilityPolicyWithHttpOperationResponse
  name: deleteImmutabilityPolicyWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ロックされた不変ポリシーを中止します。 削除の応答が、immutabilityPeriodSinceCreationInDays を 0 に設定します。 ETag が If-match では、この操作に必要です。 ロックされた不変ポリシーの削除は許可されませんは、コンテナー内のすべての blob を削除した後、コンテナーを削除するしかありません。
  syntax:
    content: 'function deleteImmutabilityPolicyWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        ユーザーのサブスクリプション内のリソース グループの名前。 名前は、大文字と小文字を区別しません。
    - id: accountName
      type:
      - string
      description: >
        指定されたリソース グループ内のストレージ アカウントの名前。 ストレージ アカウント名の長さは 3 ～ 24 文字で、数字と小文字のみを使用する必要があります。
    - id: containerName
      type:
      - string
      description: >
        指定されたストレージ アカウント内の blob コンテナーの名前。 Blob コンテナー名は、長さ 3 ~ 63 文字でなければし、数字、小文字、およびダッシュ (-) のみを使用する必要があります。

        すべてのダッシュ (-) 文字は、すぐに前し、後にアルファベットまたは数字をする必要があります。
    - id: ifMatch
      type:
      - string
      description: >
        不変ポリシーを更新するエンティティの状態 (ETag) バージョン。 値"*"操作の不変ポリシーが既に存在する場合にのみ適用できます。 省略した場合、この操作は常に適用します。
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.ImmutabilityPolicy>>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.deleteMethod
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: 指定されたそのアカウントでコンテナーを削除します。
  syntax:
    content: 'function deleteMethod(resourceGroupName: string, accountName: string, containerName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        ユーザーのサブスクリプション内のリソース グループの名前。 名前は、大文字と小文字を区別しません。
    - id: accountName
      type:
      - string
      description: >
        指定されたリソース グループ内のストレージ アカウントの名前。 ストレージ アカウント名の長さは 3 ～ 24 文字で、数字と小文字のみを使用する必要があります。
    - id: containerName
      type:
      - string
      description: >
        指定されたストレージ アカウント内の blob コンテナーの名前。 Blob コンテナー名は、長さ 3 ~ 63 文字でなければし、数字、小文字、およびダッシュ (-) のみを使用する必要があります。

        すべてのダッシュ (-) 文字は、すぐに前し、後にアルファベットまたは数字をする必要があります。
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.deleteMethod_1
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: 指定されたそのアカウントでコンテナーを削除します。
  syntax:
    content: 'function deleteMethod(resourceGroupName: string, accountName: string, containerName: string, callback: ServiceCallback<void>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.deleteMethod_2
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: 指定されたそのアカウントでコンテナーを削除します。
  syntax:
    content: 'function deleteMethod(resourceGroupName: string, accountName: string, containerName: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: 指定されたそのアカウントでコンテナーを削除します。
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        ユーザーのサブスクリプション内のリソース グループの名前。 名前は、大文字と小文字を区別しません。
    - id: accountName
      type:
      - string
      description: >
        指定されたリソース グループ内のストレージ アカウントの名前。 ストレージ アカウント名の長さは 3 ～ 24 文字で、数字と小文字のみを使用する必要があります。
    - id: containerName
      type:
      - string
      description: >
        指定されたストレージ アカウント内の blob コンテナーの名前。 Blob コンテナー名は、長さ 3 ~ 63 文字でなければし、数字、小文字、およびダッシュ (-) のみを使用する必要があります。

        すべてのダッシュ (-) 文字は、すぐに前し、後にアルファベットまたは数字をする必要があります。
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.extendImmutabilityPolicy
  name: extendImmutabilityPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: ロックされた immutabilityPolicy の immutabilityPeriodSinceCreationInDays を拡張します。 ロック済みポリシーで許可されている唯一のアクションは、この操作になります。 ETag が If-match では、この操作に必要です。
  syntax:
    content: 'function extendImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, immutabilityPeriodSinceCreationInDays: number, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        ユーザーのサブスクリプション内のリソース グループの名前。 名前は、大文字と小文字を区別しません。
    - id: accountName
      type:
      - string
      description: >
        指定されたリソース グループ内のストレージ アカウントの名前。 ストレージ アカウント名の長さは 3 ～ 24 文字で、数字と小文字のみを使用する必要があります。
    - id: containerName
      type:
      - string
      description: >
        指定されたストレージ アカウント内の blob コンテナーの名前。 Blob コンテナー名は、長さ 3 ~ 63 文字でなければし、数字、小文字、およびダッシュ (-) のみを使用する必要があります。

        すべてのダッシュ (-) 文字は、すぐに前し、後にアルファベットまたは数字をする必要があります。
    - id: ifMatch
      type:
      - string
      description: >
        不変ポリシーを更新するエンティティの状態 (ETag) バージョン。 値"*"操作の不変ポリシーが既に存在する場合にのみ適用できます。 省略した場合、この操作は常に適用します。
    - id: immutabilityPeriodSinceCreationInDays
      type:
      - number
      description: >
        日以内に、ポリシーが作成されてからコンテナー内の blob の不変性期間。
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.extendImmutabilityPolicy_1
  name: extendImmutabilityPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: ロックされた immutabilityPolicy の immutabilityPeriodSinceCreationInDays を拡張します。 ロック済みポリシーで許可されている唯一のアクションは、この操作になります。 ETag が If-match では、この操作に必要です。
  syntax:
    content: 'function extendImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, immutabilityPeriodSinceCreationInDays: number, callback: ServiceCallback<ImmutabilityPolicy>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: ifMatch
      type:
      - string
      description: ''
    - id: immutabilityPeriodSinceCreationInDays
      type:
      - number
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.extendImmutabilityPolicy_2
  name: extendImmutabilityPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: ロックされた immutabilityPolicy の immutabilityPeriodSinceCreationInDays を拡張します。 ロック済みポリシーで許可されている唯一のアクションは、この操作になります。 ETag が If-match では、この操作に必要です。
  syntax:
    content: 'function extendImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, immutabilityPeriodSinceCreationInDays: number, options: Object, callback: ServiceCallback<ImmutabilityPolicy>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: ifMatch
      type:
      - string
      description: ''
    - id: immutabilityPeriodSinceCreationInDays
      type:
      - number
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.extendImmutabilityPolicyWithHttpOperationResponse
  name: extendImmutabilityPolicyWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ロックされた immutabilityPolicy の immutabilityPeriodSinceCreationInDays を拡張します。 ロック済みポリシーで許可されている唯一のアクションは、この操作になります。 ETag が If-match では、この操作に必要です。
  syntax:
    content: 'function extendImmutabilityPolicyWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, immutabilityPeriodSinceCreationInDays: number, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        ユーザーのサブスクリプション内のリソース グループの名前。 名前は、大文字と小文字を区別しません。
    - id: accountName
      type:
      - string
      description: >
        指定されたリソース グループ内のストレージ アカウントの名前。 ストレージ アカウント名の長さは 3 ～ 24 文字で、数字と小文字のみを使用する必要があります。
    - id: containerName
      type:
      - string
      description: >
        指定されたストレージ アカウント内の blob コンテナーの名前。 Blob コンテナー名は、長さ 3 ~ 63 文字でなければし、数字、小文字、およびダッシュ (-) のみを使用する必要があります。

        すべてのダッシュ (-) 文字は、すぐに前し、後にアルファベットまたは数字をする必要があります。
    - id: ifMatch
      type:
      - string
      description: >
        不変ポリシーを更新するエンティティの状態 (ETag) バージョン。 値"*"操作の不変ポリシーが既に存在する場合にのみ適用できます。 省略した場合、この操作は常に適用します。
    - id: immutabilityPeriodSinceCreationInDays
      type:
      - number
      description: >
        日以内に、ポリシーが作成されてからコンテナー内の blob の不変性期間。
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.ImmutabilityPolicy>>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.get
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: 指定したコンテナーのプロパティを取得します。
  syntax:
    content: 'function get(resourceGroupName: string, accountName: string, containerName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        ユーザーのサブスクリプション内のリソース グループの名前。 名前は、大文字と小文字を区別しません。
    - id: accountName
      type:
      - string
      description: >
        指定されたリソース グループ内のストレージ アカウントの名前。 ストレージ アカウント名の長さは 3 ～ 24 文字で、数字と小文字のみを使用する必要があります。
    - id: containerName
      type:
      - string
      description: >
        指定されたストレージ アカウント内の blob コンテナーの名前。 Blob コンテナー名は、長さ 3 ~ 63 文字でなければし、数字、小文字、およびダッシュ (-) のみを使用する必要があります。

        すべてのダッシュ (-) 文字は、すぐに前し、後にアルファベットまたは数字をする必要があります。
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.BlobContainer>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.get_1
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: 指定したコンテナーのプロパティを取得します。
  syntax:
    content: 'function get(resourceGroupName: string, accountName: string, containerName: string, callback: ServiceCallback<BlobContainer>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.BlobContainer>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.BlobContainer>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.get_2
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: 指定したコンテナーのプロパティを取得します。
  syntax:
    content: 'function get(resourceGroupName: string, accountName: string, containerName: string, options: Object, callback: ServiceCallback<BlobContainer>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.BlobContainer>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.BlobContainer>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.getImmutabilityPolicy
  name: getImmutabilityPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: 対応する ETag 応答ヘッダーと本文のと共に既存の不変ポリシーを取得します。
  syntax:
    content: 'function getImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        ユーザーのサブスクリプション内のリソース グループの名前。 名前は、大文字と小文字を区別しません。
    - id: accountName
      type:
      - string
      description: >
        指定されたリソース グループ内のストレージ アカウントの名前。 ストレージ アカウント名の長さは 3 ～ 24 文字で、数字と小文字のみを使用する必要があります。
    - id: containerName
      type:
      - string
      description: >
        指定されたストレージ アカウント内の blob コンテナーの名前。 Blob コンテナー名は、長さ 3 ~ 63 文字でなければし、数字、小文字、およびダッシュ (-) のみを使用する必要があります。

        すべてのダッシュ (-) 文字は、すぐに前し、後にアルファベットまたは数字をする必要があります。
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.getImmutabilityPolicy_2
  name: getImmutabilityPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: 対応する ETag 応答ヘッダーと本文のと共に既存の不変ポリシーを取得します。
  syntax:
    content: 'function getImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, options: Object, callback: ServiceCallback<ImmutabilityPolicy>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.getImmutabilityPolicy_1
  name: getImmutabilityPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: 対応する ETag 応答ヘッダーと本文のと共に既存の不変ポリシーを取得します。
  syntax:
    content: 'function getImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, callback: ServiceCallback<ImmutabilityPolicy>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.getImmutabilityPolicyWithHttpOperationResponse
  name: getImmutabilityPolicyWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: 対応する ETag 応答ヘッダーと本文のと共に既存の不変ポリシーを取得します。
  syntax:
    content: 'function getImmutabilityPolicyWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        ユーザーのサブスクリプション内のリソース グループの名前。 名前は、大文字と小文字を区別しません。
    - id: accountName
      type:
      - string
      description: >
        指定されたリソース グループ内のストレージ アカウントの名前。 ストレージ アカウント名の長さは 3 ～ 24 文字で、数字と小文字のみを使用する必要があります。
    - id: containerName
      type:
      - string
      description: >
        指定されたストレージ アカウント内の blob コンテナーの名前。 Blob コンテナー名は、長さ 3 ~ 63 文字でなければし、数字、小文字、およびダッシュ (-) のみを使用する必要があります。

        すべてのダッシュ (-) 文字は、すぐに前し、後にアルファベットまたは数字をする必要があります。
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.ImmutabilityPolicy>>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.getWithHttpOperationResponse
  name: getWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: 指定したコンテナーのプロパティを取得します。
  syntax:
    content: 'function getWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        ユーザーのサブスクリプション内のリソース グループの名前。 名前は、大文字と小文字を区別しません。
    - id: accountName
      type:
      - string
      description: >
        指定されたリソース グループ内のストレージ アカウントの名前。 ストレージ アカウント名の長さは 3 ～ 24 文字で、数字と小文字のみを使用する必要があります。
    - id: containerName
      type:
      - string
      description: >
        指定されたストレージ アカウント内の blob コンテナーの名前。 Blob コンテナー名は、長さ 3 ~ 63 文字でなければし、数字、小文字、およびダッシュ (-) のみを使用する必要があります。

        すべてのダッシュ (-) 文字は、すぐに前し、後にアルファベットまたは数字をする必要があります。
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.BlobContainer>>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.list
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: すべてのコンテナーを一覧表示し、データ プレーンのようなプレフィックスをサポートしていません。 また SRP 今日は返されません継続トークン。
  syntax:
    content: 'function list(resourceGroupName: string, accountName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        ユーザーのサブスクリプション内のリソース グループの名前。 名前は、大文字と小文字を区別しません。
    - id: accountName
      type:
      - string
      description: >
        指定されたリソース グループ内のストレージ アカウントの名前。 ストレージ アカウント名の長さは 3 ～ 24 文字で、数字と小文字のみを使用する必要があります。
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.ListContainerItems>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.list_1
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: すべてのコンテナーを一覧表示し、データ プレーンのようなプレフィックスをサポートしていません。 また SRP 今日は返されません継続トークン。
  syntax:
    content: 'function list(resourceGroupName: string, accountName: string, callback: ServiceCallback<ListContainerItems>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ListContainerItems>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ListContainerItems>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.list_2
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: すべてのコンテナーを一覧表示し、データ プレーンのようなプレフィックスをサポートしていません。 また SRP 今日は返されません継続トークン。
  syntax:
    content: 'function list(resourceGroupName: string, accountName: string, options: Object, callback: ServiceCallback<ListContainerItems>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ListContainerItems>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ListContainerItems>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.listWithHttpOperationResponse
  name: listWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: すべてのコンテナーを一覧表示し、データ プレーンのようなプレフィックスをサポートしていません。 また SRP 今日は返されません継続トークン。
  syntax:
    content: 'function listWithHttpOperationResponse(resourceGroupName: string, accountName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        ユーザーのサブスクリプション内のリソース グループの名前。 名前は、大文字と小文字を区別しません。
    - id: accountName
      type:
      - string
      description: >
        指定されたリソース グループ内のストレージ アカウントの名前。 ストレージ アカウント名の長さは 3 ～ 24 文字で、数字と小文字のみを使用する必要があります。
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.ListContainerItems>>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.lockImmutabilityPolicy
  name: lockImmutabilityPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: ロック済み状態に、不変ポリシーを設定します。 ロック済みポリシーで許可されている唯一の操作は、ExtendImmutabilityPolicy 操作です。 ETag が If-match では、この操作に必要です。
  syntax:
    content: 'function lockImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        ユーザーのサブスクリプション内のリソース グループの名前。 名前は、大文字と小文字を区別しません。
    - id: accountName
      type:
      - string
      description: >
        指定されたリソース グループ内のストレージ アカウントの名前。 ストレージ アカウント名の長さは 3 ～ 24 文字で、数字と小文字のみを使用する必要があります。
    - id: containerName
      type:
      - string
      description: >
        指定されたストレージ アカウント内の blob コンテナーの名前。 Blob コンテナー名は、長さ 3 ~ 63 文字でなければし、数字、小文字、およびダッシュ (-) のみを使用する必要があります。

        すべてのダッシュ (-) 文字は、すぐに前し、後にアルファベットまたは数字をする必要があります。
    - id: ifMatch
      type:
      - string
      description: >
        不変ポリシーを更新するエンティティの状態 (ETag) バージョン。 値"*"操作の不変ポリシーが既に存在する場合にのみ適用できます。 省略した場合、この操作は常に適用します。
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.lockImmutabilityPolicy_1
  name: lockImmutabilityPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: ロック済み状態に、不変ポリシーを設定します。 ロック済みポリシーで許可されている唯一の操作は、ExtendImmutabilityPolicy 操作です。 ETag が If-match では、この操作に必要です。
  syntax:
    content: 'function lockImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, callback: ServiceCallback<ImmutabilityPolicy>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: ifMatch
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.lockImmutabilityPolicy_2
  name: lockImmutabilityPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: ロック済み状態に、不変ポリシーを設定します。 ロック済みポリシーで許可されている唯一の操作は、ExtendImmutabilityPolicy 操作です。 ETag が If-match では、この操作に必要です。
  syntax:
    content: 'function lockImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, options: Object, callback: ServiceCallback<ImmutabilityPolicy>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: ifMatch
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.lockImmutabilityPolicyWithHttpOperationResponse
  name: lockImmutabilityPolicyWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ロック済み状態に、不変ポリシーを設定します。 ロック済みポリシーで許可されている唯一の操作は、ExtendImmutabilityPolicy 操作です。 ETag が If-match では、この操作に必要です。
  syntax:
    content: 'function lockImmutabilityPolicyWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        ユーザーのサブスクリプション内のリソース グループの名前。 名前は、大文字と小文字を区別しません。
    - id: accountName
      type:
      - string
      description: >
        指定されたリソース グループ内のストレージ アカウントの名前。 ストレージ アカウント名の長さは 3 ～ 24 文字で、数字と小文字のみを使用する必要があります。
    - id: containerName
      type:
      - string
      description: >
        指定されたストレージ アカウント内の blob コンテナーの名前。 Blob コンテナー名は、長さ 3 ~ 63 文字でなければし、数字、小文字、およびダッシュ (-) のみを使用する必要があります。

        すべてのダッシュ (-) 文字は、すぐに前し、後にアルファベットまたは数字をする必要があります。
    - id: ifMatch
      type:
      - string
      description: >
        不変ポリシーを更新するエンティティの状態 (ETag) バージョン。 値"*"操作の不変ポリシーが既に存在する場合にのみ適用できます。 省略した場合、この操作は常に適用します。
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.ImmutabilityPolicy>>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.setLegalHold
  name: setLegalHold
  children: []
  type: method
  langs:
  - typeScript
  summary: 有効なセットは、タグを保持します。 べき等操作で同じタグ結果を設定します。 SetLegalHold は、追加のパターンに従うし、要求で指定されていない既存のタグをクリア アウトできません。
  syntax:
    content: 'function setLegalHold(resourceGroupName: string, accountName: string, containerName: string, tags: string[], options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        ユーザーのサブスクリプション内のリソース グループの名前。 名前は、大文字と小文字を区別しません。
    - id: accountName
      type:
      - string
      description: >
        指定されたリソース グループ内のストレージ アカウントの名前。 ストレージ アカウント名の長さは 3 ～ 24 文字で、数字と小文字のみを使用する必要があります。
    - id: containerName
      type:
      - string
      description: >
        指定されたストレージ アカウント内の blob コンテナーの名前。 Blob コンテナー名は、長さ 3 ~ 63 文字でなければし、数字、小文字、およびダッシュ (-) のみを使用する必要があります。

        すべてのダッシュ (-) 文字は、すぐに前し、後にアルファベットまたは数字をする必要があります。
    - id: tags
      type:
      - string[]
      description: >
        各タグは 3 ~ 23 文字の英数字にする必要があり、SRP で大文字と小文字に正規化されます。
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.LegalHold>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.setLegalHold_1
  name: setLegalHold
  children: []
  type: method
  langs:
  - typeScript
  summary: 有効なセットは、タグを保持します。 べき等操作で同じタグ結果を設定します。 SetLegalHold は、追加のパターンに従うし、要求で指定されていない既存のタグをクリア アウトできません。
  syntax:
    content: 'function setLegalHold(resourceGroupName: string, accountName: string, containerName: string, tags: string[], callback: ServiceCallback<LegalHold>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: tags
      type:
      - string[]
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.LegalHold>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.LegalHold>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.setLegalHold_2
  name: setLegalHold
  children: []
  type: method
  langs:
  - typeScript
  summary: 有効なセットは、タグを保持します。 べき等操作で同じタグ結果を設定します。 SetLegalHold は、追加のパターンに従うし、要求で指定されていない既存のタグをクリア アウトできません。
  syntax:
    content: 'function setLegalHold(resourceGroupName: string, accountName: string, containerName: string, tags: string[], options: Object, callback: ServiceCallback<LegalHold>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: tags
      type:
      - string[]
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.LegalHold>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.LegalHold>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.setLegalHoldWithHttpOperationResponse
  name: setLegalHoldWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: 有効なセットは、タグを保持します。 べき等操作で同じタグ結果を設定します。 SetLegalHold は、追加のパターンに従うし、要求で指定されていない既存のタグをクリア アウトできません。
  syntax:
    content: 'function setLegalHoldWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, tags: string[], options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        ユーザーのサブスクリプション内のリソース グループの名前。 名前は、大文字と小文字を区別しません。
    - id: accountName
      type:
      - string
      description: >
        指定されたリソース グループ内のストレージ アカウントの名前。 ストレージ アカウント名の長さは 3 ～ 24 文字で、数字と小文字のみを使用する必要があります。
    - id: containerName
      type:
      - string
      description: >
        指定されたストレージ アカウント内の blob コンテナーの名前。 Blob コンテナー名は、長さ 3 ~ 63 文字でなければし、数字、小文字、およびダッシュ (-) のみを使用する必要があります。

        すべてのダッシュ (-) 文字は、すぐに前し、後にアルファベットまたは数字をする必要があります。
    - id: tags
      type:
      - string[]
      description: >
        各タグは 3 ~ 23 文字の英数字にする必要があり、SRP で大文字と小文字に正規化されます。
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.LegalHold>>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.update
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: 要求本文で指定されているコンテナーのプロパティを更新します。 要求内に記載されていないプロパティは変更されません。 指定されたコンテナーが既に存在しない場合、更新が失敗します。
  syntax:
    content: 'function update(resourceGroupName: string, accountName: string, containerName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        ユーザーのサブスクリプション内のリソース グループの名前。 名前は、大文字と小文字を区別しません。
    - id: accountName
      type:
      - string
      description: >
        指定されたリソース グループ内のストレージ アカウントの名前。 ストレージ アカウント名の長さは 3 ～ 24 文字で、数字と小文字のみを使用する必要があります。
    - id: containerName
      type:
      - string
      description: >
        指定されたストレージ アカウント内の blob コンテナーの名前。 Blob コンテナー名は、長さ 3 ~ 63 文字でなければし、数字、小文字、およびダッシュ (-) のみを使用する必要があります。

        すべてのダッシュ (-) 文字は、すぐに前し、後にアルファベットまたは数字をする必要があります。
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.BlobContainer>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.update_1
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: 要求本文で指定されているコンテナーのプロパティを更新します。 要求内に記載されていないプロパティは変更されません。 指定されたコンテナーが既に存在しない場合、更新が失敗します。
  syntax:
    content: 'function update(resourceGroupName: string, accountName: string, containerName: string, callback: ServiceCallback<BlobContainer>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.BlobContainer>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.BlobContainer>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.update_2
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: 要求本文で指定されているコンテナーのプロパティを更新します。 要求内に記載されていないプロパティは変更されません。 指定されたコンテナーが既に存在しない場合、更新が失敗します。
  syntax:
    content: 'function update(resourceGroupName: string, accountName: string, containerName: string, options: Object, callback: ServiceCallback<BlobContainer>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.BlobContainer>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.BlobContainer>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.updateWithHttpOperationResponse
  name: updateWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: 要求本文で指定されているコンテナーのプロパティを更新します。 要求内に記載されていないプロパティは変更されません。 指定されたコンテナーが既に存在しない場合、更新が失敗します。
  syntax:
    content: 'function updateWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        ユーザーのサブスクリプション内のリソース グループの名前。 名前は、大文字と小文字を区別しません。
    - id: accountName
      type:
      - string
      description: >
        指定されたリソース グループ内のストレージ アカウントの名前。 ストレージ アカウント名の長さは 3 ～ 24 文字で、数字と小文字のみを使用する必要があります。
    - id: containerName
      type:
      - string
      description: >
        指定されたストレージ アカウント内の blob コンテナーの名前。 Blob コンテナー名は、長さ 3 ~ 63 文字でなければし、数字、小文字、およびダッシュ (-) のみを使用する必要があります。

        すべてのダッシュ (-) 文字は、すぐに前し、後にアルファベットまたは数字をする必要があります。
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.BlobContainer>>
  package: azure-arm-storage
references:
- uid: Promise<azure-arm-storage.LegalHold>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: LegalHold
    fullName: LegalHold
    uid: azure-arm-storage.LegalHold
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-storage.LegalHold>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: LegalHold
    fullName: LegalHold
    uid: azure-arm-storage.LegalHold
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-storage.LegalHold>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: LegalHold
    fullName: LegalHold
    uid: azure-arm-storage.LegalHold
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-storage.BlobContainer>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: BlobContainer
    fullName: BlobContainer
    uid: azure-arm-storage.BlobContainer
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-storage.BlobContainer>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: BlobContainer
    fullName: BlobContainer
    uid: azure-arm-storage.BlobContainer
  - name: '>'
    fullName: '>'
- uid: Promise<azure-arm-storage.ImmutabilityPolicy>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ImmutabilityPolicy
    fullName: ImmutabilityPolicy
    uid: azure-arm-storage.ImmutabilityPolicy
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ImmutabilityPolicy
    fullName: ImmutabilityPolicy
    uid: azure-arm-storage.ImmutabilityPolicy
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-storage.ImmutabilityPolicy>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ImmutabilityPolicy
    fullName: ImmutabilityPolicy
    uid: azure-arm-storage.ImmutabilityPolicy
  - name: '>>'
    fullName: '>>'
- uid: Promise<HttpOperationResponse<azure-arm-storage.BlobContainer>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: BlobContainer
    fullName: BlobContainer
    uid: azure-arm-storage.BlobContainer
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-storage.ListContainerItems>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ListContainerItems
    fullName: ListContainerItems
    uid: azure-arm-storage.ListContainerItems
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-storage.ListContainerItems>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ListContainerItems
    fullName: ListContainerItems
    uid: azure-arm-storage.ListContainerItems
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-storage.ListContainerItems>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ListContainerItems
    fullName: ListContainerItems
    uid: azure-arm-storage.ListContainerItems
  - name: '>>'
    fullName: '>>'
