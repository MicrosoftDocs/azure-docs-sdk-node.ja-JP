### YamlMime:UniversalReference
ms.openlocfilehash: 62975cd56b2bf89e7158907fce365b3a6cebdf51
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 08/12/2018
ms.locfileid: "40066375"
items:
- uid: azure-iothub.Client
  name: Client
  fullName: Client
  children:
  - azure-iothub.Client.Callback
  - azure-iothub.Client.close
  - azure-iothub.Client.fromConnectionString
  - azure-iothub.Client.fromSharedAccessSignature
  - azure-iothub.Client.getFeedbackReceiver
  - azure-iothub.Client.getFileNotificationReceiver
  - azure-iothub.Client.invokeDeviceMethod
  - azure-iothub.Client.invokeDeviceMethod_1
  - azure-iothub.Client.open
  - azure-iothub.Client.send
  - azure-iothub.Client.setRetryPolicy
  - azure-iothub.Client.TransportCtor
  langs:
  - typeScript
  type: class
  summary: >
    <span data-ttu-id="a5161-101">IoT Hub サービス クライアントは、Azure IoT hub を介してデバイスとの通信に使用されます。</span><span class="sxs-lookup"><span data-stu-id="a5161-101">The IoT Hub service client is used to communicate with devices through an Azure IoT hub.</span></span>

    <span data-ttu-id="a5161-102">これにより、SDK ユーザー。</span><span class="sxs-lookup"><span data-stu-id="a5161-102">It lets the SDK user:</span></span>
      - <span data-ttu-id="a5161-103">デバイスからクラウド (コマンドとも呼ばれます) をデバイスに送信します。 コマンドは IoT Hub でキューにあり、デバイスが接続されている場合にのみ非同期的に配信します。</span><span class="sxs-lookup"><span data-stu-id="a5161-103">send device-to-cloud (also known as commands) to devices: commands are queued on IoT Hub and delivered asynchronously only when the device is connected.</span></span> <span data-ttu-id="a5161-104">50 個のみのコマンドは、デバイスごとキューに登録できます。</span><span class="sxs-lookup"><span data-stu-id="a5161-104">Only 50 commands can be queued per device.</span></span>
      - <span data-ttu-id="a5161-105">デバイスでダイレクト メソッドを呼び出す (デバイスが現在接続されている場合にのみ機能しますこれは、デバイスとの通信の同期方法)。</span><span class="sxs-lookup"><span data-stu-id="a5161-105">invoke direct methods on devices (which will work only if the device is currently connected: it's a synchronous way of communicating with the device)</span></span>
      - <span data-ttu-id="a5161-106">前のコマンドをデバイスから送信されたフィードバック メッセージをリッスンします。</span><span class="sxs-lookup"><span data-stu-id="a5161-106">listen for feedback messages sent by devices for previous commands.</span></span>
      - <span data-ttu-id="a5161-107">デバイスからファイル アップロード通知をリッスンします。</span><span class="sxs-lookup"><span data-stu-id="a5161-107">listen for file upload notifications from devices.</span></span>
    <span data-ttu-id="a5161-108">ユーザーが新規に作成する必要があります<xref:azure-iothub.Client>、ファクトリ メソッドのいずれかを呼び出してインスタンス[fromConnectionString](xref:azure-iothub.Client.fromConnectionString)または[fromSharedAccessSignature](xref:azure-iothub.Client.fromSharedAccessSignature)、IoT Hub サービス クライアントを作成します。</span><span class="sxs-lookup"><span data-stu-id="a5161-108">Users should create new <xref:azure-iothub.Client> instances by calling one of the factory methods, [fromConnectionString](xref:azure-iothub.Client.fromConnectionString) or [fromSharedAccessSignature](xref:azure-iothub.Client.fromSharedAccessSignature), to create an IoT Hub service Client.</span></span>
  extends:
    name: EventEmitter
  package: azure-iothub
- uid: azure-iothub.Client.Callback
  name: Callback
  fullName: Callback<T>
  children: []
  langs:
  - typeScript
  type: class
  summary: "\n"
  package: azure-iothub
- uid: azure-iothub.Client.close
  name: close
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a5161-109">IoT hub への接続を閉じます。</span><span class="sxs-lookup"><span data-stu-id="a5161-109">Closes the connection to an IoT hub.</span></span>
  syntax:
    content: 'function close(done?: Callback<Disconnected>)'
    parameters:
    - id: done
      type:
      - azure-iothub.Client.Callback<Disconnected>
      description: >
        <span data-ttu-id="a5161-110">操作が完了したときに呼び出す関数。</span><span class="sxs-lookup"><span data-stu-id="a5161-110">The function to call when the operation is complete.</span></span> <span data-ttu-id="a5161-111">`done` 操作が正常に完了した場合は null になりますエラー オブジェクト引数を渡されます。</span><span class="sxs-lookup"><span data-stu-id="a5161-111">`done` will be passed an Error object argument, which will be null if the operation completed successfully.</span></span>
      optional: true
  package: azure-iothub
- uid: azure-iothub.Client.fromConnectionString
  name: fromConnectionString
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a5161-112">既定のトランスポート (Amqp) または 2 番目の引数で指定された 1 つを使用して、特定の接続文字列から、IoT Hub サービス クライアントを作成します。</span><span class="sxs-lookup"><span data-stu-id="a5161-112">Creates an IoT Hub service client from the given connection string using the default transport (Amqp) or the one specified in the second argument.</span></span>
  syntax:
    content: 'static function fromConnectionString(connStr: string, transportCtor?: Client.TransportCtor)'
    parameters:
    - id: connStr
      type:
      - string
      description: <span data-ttu-id="a5161-113">IoT hub での「デバイスの接続」アクセス許可をカプセル化されている接続文字列。</span><span class="sxs-lookup"><span data-stu-id="a5161-113">A connection string which encapsulates "device connect" permissions on an IoT hub.</span></span>
    - id: transportCtor
      type:
      - azure-iothub.Client.TransportCtor
      description: ''
      optional: true
    return:
      type:
      - azure-iothub.Client
  package: azure-iothub
- uid: azure-iothub.Client.fromSharedAccessSignature
  name: fromSharedAccessSignature
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a5161-114">既定のトランスポート (Amqp) または 2 番目の引数で指定されたいずれかを使用して、特定の共有アクセス署名から、IoT Hub サービス クライアントを作成します。</span><span class="sxs-lookup"><span data-stu-id="a5161-114">Creates an IoT Hub service client from the given shared access signature using the default transport (Amqp) or the one specified in the second argument.</span></span>
  syntax:
    content: 'static function fromSharedAccessSignature(sharedAccessSignature: string, transportCtor?: Client.TransportCtor)'
    parameters:
    - id: sharedAccessSignature
      type:
      - string
      description: <span data-ttu-id="a5161-115">IoT hub での「サービス接続」アクセス許可をカプセル化されている共有アクセス署名を指定します。</span><span class="sxs-lookup"><span data-stu-id="a5161-115">A shared access signature which encapsulates "service connect" permissions on an IoT hub.</span></span>
    - id: transportCtor
      type:
      - azure-iothub.Client.TransportCtor
      description: ''
      optional: true
    return:
      type:
      - azure-iothub.Client
  package: azure-iothub
- uid: azure-iothub.Client.getFeedbackReceiver
  name: getFeedbackReceiver
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a5161-116">新しいフィードバック メッセージがクライアントから受信したときにイベントを生成する AmqpReceiver オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="a5161-116">Returns a AmqpReceiver object which emits events when new feedback messages are received by the client.</span></span>
  syntax:
    content: 'function getFeedbackReceiver(done: Callback<ServiceReceiver>)'
    parameters:
    - id: done
      type:
      - azure-iothub.Client.Callback<azure-iothub.Client.ServiceReceiver>
      description: >
        <span data-ttu-id="a5161-117">操作が完了したときに呼び出す関数。</span><span class="sxs-lookup"><span data-stu-id="a5161-117">The function to call when the operation is complete.</span></span> <span data-ttu-id="a5161-118">`done` 2 つの引数で呼び出されます。 (null にすることができます)、エラー オブジェクトと AmqpReceiver オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a5161-118">`done` will be called with two arguments: an Error object (can be null) and a AmqpReceiver object.</span></span>
  package: azure-iothub
- uid: azure-iothub.Client.getFileNotificationReceiver
  name: getFileNotificationReceiver
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a5161-119">クライアントが新しいファイルのアップロード通知を受信するときにイベントを生成する AmqpReceiver オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="a5161-119">Returns a AmqpReceiver object which emits events when new file upload notifications are received by the client.</span></span>
  syntax:
    content: 'function getFileNotificationReceiver(done: Callback<ServiceReceiver>)'
    parameters:
    - id: done
      type:
      - azure-iothub.Client.Callback<azure-iothub.Client.ServiceReceiver>
      description: >
        <span data-ttu-id="a5161-120">操作が完了したときに呼び出す関数。</span><span class="sxs-lookup"><span data-stu-id="a5161-120">The function to call when the operation is complete.</span></span> <span data-ttu-id="a5161-121">`done` 2 つの引数で呼び出されます。 (null にすることができます)、エラー オブジェクトと AmqpReceiver オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a5161-121">`done` will be called with two arguments: an Error object (can be null) and a AmqpReceiver object.</span></span>
  package: azure-iothub
- uid: azure-iothub.Client.invokeDeviceMethod
  name: invokeDeviceMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a5161-122">特定のデバイスまたはモジュールのメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="a5161-122">Invokes a method on a particular device or module.</span></span>
  syntax:
    content: 'function invokeDeviceMethod(deviceId: string, methodParams: DeviceMethodParams, done?: Callback<any>)'
    parameters:
    - id: deviceId
      type:
      - string
      description: <span data-ttu-id="a5161-123">既存のデバイス id の識別子。</span><span class="sxs-lookup"><span data-stu-id="a5161-123">The identifier of an existing device identity.</span></span>
    - id: methodParams
      type:
      - azure-iothub.DeviceMethodParams
      description: ''
    - id: done
      type:
      - azure-iothub.Client.Callback<any>
      description: >
        <span data-ttu-id="a5161-124">メソッドの実行の結果と呼び出すコールバック。</span><span class="sxs-lookup"><span data-stu-id="a5161-124">The callback to call with the result of the method execution.</span></span>
      optional: true
  package: azure-iothub
- uid: azure-iothub.Client.invokeDeviceMethod_1
  name: invokeDeviceMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a5161-125">特定のデバイスまたはモジュールのメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="a5161-125">Invokes a method on a particular device or module.</span></span>
  syntax:
    content: 'function invokeDeviceMethod(deviceId: string, moduleId: string, methodParams: DeviceMethodParams, done?: Callback<any>)'
    parameters:
    - id: deviceId
      type:
      - string
      description: ''
    - id: moduleId
      type:
      - string
      description: ''
    - id: methodParams
      type:
      - azure-iothub.DeviceMethodParams
      description: ''
    - id: done
      type:
      - azure-iothub.Client.Callback<any>
      description: ''
      optional: true
  package: azure-iothub
- uid: azure-iothub.Client.open
  name: open
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a5161-126">IoT hub への接続を開きます。</span><span class="sxs-lookup"><span data-stu-id="a5161-126">Opens the connection to an IoT hub.</span></span>
  syntax:
    content: 'function open(done?: Callback<Connected>)'
    parameters:
    - id: done
      type:
      - azure-iothub.Client.Callback<Connected>
      description: >
        <span data-ttu-id="a5161-127">操作が完了したときに呼び出す関数。</span><span class="sxs-lookup"><span data-stu-id="a5161-127">The function to call when the operation is complete.</span></span> <span data-ttu-id="a5161-128">`done` 操作が正常に完了した場合は null になりますエラー オブジェクト引数を渡されます。</span><span class="sxs-lookup"><span data-stu-id="a5161-128">`done` will be passed an Error object argument, which will be null if the operation completed successfully.</span></span>
      optional: true
  package: azure-iothub
- uid: azure-iothub.Client.send
  name: send
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a5161-129">デバイスにメッセージを送信します。</span><span class="sxs-lookup"><span data-stu-id="a5161-129">Sends a message to a device.</span></span>
  syntax:
    content: 'function send(deviceId: string, message: Message | Message.BufferConvertible, done?: Callback<MessageEnqueued>)'
    parameters:
    - id: deviceId
      type:
      - string
      description: <span data-ttu-id="a5161-130">既存のデバイス id の識別子。</span><span class="sxs-lookup"><span data-stu-id="a5161-130">The identifier of an existing device identity.</span></span>
    - id: message
      type:
      - Message | Message.BufferConvertible
      description: >-
        <span data-ttu-id="a5161-131">デバイスに送信するメッセージの本文。</span><span class="sxs-lookup"><span data-stu-id="a5161-131">The body of the message to send to the device.</span></span>

        <span data-ttu-id="a5161-132">場合`message`の型が[メッセージ](xref:azure-iot-common.Message)、変換されます。</span><span class="sxs-lookup"><span data-stu-id="a5161-132">If `message` is not of type [Message](xref:azure-iot-common.Message), it will be converted.</span></span>
    - id: done
      type:
      - azure-iothub.Client.Callback<MessageEnqueued>
      description: >
        <span data-ttu-id="a5161-133">操作が完了したときに呼び出す関数。</span><span class="sxs-lookup"><span data-stu-id="a5161-133">The function to call when the operation is complete.</span></span> <span data-ttu-id="a5161-134">`done` 2 つの引数で呼び出されます。 (null にすることができます)、エラー オブジェクトと、トランスポート固有の応答オブジェクトのログの記録やデバッグに便利です。</span><span class="sxs-lookup"><span data-stu-id="a5161-134">`done` will be called with two arguments: an Error object (can be null) and a transport-specific response object useful for logging or debugging.</span></span>
      optional: true
  package: azure-iothub
- uid: azure-iothub.Client.setRetryPolicy
  name: setRetryPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a5161-135">ネットワーク操作を再試行するクライアントによって使用されるポリシーを設定します。</span><span class="sxs-lookup"><span data-stu-id="a5161-135">Set the policy used by the client to retry network operations.</span></span>
  syntax:
    content: 'function setRetryPolicy(policy: RetryPolicy)'
    parameters:
    - id: policy
      type:
      - RetryPolicy
      description: >
        <span data-ttu-id="a5161-136">(例: 操作を再試行するために使用するポリシー</span><span class="sxs-lookup"><span data-stu-id="a5161-136">policy used to retry operations (eg.</span></span> <span data-ttu-id="a5161-137">開く、送信など)。</span><span class="sxs-lookup"><span data-stu-id="a5161-137">open, send, etc.).</span></span>

        <span data-ttu-id="a5161-138">SDK には、2 つの「組み込み」ポリシー: ExponentialBackoffWithJitter (既定値) と NoRetry (のすべての再試行を取り消す) にします。</span><span class="sxs-lookup"><span data-stu-id="a5161-138">The SDK comes with 2 "built-in" policies: ExponentialBackoffWithJitter (default) and NoRetry (to cancel any form of retry).</span></span> <span data-ttu-id="a5161-139">2 つのメソッドを実装している限り、ユーザーは独自のオブジェクトを渡すこともことができます:-shouldRetry(err: Error): ブール: エラーの種類 - nextRetryTimeout に基づいて操作を再試行する必要があるかどうかを示します (retryCount: 数、調整: ブール値): 番号: を返します、回数 (retryCount) か、エラーが調整エラーがあるという事実の過去数に基づいています (ミリ秒単位) を再試行する前に待機する時間。</span><span class="sxs-lookup"><span data-stu-id="a5161-139">The user can also pass its own object as long as it implements 2 methods: - shouldRetry(err: Error): boolean : indicates whether an operation should be retried based on the error type - nextRetryTimeout(retryCount: number, throttled: boolean): number : returns the time to wait (in milliseconds) before retrying based on the past number of attempts (retryCount) and the fact that the error is a throttling error or not.</span></span>
  package: azure-iothub
- uid: azure-iothub.Client.TransportCtor
  name: TransportCtor
  fullName: TransportCtor
  children: []
  langs:
  - typeScript
  type: class
  summary: "\n"
  package: azure-iothub
references:
- uid: azure-iothub.Client.Callback<MessageAbandoned>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <MessageAbandoned>
    fullName: <MessageAbandoned>
- uid: azure-iothub.Client.Callback<MessageCompleted>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <MessageCompleted>
    fullName: <MessageCompleted>
- uid: azure-iothub.Client.Callback<MessageRejected>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <MessageRejected>
    fullName: <MessageRejected>
- uid: azure-iothub.Client.Callback<Connected>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <Connected>
    fullName: <Connected>
- uid: azure-iothub.Client.Callback<Disconnected>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <Disconnected>
    fullName: <Disconnected>
- uid: azure-iothub.Client.Callback<azure-iothub.Client.ServiceReceiver>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <
    fullName: <
  - name: ServiceReceiver
    fullName: ServiceReceiver
    uid: azure-iothub.Client.ServiceReceiver
  - name: '>'
    fullName: '>'
- uid: azure-iothub.Client.Callback<MessageEnqueued>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <MessageEnqueued>
    fullName: <MessageEnqueued>
- uid: azure-iothub.DeviceMethodParams
  spec.typeScript:
  - name: DeviceMethodParams
    fullName: DeviceMethodParams
    uid: azure-iothub.DeviceMethodParams
- uid: azure-iothub.Client.Callback<any>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <any>
    fullName: <any>
- uid: azure-iothub.Client.TransportCtor
  spec.typeScript:
  - name: TransportCtor
    fullName: TransportCtor
    uid: azure-iothub.Client.TransportCtor
- uid: azure-iothub.Client
  spec.typeScript:
  - name: Client
    fullName: Client
    uid: azure-iothub.Client
