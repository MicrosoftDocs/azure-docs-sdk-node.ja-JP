### YamlMime:UniversalReference
items:
  - uid: azure-arm-keyvault.VaultListResult
    name: VaultListResult
    fullName: VaultListResult
    children:
      - azure-arm-keyvault.VaultListResult.Array
      - azure-arm-keyvault.VaultListResult.concat
      - azure-arm-keyvault.VaultListResult.concat_1
      - azure-arm-keyvault.VaultListResult.every
      - azure-arm-keyvault.VaultListResult.filter_1
      - azure-arm-keyvault.VaultListResult.filter
      - azure-arm-keyvault.VaultListResult.forEach
      - azure-arm-keyvault.VaultListResult.indexOf
      - azure-arm-keyvault.VaultListResult.join
      - azure-arm-keyvault.VaultListResult.lastIndexOf
      - azure-arm-keyvault.VaultListResult.length
      - azure-arm-keyvault.VaultListResult.map
      - azure-arm-keyvault.VaultListResult.nextLink
      - azure-arm-keyvault.VaultListResult.pop
      - azure-arm-keyvault.VaultListResult.push
      - azure-arm-keyvault.VaultListResult.reduce_2
      - azure-arm-keyvault.VaultListResult.reduce
      - azure-arm-keyvault.VaultListResult.reduce_1
      - azure-arm-keyvault.VaultListResult.reduceRight_2
      - azure-arm-keyvault.VaultListResult.reduceRight
      - azure-arm-keyvault.VaultListResult.reduceRight_1
      - azure-arm-keyvault.VaultListResult.reverse
      - azure-arm-keyvault.VaultListResult.shift
      - azure-arm-keyvault.VaultListResult.slice
      - azure-arm-keyvault.VaultListResult.some
      - azure-arm-keyvault.VaultListResult.sort
      - azure-arm-keyvault.VaultListResult.splice
      - azure-arm-keyvault.VaultListResult.splice_1
      - azure-arm-keyvault.VaultListResult.toLocaleString
      - azure-arm-keyvault.VaultListResult.toString
      - azure-arm-keyvault.VaultListResult.unshift
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: Array<azure-arm-keyvault.Vault>
    package: azure-arm-keyvault
  - uid: azure-arm-keyvault.VaultListResult.Array
    name: Array
    fullName: Array
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Array: ArrayConstructor'
      return:
        type:
          - ArrayConstructor
    package: azure-arm-keyvault
  - uid: azure-arm-keyvault.VaultListResult.concat
    name: 'concat(ConcatArray<Vault>[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e3a59-101">2 つ以上の配列を結合します。</span><span class="sxs-lookup"><span data-stu-id="e3a59-101">Combines two or more arrays.</span></span>
    syntax:
      content: 'function concat(items: ConcatArray<Vault>[])'
      parameters:
        - id: items
          type:
            - 'ConcatArray<azure-arm-keyvault.Vault>[]'
          description: |
            <span data-ttu-id="e3a59-102">配列 1 の末尾に追加する項目。</span><span class="sxs-lookup"><span data-stu-id="e3a59-102">Additional items to add to the end of array1.</span></span>
      return:
        type:
          - 'azure-arm-keyvault.Vault[]'
    package: azure-arm-keyvault
  - uid: azure-arm-keyvault.VaultListResult.concat_1
    name: 'concat(T | ConcatArray<T>[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e3a59-103">2 つ以上の配列を結合します。</span><span class="sxs-lookup"><span data-stu-id="e3a59-103">Combines two or more arrays.</span></span>
    syntax:
      content: 'function concat(items: T | ConcatArray<T>[])'
      parameters:
        - id: items
          type:
            - 'T | ConcatArray<T>[]'
          description: |
            <span data-ttu-id="e3a59-104">配列 1 の末尾に追加する項目。</span><span class="sxs-lookup"><span data-stu-id="e3a59-104">Additional items to add to the end of array1.</span></span>
      return:
        type:
          - 'azure-arm-keyvault.Vault[]'
    package: azure-arm-keyvault
  - uid: azure-arm-keyvault.VaultListResult.every
    name: 'every((value: Vault, index: number, array: Vault[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e3a59-105">配列のすべてのメンバーが指定されたテストを満たすかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="e3a59-105">Determines whether all the members of an array satisfy the specified test.</span></span>
    syntax:
      content: 'function every(callbackfn: (value: Vault, index: number, array: Vault[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: Vault, index: number, array: Vault[]) => boolean'
          description: '<span data-ttu-id="e3a59-106">最大 3 つの引数を受け取る関数。</span><span class="sxs-lookup"><span data-stu-id="e3a59-106">A function that accepts up to three arguments.</span></span> <span data-ttu-id="e3a59-107">各メソッドは、配列の末尾まで、または、callbackfn が false を返すまで配列 1 の各要素に対して callbackfn 関数を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="e3a59-107">The every method calls the callbackfn function for each element in array1 until the callbackfn returns false, or until the end of the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="e3a59-108">オブジェクトをこのキーワードは callbackfn 関数で参照できます。</span><span class="sxs-lookup"><span data-stu-id="e3a59-108">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="e3a59-109">ThisArg を省略すると、次のように定義されていないこのとして提供される値。</span><span class="sxs-lookup"><span data-stu-id="e3a59-109">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - boolean
    package: azure-arm-keyvault
  - uid: azure-arm-keyvault.VaultListResult.filter_1
    name: 'filter((value: Vault, index: number, array: Vault[]) => any, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e3a59-110">コールバック関数で指定された条件を満たす、配列の要素を返します。</span><span class="sxs-lookup"><span data-stu-id="e3a59-110">Returns the elements of an array that meet the condition specified in a callback function.</span></span>
    syntax:
      content: 'function filter(callbackfn: (value: Vault, index: number, array: Vault[]) => any, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: Vault, index: number, array: Vault[]) => any'
          description: <span data-ttu-id="e3a59-111">最大 3 つの引数を受け取る関数。</span><span class="sxs-lookup"><span data-stu-id="e3a59-111">A function that accepts up to three arguments.</span></span> <span data-ttu-id="e3a59-112">フィルター メソッドは、配列内の各要素に対して 1 回の callbackfn 関数を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="e3a59-112">The filter method calls the callbackfn function one time for each element in the array.</span></span>
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="e3a59-113">オブジェクトをこのキーワードは callbackfn 関数で参照できます。</span><span class="sxs-lookup"><span data-stu-id="e3a59-113">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="e3a59-114">ThisArg を省略すると、次のように定義されていないこのとして提供される値。</span><span class="sxs-lookup"><span data-stu-id="e3a59-114">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - 'azure-arm-keyvault.Vault[]'
    package: azure-arm-keyvault
  - uid: azure-arm-keyvault.VaultListResult.filter
    name: 'filter((value: Vault, index: number, array: Vault[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e3a59-115">コールバック関数で指定された条件を満たす、配列の要素を返します。</span><span class="sxs-lookup"><span data-stu-id="e3a59-115">Returns the elements of an array that meet the condition specified in a callback function.</span></span>
    syntax:
      content: 'function filter<S>(callbackfn: (value: Vault, index: number, array: Vault[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: Vault, index: number, array: Vault[]) => boolean'
          description: <span data-ttu-id="e3a59-116">最大 3 つの引数を受け取る関数。</span><span class="sxs-lookup"><span data-stu-id="e3a59-116">A function that accepts up to three arguments.</span></span> <span data-ttu-id="e3a59-117">フィルター メソッドは、配列内の各要素に対して 1 回の callbackfn 関数を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="e3a59-117">The filter method calls the callbackfn function one time for each element in the array.</span></span>
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="e3a59-118">オブジェクトをこのキーワードは callbackfn 関数で参照できます。</span><span class="sxs-lookup"><span data-stu-id="e3a59-118">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="e3a59-119">ThisArg を省略すると、次のように定義されていないこのとして提供される値。</span><span class="sxs-lookup"><span data-stu-id="e3a59-119">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - 'S[]'
    package: azure-arm-keyvault
  - uid: azure-arm-keyvault.VaultListResult.forEach
    name: 'forEach((value: Vault, index: number, array: Vault[]) => void, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e3a59-120">配列内の各要素の指定したアクションを実行します。</span><span class="sxs-lookup"><span data-stu-id="e3a59-120">Performs the specified action for each element in an array.</span></span>
    syntax:
      content: 'function forEach(callbackfn: (value: Vault, index: number, array: Vault[]) => void, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: Vault, index: number, array: Vault[]) => void'
          description: <span data-ttu-id="e3a59-121">最大 3 つの引数を受け取る関数。</span><span class="sxs-lookup"><span data-stu-id="e3a59-121">A function that accepts up to three arguments.</span></span> <span data-ttu-id="e3a59-122">forEach は、配列内の各要素に対して 1 回の callbackfn 関数を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="e3a59-122">forEach calls the callbackfn function one time for each element in the array.</span></span>
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="e3a59-123">オブジェクトをこのキーワードは callbackfn 関数で参照できます。</span><span class="sxs-lookup"><span data-stu-id="e3a59-123">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="e3a59-124">ThisArg を省略すると、次のように定義されていないこのとして提供される値。</span><span class="sxs-lookup"><span data-stu-id="e3a59-124">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
    package: azure-arm-keyvault
  - uid: azure-arm-keyvault.VaultListResult.indexOf
    name: 'indexOf(Vault, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e3a59-125">配列内の値を最初に見つかった位置のインデックスを返します。</span><span class="sxs-lookup"><span data-stu-id="e3a59-125">Returns the index of the first occurrence of a value in an array.</span></span>
    syntax:
      content: 'function indexOf(searchElement: Vault, fromIndex?: number)'
      parameters:
        - id: searchElement
          type:
            - azure-arm-keyvault.Vault
          description: <span data-ttu-id="e3a59-126">配列内で検索する値。</span><span class="sxs-lookup"><span data-stu-id="e3a59-126">The value to locate in the array.</span></span>
        - id: fromIndex
          type:
            - number
          description: |
            <span data-ttu-id="e3a59-127">検索の開始位置を示す配列インデックス。</span><span class="sxs-lookup"><span data-stu-id="e3a59-127">The array index at which to begin the search.</span></span> <span data-ttu-id="e3a59-128">FromIndex を省略すると、インデックス 0 位置にある検索を開始します。</span><span class="sxs-lookup"><span data-stu-id="e3a59-128">If fromIndex is omitted, the search starts at index 0.</span></span>
          optional: true
      return:
        type:
          - number
    package: azure-arm-keyvault
  - uid: azure-arm-keyvault.VaultListResult.join
    name: join(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e3a59-129">指定した区切り記号文字列で区切られた配列のすべての要素を追加します。</span><span class="sxs-lookup"><span data-stu-id="e3a59-129">Adds all the elements of an array separated by the specified separator string.</span></span>
    syntax:
      content: 'function join(separator?: string)'
      parameters:
        - id: separator
          type:
            - string
          description: |
            <span data-ttu-id="e3a59-130">次の結果の文字列から、配列の 1 つの要素を区切るために使用する文字列。</span><span class="sxs-lookup"><span data-stu-id="e3a59-130">A string used to separate one element of an array from the next in the resulting String.</span></span> <span data-ttu-id="e3a59-131">省略した場合、配列の要素は、コンマで区切られます。</span><span class="sxs-lookup"><span data-stu-id="e3a59-131">If omitted, the array elements are separated with a comma.</span></span>
          optional: true
      return:
        type:
          - string
    package: azure-arm-keyvault
  - uid: azure-arm-keyvault.VaultListResult.lastIndexOf
    name: 'lastIndexOf(Vault, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e3a59-132">配列で指定された値の最後に見つかった位置のインデックスを返します。</span><span class="sxs-lookup"><span data-stu-id="e3a59-132">Returns the index of the last occurrence of a specified value in an array.</span></span>
    syntax:
      content: 'function lastIndexOf(searchElement: Vault, fromIndex?: number)'
      parameters:
        - id: searchElement
          type:
            - azure-arm-keyvault.Vault
          description: <span data-ttu-id="e3a59-133">配列内で検索する値。</span><span class="sxs-lookup"><span data-stu-id="e3a59-133">The value to locate in the array.</span></span>
        - id: fromIndex
          type:
            - number
          description: |
            <span data-ttu-id="e3a59-134">検索の開始位置を示す配列インデックス。</span><span class="sxs-lookup"><span data-stu-id="e3a59-134">The array index at which to begin the search.</span></span> <span data-ttu-id="e3a59-135">FromIndex を省略した場合、配列内の最後のインデックス位置にある検索を開始します。</span><span class="sxs-lookup"><span data-stu-id="e3a59-135">If fromIndex is omitted, the search starts at the last index in the array.</span></span>
          optional: true
      return:
        type:
          - number
    package: azure-arm-keyvault
  - uid: azure-arm-keyvault.VaultListResult.length
    name: length
    fullName: length
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="e3a59-136">取得または配列の長さを設定します。</span><span class="sxs-lookup"><span data-stu-id="e3a59-136">Gets or sets the length of the array.</span></span> <span data-ttu-id="e3a59-137">これは、配列で定義されている最上位の要素より大きい番号 1 です。</span><span class="sxs-lookup"><span data-stu-id="e3a59-137">This is a number one higher than the highest element defined in an array.</span></span>
    syntax:
      content: 'length: number'
      return:
        type:
          - number
    package: azure-arm-keyvault
  - uid: azure-arm-keyvault.VaultListResult.map
    name: 'map((value: Vault, index: number, array: Vault[]) => U, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="e3a59-138">、配列の各要素に対して定義されたコールバック関数を呼び出すし、結果を含む配列を返します。</span><span class="sxs-lookup"><span data-stu-id="e3a59-138">Calls a defined callback function on each element of an array, and returns an array that contains the results.</span></span>'
    syntax:
      content: 'function map<U>(callbackfn: (value: Vault, index: number, array: Vault[]) => U, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: Vault, index: number, array: Vault[]) => U'
          description: <span data-ttu-id="e3a59-139">最大 3 つの引数を受け取る関数。</span><span class="sxs-lookup"><span data-stu-id="e3a59-139">A function that accepts up to three arguments.</span></span> <span data-ttu-id="e3a59-140">Map メソッドは、配列内の各要素に対して 1 回の callbackfn 関数を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="e3a59-140">The map method calls the callbackfn function one time for each element in the array.</span></span>
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="e3a59-141">オブジェクトをこのキーワードは callbackfn 関数で参照できます。</span><span class="sxs-lookup"><span data-stu-id="e3a59-141">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="e3a59-142">ThisArg を省略すると、次のように定義されていないこのとして提供される値。</span><span class="sxs-lookup"><span data-stu-id="e3a59-142">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - 'U[]'
    package: azure-arm-keyvault
  - uid: azure-arm-keyvault.VaultListResult.nextLink
    name: nextLink
    fullName: nextLink
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'nextLink?: string'
      return:
        type:
          - string
    package: azure-arm-keyvault
  - uid: azure-arm-keyvault.VaultListResult.pop
    name: pop()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e3a59-143">配列から最後の要素を削除し、返します。</span><span class="sxs-lookup"><span data-stu-id="e3a59-143">Removes the last element from an array and returns it.</span></span>
    syntax:
      content: function pop()
      parameters: []
      return:
        type:
          - azure-arm-keyvault.Vault | undefined
    package: azure-arm-keyvault
  - uid: azure-arm-keyvault.VaultListResult.push
    name: 'push(Vault[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="e3a59-144">、配列に新しい要素を追加し、配列の長さを返します。</span><span class="sxs-lookup"><span data-stu-id="e3a59-144">Appends new elements to an array, and returns the new length of the array.</span></span>'
    syntax:
      content: 'function push(items: Vault[])'
      parameters:
        - id: items
          type:
            - 'azure-arm-keyvault.Vault[]'
          description: |
            <span data-ttu-id="e3a59-145">配列の新しい要素。</span><span class="sxs-lookup"><span data-stu-id="e3a59-145">New elements of the Array.</span></span>
      return:
        type:
          - number
    package: azure-arm-keyvault
  - uid: azure-arm-keyvault.VaultListResult.reduce_2
    name: 'reduce((previousValue: U, currentValue: Vault, currentIndex: number, array: Vault[]) => U, U)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="e3a59-146">配列内のすべての要素に対して指定されたコールバック関数を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="e3a59-146">Calls the specified callback function for all the elements in an array.</span></span> <span data-ttu-id="e3a59-147">コールバック関数の戻り値、累積された結果であり、コールバック関数に次の呼び出しの引数として提供されます。</span><span class="sxs-lookup"><span data-stu-id="e3a59-147">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduce<U>(callbackfn: (previousValue: U, currentValue: Vault, currentIndex: number, array: Vault[]) => U, initialValue: U)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: U, currentValue: Vault, currentIndex: number, array: Vault[]) => U'
          description: <span data-ttu-id="e3a59-148">最大 4 つの引数を受け取る関数。</span><span class="sxs-lookup"><span data-stu-id="e3a59-148">A function that accepts up to four arguments.</span></span> <span data-ttu-id="e3a59-149">Reduce メソッドは、配列内の各要素に対して 1 回の callbackfn 関数を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="e3a59-149">The reduce method calls the callbackfn function one time for each element in the array.</span></span>
        - id: initialValue
          type:
            - U
          description: |
            <span data-ttu-id="e3a59-150">初期値が指定されている場合、累積を開始する初期値として使用されます。</span><span class="sxs-lookup"><span data-stu-id="e3a59-150">If initialValue is specified, it is used as the initial value to start the accumulation.</span></span> <span data-ttu-id="e3a59-151">Callbackfn 関数の最初の呼び出しでは、配列の値ではなく引数としてこの値を提供します。</span><span class="sxs-lookup"><span data-stu-id="e3a59-151">The first call to the callbackfn function provides this value as an argument instead of an array value.</span></span>
      return:
        type:
          - U
    package: azure-arm-keyvault
  - uid: azure-arm-keyvault.VaultListResult.reduce
    name: 'reduce((previousValue: Vault, currentValue: Vault, currentIndex: number, array: Vault[]) => Vault)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="e3a59-152">配列内のすべての要素に対して指定されたコールバック関数を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="e3a59-152">Calls the specified callback function for all the elements in an array.</span></span> <span data-ttu-id="e3a59-153">コールバック関数の戻り値、累積された結果であり、コールバック関数に次の呼び出しの引数として提供されます。</span><span class="sxs-lookup"><span data-stu-id="e3a59-153">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduce(callbackfn: (previousValue: Vault, currentValue: Vault, currentIndex: number, array: Vault[]) => Vault)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: Vault, currentValue: Vault, currentIndex: number, array: Vault[]) => Vault'
          description: <span data-ttu-id="e3a59-154">最大 4 つの引数を受け取る関数。</span><span class="sxs-lookup"><span data-stu-id="e3a59-154">A function that accepts up to four arguments.</span></span> <span data-ttu-id="e3a59-155">Reduce メソッドは、配列内の各要素に対して 1 回の callbackfn 関数を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="e3a59-155">The reduce method calls the callbackfn function one time for each element in the array.</span></span>
      return:
        type:
          - azure-arm-keyvault.Vault
    package: azure-arm-keyvault
  - uid: azure-arm-keyvault.VaultListResult.reduce_1
    name: 'reduce((previousValue: Vault, currentValue: Vault, currentIndex: number, array: Vault[]) => Vault, Vault)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="e3a59-156">配列内のすべての要素に対して指定されたコールバック関数を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="e3a59-156">Calls the specified callback function for all the elements in an array.</span></span> <span data-ttu-id="e3a59-157">コールバック関数の戻り値、累積された結果であり、コールバック関数に次の呼び出しの引数として提供されます。</span><span class="sxs-lookup"><span data-stu-id="e3a59-157">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduce(callbackfn: (previousValue: Vault, currentValue: Vault, currentIndex: number, array: Vault[]) => Vault, initialValue: Vault)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: Vault, currentValue: Vault, currentIndex: number, array: Vault[]) => Vault'
          description: ''
        - id: initialValue
          type:
            - azure-arm-keyvault.Vault
          description: ''
      return:
        type:
          - azure-arm-keyvault.Vault
    package: azure-arm-keyvault
  - uid: azure-arm-keyvault.VaultListResult.reduceRight_2
    name: 'reduceRight((previousValue: U, currentValue: Vault, currentIndex: number, array: Vault[]) => U, U)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="e3a59-158">降順で、配列内のすべての要素に対して指定されたコールバック関数を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="e3a59-158">Calls the specified callback function for all the elements in an array, in descending order.</span></span> <span data-ttu-id="e3a59-159">コールバック関数の戻り値、累積された結果であり、コールバック関数に次の呼び出しの引数として提供されます。</span><span class="sxs-lookup"><span data-stu-id="e3a59-159">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduceRight<U>(callbackfn: (previousValue: U, currentValue: Vault, currentIndex: number, array: Vault[]) => U, initialValue: U)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: U, currentValue: Vault, currentIndex: number, array: Vault[]) => U'
          description: <span data-ttu-id="e3a59-160">最大 4 つの引数を受け取る関数。</span><span class="sxs-lookup"><span data-stu-id="e3a59-160">A function that accepts up to four arguments.</span></span> <span data-ttu-id="e3a59-161">ReduceRight メソッドは、配列内の各要素に対して 1 回の callbackfn 関数を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="e3a59-161">The reduceRight method calls the callbackfn function one time for each element in the array.</span></span>
        - id: initialValue
          type:
            - U
          description: |
            <span data-ttu-id="e3a59-162">初期値が指定されている場合、累積を開始する初期値として使用されます。</span><span class="sxs-lookup"><span data-stu-id="e3a59-162">If initialValue is specified, it is used as the initial value to start the accumulation.</span></span> <span data-ttu-id="e3a59-163">Callbackfn 関数の最初の呼び出しでは、配列の値ではなく引数としてこの値を提供します。</span><span class="sxs-lookup"><span data-stu-id="e3a59-163">The first call to the callbackfn function provides this value as an argument instead of an array value.</span></span>
      return:
        type:
          - U
    package: azure-arm-keyvault
  - uid: azure-arm-keyvault.VaultListResult.reduceRight
    name: 'reduceRight((previousValue: Vault, currentValue: Vault, currentIndex: number, array: Vault[]) => Vault)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="e3a59-164">降順で、配列内のすべての要素に対して指定されたコールバック関数を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="e3a59-164">Calls the specified callback function for all the elements in an array, in descending order.</span></span> <span data-ttu-id="e3a59-165">コールバック関数の戻り値、累積された結果であり、コールバック関数に次の呼び出しの引数として提供されます。</span><span class="sxs-lookup"><span data-stu-id="e3a59-165">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduceRight(callbackfn: (previousValue: Vault, currentValue: Vault, currentIndex: number, array: Vault[]) => Vault)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: Vault, currentValue: Vault, currentIndex: number, array: Vault[]) => Vault'
          description: <span data-ttu-id="e3a59-166">最大 4 つの引数を受け取る関数。</span><span class="sxs-lookup"><span data-stu-id="e3a59-166">A function that accepts up to four arguments.</span></span> <span data-ttu-id="e3a59-167">ReduceRight メソッドは、配列内の各要素に対して 1 回の callbackfn 関数を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="e3a59-167">The reduceRight method calls the callbackfn function one time for each element in the array.</span></span>
      return:
        type:
          - azure-arm-keyvault.Vault
    package: azure-arm-keyvault
  - uid: azure-arm-keyvault.VaultListResult.reduceRight_1
    name: 'reduceRight((previousValue: Vault, currentValue: Vault, currentIndex: number, array: Vault[]) => Vault, Vault)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="e3a59-168">降順で、配列内のすべての要素に対して指定されたコールバック関数を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="e3a59-168">Calls the specified callback function for all the elements in an array, in descending order.</span></span> <span data-ttu-id="e3a59-169">コールバック関数の戻り値、累積された結果であり、コールバック関数に次の呼び出しの引数として提供されます。</span><span class="sxs-lookup"><span data-stu-id="e3a59-169">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduceRight(callbackfn: (previousValue: Vault, currentValue: Vault, currentIndex: number, array: Vault[]) => Vault, initialValue: Vault)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: Vault, currentValue: Vault, currentIndex: number, array: Vault[]) => Vault'
          description: ''
        - id: initialValue
          type:
            - azure-arm-keyvault.Vault
          description: ''
      return:
        type:
          - azure-arm-keyvault.Vault
    package: azure-arm-keyvault
  - uid: azure-arm-keyvault.VaultListResult.reverse
    name: reverse()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e3a59-170">配列内の要素を反転させます。</span><span class="sxs-lookup"><span data-stu-id="e3a59-170">Reverses the elements in an Array.</span></span>
    syntax:
      content: function reverse()
      parameters: []
      return:
        type:
          - 'azure-arm-keyvault.Vault[]'
    package: azure-arm-keyvault
  - uid: azure-arm-keyvault.VaultListResult.shift
    name: shift()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e3a59-171">最初の要素を配列から削除し、返します。</span><span class="sxs-lookup"><span data-stu-id="e3a59-171">Removes the first element from an array and returns it.</span></span>
    syntax:
      content: function shift()
      parameters: []
      return:
        type:
          - azure-arm-keyvault.Vault | undefined
    package: azure-arm-keyvault
  - uid: azure-arm-keyvault.VaultListResult.slice
    name: 'slice(number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e3a59-172">配列のセクションを返します。</span><span class="sxs-lookup"><span data-stu-id="e3a59-172">Returns a section of an array.</span></span>
    syntax:
      content: 'function slice(start?: number, end?: number)'
      parameters:
        - id: start
          type:
            - number
          description: <span data-ttu-id="e3a59-173">配列の指定した部分の先頭。</span><span class="sxs-lookup"><span data-stu-id="e3a59-173">The beginning of the specified portion of the array.</span></span>
          optional: true
        - id: end
          type:
            - number
          description: |
            <span data-ttu-id="e3a59-174">配列の指定した部分の末尾。</span><span class="sxs-lookup"><span data-stu-id="e3a59-174">The end of the specified portion of the array.</span></span>
          optional: true
      return:
        type:
          - 'azure-arm-keyvault.Vault[]'
    package: azure-arm-keyvault
  - uid: azure-arm-keyvault.VaultListResult.some
    name: 'some((value: Vault, index: number, array: Vault[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e3a59-175">指定されたコールバック関数が返す配列の任意の要素に対して true かどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="e3a59-175">Determines whether the specified callback function returns true for any element of an array.</span></span>
    syntax:
      content: 'function some(callbackfn: (value: Vault, index: number, array: Vault[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: Vault, index: number, array: Vault[]) => boolean'
          description: '<span data-ttu-id="e3a59-176">最大 3 つの引数を受け取る関数。</span><span class="sxs-lookup"><span data-stu-id="e3a59-176">A function that accepts up to three arguments.</span></span> <span data-ttu-id="e3a59-177">Some メソッドは、true を返します、callbackfn まで配列 1 のまたは配列の末尾までの各要素に対して callbackfn 関数を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="e3a59-177">The some method calls the callbackfn function for each element in array1 until the callbackfn returns true, or until the end of the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="e3a59-178">オブジェクトをこのキーワードは callbackfn 関数で参照できます。</span><span class="sxs-lookup"><span data-stu-id="e3a59-178">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="e3a59-179">ThisArg を省略すると、次のように定義されていないこのとして提供される値。</span><span class="sxs-lookup"><span data-stu-id="e3a59-179">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - boolean
    package: azure-arm-keyvault
  - uid: azure-arm-keyvault.VaultListResult.sort
    name: 'sort((a: Vault, b: Vault) => number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e3a59-180">配列を並べ替えます。</span><span class="sxs-lookup"><span data-stu-id="e3a59-180">Sorts an array.</span></span>
    syntax:
      content: 'function sort(compareFn?: (a: Vault, b: Vault) => number)'
      parameters:
        - id: compareFn
          type:
            - '(a: Vault, b: Vault) => number'
          description: |
            <span data-ttu-id="e3a59-181">要素の順序を決定するための関数の名前。</span><span class="sxs-lookup"><span data-stu-id="e3a59-181">The name of the function used to determine the order of the elements.</span></span> <span data-ttu-id="e3a59-182">省略した場合、要素は、ASCII 文字の並び順を昇順で並べ替えられます。</span><span class="sxs-lookup"><span data-stu-id="e3a59-182">If omitted, the elements are sorted in ascending, ASCII character order.</span></span>
          optional: true
      return:
        type:
          - this
    package: azure-arm-keyvault
  - uid: azure-arm-keyvault.VaultListResult.splice
    name: 'splice(number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="e3a59-183">配列から要素を削除し、必要に応じて、要素の新しい位置に挿入し、削除の要素を返します。</span><span class="sxs-lookup"><span data-stu-id="e3a59-183">Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.</span></span>'
    syntax:
      content: 'function splice(start: number, deleteCount?: number)'
      parameters:
        - id: start
          type:
            - number
          description: <span data-ttu-id="e3a59-184">要素の削除を開始する配列内の 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="e3a59-184">The zero-based location in the array from which to start removing elements.</span></span>
        - id: deleteCount
          type:
            - number
          description: |
            <span data-ttu-id="e3a59-185">削除する要素の数。</span><span class="sxs-lookup"><span data-stu-id="e3a59-185">The number of elements to remove.</span></span>
          optional: true
      return:
        type:
          - 'azure-arm-keyvault.Vault[]'
    package: azure-arm-keyvault
  - uid: azure-arm-keyvault.VaultListResult.splice_1
    name: 'splice(number, number, Vault[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="e3a59-186">配列から要素を削除し、必要に応じて、要素の新しい位置に挿入し、削除の要素を返します。</span><span class="sxs-lookup"><span data-stu-id="e3a59-186">Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.</span></span>'
    syntax:
      content: 'function splice(start: number, deleteCount: number, items: Vault[])'
      parameters:
        - id: start
          type:
            - number
          description: <span data-ttu-id="e3a59-187">要素の削除を開始する配列内の 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="e3a59-187">The zero-based location in the array from which to start removing elements.</span></span>
        - id: deleteCount
          type:
            - number
          description: <span data-ttu-id="e3a59-188">削除する要素の数。</span><span class="sxs-lookup"><span data-stu-id="e3a59-188">The number of elements to remove.</span></span>
        - id: items
          type:
            - 'azure-arm-keyvault.Vault[]'
          description: |
            <span data-ttu-id="e3a59-189">削除した要素の代わりに、配列に挿入する要素。</span><span class="sxs-lookup"><span data-stu-id="e3a59-189">Elements to insert into the array in place of the deleted elements.</span></span>
      return:
        type:
          - 'azure-arm-keyvault.Vault[]'
    package: azure-arm-keyvault
  - uid: azure-arm-keyvault.VaultListResult.toLocaleString
    name: toLocaleString()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e3a59-190">配列の文字列表現を返します。</span><span class="sxs-lookup"><span data-stu-id="e3a59-190">Returns a string representation of an array.</span></span> <span data-ttu-id="e3a59-191">要素は、その toLocalString メソッドを使用して文字列に変換されます。</span><span class="sxs-lookup"><span data-stu-id="e3a59-191">The elements are converted to string using their toLocalString methods.</span></span>
    syntax:
      content: function toLocaleString()
      parameters: []
      return:
        type:
          - string
    package: azure-arm-keyvault
  - uid: azure-arm-keyvault.VaultListResult.toString
    name: toString()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e3a59-192">配列の文字列表現を返します。</span><span class="sxs-lookup"><span data-stu-id="e3a59-192">Returns a string representation of an array.</span></span>
    syntax:
      content: function toString()
      parameters: []
      return:
        type:
          - string
    package: azure-arm-keyvault
  - uid: azure-arm-keyvault.VaultListResult.unshift
    name: 'unshift(Vault[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e3a59-193">配列の先頭には、新しい要素を挿入します。</span><span class="sxs-lookup"><span data-stu-id="e3a59-193">Inserts new elements at the start of an array.</span></span>
    syntax:
      content: 'function unshift(items: Vault[])'
      parameters:
        - id: items
          type:
            - 'azure-arm-keyvault.Vault[]'
          description: |
            <span data-ttu-id="e3a59-194">配列の先頭に挿入する要素。</span><span class="sxs-lookup"><span data-stu-id="e3a59-194">Elements to insert at the start of the Array.</span></span>
      return:
        type:
          - number
    package: azure-arm-keyvault
references:
  - uid: Array<azure-arm-keyvault.Vault>
    name: Vault>
    spec.typeScript:
      - name: Array<
        fullName: Array<
      - name: Vault
        fullName: Vault
        uid: azure-arm-keyvault.Vault
      - name: '>'
        fullName: '>'
  - uid: 'ConcatArray<azure-arm-keyvault.Vault>[]'
    name: 'Vault>[]'
    spec.typeScript:
      - name: ConcatArray<
        fullName: ConcatArray<
      - name: Vault
        fullName: Vault
        uid: azure-arm-keyvault.Vault
      - name: '>[]'
        fullName: '>[]'
  - uid: 'azure-arm-keyvault.Vault[]'
    name: 'Vault[]'
    spec.typeScript:
      - name: Vault
        fullName: Vault
        uid: azure-arm-keyvault.Vault
      - name: '[]'
        fullName: '[]'
  - uid: azure-arm-keyvault.Vault
    name: Vault
    spec.typeScript:
      - name: Vault
        fullName: Vault
        uid: azure-arm-keyvault.Vault
  - uid: azure-arm-keyvault.Vault | undefined
    name: Vault | undefined
    spec.typeScript:
      - name: Vault
        fullName: Vault
        uid: azure-arm-keyvault.Vault
      - name: ' | undefined'
        fullName: ' | undefined'