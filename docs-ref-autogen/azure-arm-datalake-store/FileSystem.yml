### YamlMime:UniversalReference
ms.openlocfilehash: 75afaedf2f5e76f076c1167cc227823ca7dc934f
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 08/12/2018
ms.locfileid: "40068801"
items:
- uid: azure-arm-datalake-store.FileSystem
  name: FileSystem
  fullName: FileSystem
  children:
  - azure-arm-datalake-store.FileSystem.append
  - azure-arm-datalake-store.FileSystem.append_1
  - azure-arm-datalake-store.FileSystem.append_2
  - azure-arm-datalake-store.FileSystem.appendWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.checkAccess
  - azure-arm-datalake-store.FileSystem.checkAccess_1
  - azure-arm-datalake-store.FileSystem.checkAccess_2
  - azure-arm-datalake-store.FileSystem.checkAccessWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.concat_1
  - azure-arm-datalake-store.FileSystem.concat
  - azure-arm-datalake-store.FileSystem.concat_2
  - azure-arm-datalake-store.FileSystem.concatWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.concurrentAppend
  - azure-arm-datalake-store.FileSystem.concurrentAppend_1
  - azure-arm-datalake-store.FileSystem.concurrentAppend_2
  - azure-arm-datalake-store.FileSystem.concurrentAppendWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.create_2
  - azure-arm-datalake-store.FileSystem.create
  - azure-arm-datalake-store.FileSystem.create_1
  - azure-arm-datalake-store.FileSystem.createWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.deleteMethod
  - azure-arm-datalake-store.FileSystem.deleteMethod_1
  - azure-arm-datalake-store.FileSystem.deleteMethod_2
  - azure-arm-datalake-store.FileSystem.deleteMethodWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.getAclStatus_1
  - azure-arm-datalake-store.FileSystem.getAclStatus
  - azure-arm-datalake-store.FileSystem.getAclStatus_2
  - azure-arm-datalake-store.FileSystem.getAclStatusWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.getContentSummary
  - azure-arm-datalake-store.FileSystem.getContentSummary_2
  - azure-arm-datalake-store.FileSystem.getContentSummary_1
  - azure-arm-datalake-store.FileSystem.getContentSummaryWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.getFileStatus
  - azure-arm-datalake-store.FileSystem.getFileStatus_1
  - azure-arm-datalake-store.FileSystem.getFileStatus_2
  - azure-arm-datalake-store.FileSystem.getFileStatusWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.listFileStatus_1
  - azure-arm-datalake-store.FileSystem.listFileStatus_2
  - azure-arm-datalake-store.FileSystem.listFileStatus
  - azure-arm-datalake-store.FileSystem.listFileStatusWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.mkdirs
  - azure-arm-datalake-store.FileSystem.mkdirs_1
  - azure-arm-datalake-store.FileSystem.mkdirs_2
  - azure-arm-datalake-store.FileSystem.mkdirsWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.modifyAclEntries
  - azure-arm-datalake-store.FileSystem.modifyAclEntries_1
  - azure-arm-datalake-store.FileSystem.modifyAclEntries_2
  - azure-arm-datalake-store.FileSystem.modifyAclEntriesWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.msConcat
  - azure-arm-datalake-store.FileSystem.msConcat_2
  - azure-arm-datalake-store.FileSystem.msConcat_1
  - azure-arm-datalake-store.FileSystem.msConcatWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.open
  - azure-arm-datalake-store.FileSystem.open_2
  - azure-arm-datalake-store.FileSystem.open_1
  - azure-arm-datalake-store.FileSystem.openWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.removeAcl_1
  - azure-arm-datalake-store.FileSystem.removeAcl_2
  - azure-arm-datalake-store.FileSystem.removeAcl
  - azure-arm-datalake-store.FileSystem.removeAclEntries
  - azure-arm-datalake-store.FileSystem.removeAclEntries_2
  - azure-arm-datalake-store.FileSystem.removeAclEntries_1
  - azure-arm-datalake-store.FileSystem.removeAclEntriesWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.removeAclWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.removeDefaultAcl
  - azure-arm-datalake-store.FileSystem.removeDefaultAcl_1
  - azure-arm-datalake-store.FileSystem.removeDefaultAcl_2
  - azure-arm-datalake-store.FileSystem.removeDefaultAclWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.rename
  - azure-arm-datalake-store.FileSystem.rename_2
  - azure-arm-datalake-store.FileSystem.rename_1
  - azure-arm-datalake-store.FileSystem.renameWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.setAcl
  - azure-arm-datalake-store.FileSystem.setAcl_1
  - azure-arm-datalake-store.FileSystem.setAcl_2
  - azure-arm-datalake-store.FileSystem.setAclWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.setFileExpiry
  - azure-arm-datalake-store.FileSystem.setFileExpiry_1
  - azure-arm-datalake-store.FileSystem.setFileExpiry_2
  - azure-arm-datalake-store.FileSystem.setFileExpiryWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.setOwner
  - azure-arm-datalake-store.FileSystem.setOwner_1
  - azure-arm-datalake-store.FileSystem.setOwner_2
  - azure-arm-datalake-store.FileSystem.setOwnerWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.setPermission
  - azure-arm-datalake-store.FileSystem.setPermission_1
  - azure-arm-datalake-store.FileSystem.setPermission_2
  - azure-arm-datalake-store.FileSystem.setPermissionWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.append
  name: append
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="86ece-101">使用されるため、シリアルが指定したファイルに追加します。</span><span class="sxs-lookup"><span data-stu-id="86ece-101">Used for serial appends to the specified file.</span></span> <span data-ttu-id="86ece-102">注: ターゲットは ConcurrentAppend によって追加されたデータを含めないでください。</span><span class="sxs-lookup"><span data-stu-id="86ece-102">NOTE: The target must not contain data added by ConcurrentAppend.</span></span> <span data-ttu-id="86ece-103">ConcurrentAppend と追加を同じ意味では使用することはできません。ターゲット ファイルが変更されたこれらのいずれかを使用して追加のオプション、ターゲット ファイルで追加する、他のオプションは使用できません。</span><span class="sxs-lookup"><span data-stu-id="86ece-103">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span>'
  syntax:
    content: 'function append(accountName: string, path: string, streamContents: stream.Readable, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="86ece-104">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="86ece-104">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="86ece-105">Data Lake Store パス (以降では '/') を追加するファイルの。</span><span class="sxs-lookup"><span data-stu-id="86ece-105">The Data Lake Store path (starting with '/') of the file to which to append.</span></span>
    - id: streamContents
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="86ece-106">ファイルに追加するときに含めるファイルの内容。</span><span class="sxs-lookup"><span data-stu-id="86ece-106">The file contents to include when appending to the file.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.append_1
  name: append
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="86ece-107">使用されるため、シリアルが指定したファイルに追加します。</span><span class="sxs-lookup"><span data-stu-id="86ece-107">Used for serial appends to the specified file.</span></span> <span data-ttu-id="86ece-108">注: ターゲットは ConcurrentAppend によって追加されたデータを含めないでください。</span><span class="sxs-lookup"><span data-stu-id="86ece-108">NOTE: The target must not contain data added by ConcurrentAppend.</span></span> <span data-ttu-id="86ece-109">ConcurrentAppend と追加を同じ意味では使用することはできません。ターゲット ファイルが変更されたこれらのいずれかを使用して追加のオプション、ターゲット ファイルで追加する、他のオプションは使用できません。</span><span class="sxs-lookup"><span data-stu-id="86ece-109">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span>'
  syntax:
    content: 'function append(accountName: string, path: string, streamContents: stream.Readable, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.append_2
  name: append
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="86ece-110">使用されるため、シリアルが指定したファイルに追加します。</span><span class="sxs-lookup"><span data-stu-id="86ece-110">Used for serial appends to the specified file.</span></span> <span data-ttu-id="86ece-111">注: ターゲットは ConcurrentAppend によって追加されたデータを含めないでください。</span><span class="sxs-lookup"><span data-stu-id="86ece-111">NOTE: The target must not contain data added by ConcurrentAppend.</span></span> <span data-ttu-id="86ece-112">ConcurrentAppend と追加を同じ意味では使用することはできません。ターゲット ファイルが変更されたこれらのいずれかを使用して追加のオプション、ターゲット ファイルで追加する、他のオプションは使用できません。</span><span class="sxs-lookup"><span data-stu-id="86ece-112">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span>'
  syntax:
    content: 'function append(accountName: string, path: string, streamContents: stream.Readable, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.appendWithHttpOperationResponse
  name: appendWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="86ece-113">使用されるため、シリアルが指定したファイルに追加します。</span><span class="sxs-lookup"><span data-stu-id="86ece-113">Used for serial appends to the specified file.</span></span> <span data-ttu-id="86ece-114">注: ターゲットは ConcurrentAppend によって追加されたデータを含めないでください。</span><span class="sxs-lookup"><span data-stu-id="86ece-114">NOTE: The target must not contain data added by ConcurrentAppend.</span></span> <span data-ttu-id="86ece-115">ConcurrentAppend と追加を同じ意味では使用することはできません。ターゲット ファイルが変更されたこれらのいずれかを使用して追加のオプション、ターゲット ファイルで追加する、他のオプションは使用できません。</span><span class="sxs-lookup"><span data-stu-id="86ece-115">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span>'
  syntax:
    content: 'function appendWithHttpOperationResponse(accountName: string, path: string, streamContents: stream.Readable, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="86ece-116">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="86ece-116">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="86ece-117">Data Lake Store パス (以降では '/') を追加するファイルの。</span><span class="sxs-lookup"><span data-stu-id="86ece-117">The Data Lake Store path (starting with '/') of the file to which to append.</span></span>
    - id: streamContents
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="86ece-118">ファイルに追加するときに含めるファイルの内容。</span><span class="sxs-lookup"><span data-stu-id="86ece-118">The file contents to include when appending to the file.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.checkAccess
  name: checkAccess
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-119">指定したアクセスは、指定されたパスに使用可能なかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="86ece-119">Checks if the specified access is available at the given path.</span></span>
  syntax:
    content: 'function checkAccess(accountName: string, path: string, fsaction: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="86ece-120">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="86ece-120">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="86ece-121">Data Lake Store パス (以降では '/') のファイルまたはディレクトリへのアクセスをチェックします。</span><span class="sxs-lookup"><span data-stu-id="86ece-121">The Data Lake Store path (starting with '/') of the file or directory for which to check access.</span></span>
    - id: fsaction
      type:
      - string
      description: >
        <span data-ttu-id="86ece-122">システム操作読み取り/書き込み/実行の正規表現パターンに一致する文字列形式をファイル ' [rwx-]{3}'</span><span class="sxs-lookup"><span data-stu-id="86ece-122">File system operation read/write/execute in string form, matching regex pattern '[rwx-]{3}'</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.checkAccess_1
  name: checkAccess
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-123">指定したアクセスは、指定されたパスに使用可能なかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="86ece-123">Checks if the specified access is available at the given path.</span></span>
  syntax:
    content: 'function checkAccess(accountName: string, path: string, fsaction: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: fsaction
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.checkAccess_2
  name: checkAccess
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-124">指定したアクセスは、指定されたパスに使用可能なかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="86ece-124">Checks if the specified access is available at the given path.</span></span>
  syntax:
    content: 'function checkAccess(accountName: string, path: string, fsaction: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: fsaction
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.checkAccessWithHttpOperationResponse
  name: checkAccessWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-125">指定したアクセスは、指定されたパスに使用可能なかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="86ece-125">Checks if the specified access is available at the given path.</span></span>
  syntax:
    content: 'function checkAccessWithHttpOperationResponse(accountName: string, path: string, fsaction: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="86ece-126">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="86ece-126">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="86ece-127">Data Lake Store パス (以降では '/') のファイルまたはディレクトリへのアクセスをチェックします。</span><span class="sxs-lookup"><span data-stu-id="86ece-127">The Data Lake Store path (starting with '/') of the file or directory for which to check access.</span></span>
    - id: fsaction
      type:
      - string
      description: >
        <span data-ttu-id="86ece-128">システム操作読み取り/書き込み/実行の正規表現パターンに一致する文字列形式をファイル ' [rwx-]{3}'</span><span class="sxs-lookup"><span data-stu-id="86ece-128">File system operation read/write/execute in string form, matching regex pattern '[rwx-]{3}'</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concat_1
  name: concat
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-129">成功時にすべてのソース ファイルを削除して、目的のファイルにソース ファイルのリストを連結します。</span><span class="sxs-lookup"><span data-stu-id="86ece-129">Concatenates the list of source files into the destination file, removing all source files upon success.</span></span>
  syntax:
    content: 'function concat(accountName: string, path: string, sources: string[], callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: sources
      type:
      - string[]
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concat
  name: concat
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-130">成功時にすべてのソース ファイルを削除して、目的のファイルにソース ファイルのリストを連結します。</span><span class="sxs-lookup"><span data-stu-id="86ece-130">Concatenates the list of source files into the destination file, removing all source files upon success.</span></span>
  syntax:
    content: 'function concat(accountName: string, path: string, sources: string[], options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="86ece-131">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="86ece-131">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="86ece-132">Data Lake Store パス (以降では '/') の結果を連結したもののコピー先ファイル。</span><span class="sxs-lookup"><span data-stu-id="86ece-132">The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation.</span></span>
    - id: sources
      type:
      - string[]
      description: >
        <span data-ttu-id="86ece-133">一連のコンマ区切りの Data Lake Store パス (以降では '/') を連結する順序で連結するファイル。</span><span class="sxs-lookup"><span data-stu-id="86ece-133">A list of comma separated Data Lake Store paths (starting with '/') of the files to concatenate, in the order in which they should be concatenated.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concat_2
  name: concat
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-134">成功時にすべてのソース ファイルを削除して、目的のファイルにソース ファイルのリストを連結します。</span><span class="sxs-lookup"><span data-stu-id="86ece-134">Concatenates the list of source files into the destination file, removing all source files upon success.</span></span>
  syntax:
    content: 'function concat(accountName: string, path: string, sources: string[], options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: sources
      type:
      - string[]
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concatWithHttpOperationResponse
  name: concatWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-135">成功時にすべてのソース ファイルを削除して、目的のファイルにソース ファイルのリストを連結します。</span><span class="sxs-lookup"><span data-stu-id="86ece-135">Concatenates the list of source files into the destination file, removing all source files upon success.</span></span>
  syntax:
    content: 'function concatWithHttpOperationResponse(accountName: string, path: string, sources: string[], options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="86ece-136">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="86ece-136">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="86ece-137">Data Lake Store パス (以降では '/') の結果を連結したもののコピー先ファイル。</span><span class="sxs-lookup"><span data-stu-id="86ece-137">The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation.</span></span>
    - id: sources
      type:
      - string[]
      description: >
        <span data-ttu-id="86ece-138">一連のコンマ区切りの Data Lake Store パス (以降では '/') を連結する順序で連結するファイル。</span><span class="sxs-lookup"><span data-stu-id="86ece-138">A list of comma separated Data Lake Store paths (starting with '/') of the files to concatenate, in the order in which they should be concatenated.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concurrentAppend
  name: concurrentAppend
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="86ece-139">必要に応じて、指定したファイルに追加しますがまだ存在しない場合、最初にファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="86ece-139">Appends to the specified file, optionally first creating the file if it does not yet exist.</span></span> <span data-ttu-id="86ece-140">このメソッドは、ファイルに複数の同時実行の追加をサポートします。</span><span class="sxs-lookup"><span data-stu-id="86ece-140">This method supports multiple concurrent appends to the file.</span></span>

    <span data-ttu-id="86ece-141">注: ターゲットは作成または通常の (シリアル) の追加によって追加されたデータを含めないでください。</span><span class="sxs-lookup"><span data-stu-id="86ece-141">NOTE: The target must not contain data added by Create or normal (serial) Append.</span></span> <span data-ttu-id="86ece-142">ConcurrentAppend と追加を同じ意味では使用することはできません。ターゲット ファイルが変更されたこれらのいずれかを使用して追加のオプション、ターゲット ファイルで追加する、他のオプションは使用できません。</span><span class="sxs-lookup"><span data-stu-id="86ece-142">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span> <span data-ttu-id="86ece-143">ConcurrentAppend 順序は保証されませんし、ランディング ターゲット ファイルに重複するデータが発生することができます。</span><span class="sxs-lookup"><span data-stu-id="86ece-143">ConcurrentAppend does not guarantee order and can result in duplicated data landing in the target file.</span></span>
  syntax:
    content: 'function concurrentAppend(accountName: string, path: string, streamContents: stream.Readable, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="86ece-144">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="86ece-144">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="86ece-145">Data Lake Store パス (以降では '/') のファイルを追加する同時実行を使用して追加します。</span><span class="sxs-lookup"><span data-stu-id="86ece-145">The Data Lake Store path (starting with '/') of the file to which to append using concurrent append.</span></span>
    - id: streamContents
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="86ece-146">ファイルに追加するときに含めるファイルの内容。</span><span class="sxs-lookup"><span data-stu-id="86ece-146">The file contents to include when appending to the file.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concurrentAppend_1
  name: concurrentAppend
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="86ece-147">必要に応じて、指定したファイルに追加しますがまだ存在しない場合、最初にファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="86ece-147">Appends to the specified file, optionally first creating the file if it does not yet exist.</span></span> <span data-ttu-id="86ece-148">このメソッドは、ファイルに複数の同時実行の追加をサポートします。</span><span class="sxs-lookup"><span data-stu-id="86ece-148">This method supports multiple concurrent appends to the file.</span></span>

    <span data-ttu-id="86ece-149">注: ターゲットは作成または通常の (シリアル) の追加によって追加されたデータを含めないでください。</span><span class="sxs-lookup"><span data-stu-id="86ece-149">NOTE: The target must not contain data added by Create or normal (serial) Append.</span></span> <span data-ttu-id="86ece-150">ConcurrentAppend と追加を同じ意味では使用することはできません。ターゲット ファイルが変更されたこれらのいずれかを使用して追加のオプション、ターゲット ファイルで追加する、他のオプションは使用できません。</span><span class="sxs-lookup"><span data-stu-id="86ece-150">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span> <span data-ttu-id="86ece-151">ConcurrentAppend 順序は保証されませんし、ランディング ターゲット ファイルに重複するデータが発生することができます。</span><span class="sxs-lookup"><span data-stu-id="86ece-151">ConcurrentAppend does not guarantee order and can result in duplicated data landing in the target file.</span></span>
  syntax:
    content: 'function concurrentAppend(accountName: string, path: string, streamContents: stream.Readable, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concurrentAppend_2
  name: concurrentAppend
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="86ece-152">必要に応じて、指定したファイルに追加しますがまだ存在しない場合、最初にファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="86ece-152">Appends to the specified file, optionally first creating the file if it does not yet exist.</span></span> <span data-ttu-id="86ece-153">このメソッドは、ファイルに複数の同時実行の追加をサポートします。</span><span class="sxs-lookup"><span data-stu-id="86ece-153">This method supports multiple concurrent appends to the file.</span></span>

    <span data-ttu-id="86ece-154">注: ターゲットは作成または通常の (シリアル) の追加によって追加されたデータを含めないでください。</span><span class="sxs-lookup"><span data-stu-id="86ece-154">NOTE: The target must not contain data added by Create or normal (serial) Append.</span></span> <span data-ttu-id="86ece-155">ConcurrentAppend と追加を同じ意味では使用することはできません。ターゲット ファイルが変更されたこれらのいずれかを使用して追加のオプション、ターゲット ファイルで追加する、他のオプションは使用できません。</span><span class="sxs-lookup"><span data-stu-id="86ece-155">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span> <span data-ttu-id="86ece-156">ConcurrentAppend 順序は保証されませんし、ランディング ターゲット ファイルに重複するデータが発生することができます。</span><span class="sxs-lookup"><span data-stu-id="86ece-156">ConcurrentAppend does not guarantee order and can result in duplicated data landing in the target file.</span></span>
  syntax:
    content: 'function concurrentAppend(accountName: string, path: string, streamContents: stream.Readable, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concurrentAppendWithHttpOperationResponse
  name: concurrentAppendWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="86ece-157">必要に応じて、指定したファイルに追加しますがまだ存在しない場合、最初にファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="86ece-157">Appends to the specified file, optionally first creating the file if it does not yet exist.</span></span> <span data-ttu-id="86ece-158">このメソッドは、ファイルに複数の同時実行の追加をサポートします。</span><span class="sxs-lookup"><span data-stu-id="86ece-158">This method supports multiple concurrent appends to the file.</span></span>

    <span data-ttu-id="86ece-159">注: ターゲットは作成または通常の (シリアル) の追加によって追加されたデータを含めないでください。</span><span class="sxs-lookup"><span data-stu-id="86ece-159">NOTE: The target must not contain data added by Create or normal (serial) Append.</span></span> <span data-ttu-id="86ece-160">ConcurrentAppend と追加を同じ意味では使用することはできません。ターゲット ファイルが変更されたこれらのいずれかを使用して追加のオプション、ターゲット ファイルで追加する、他のオプションは使用できません。</span><span class="sxs-lookup"><span data-stu-id="86ece-160">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span> <span data-ttu-id="86ece-161">ConcurrentAppend 順序は保証されませんし、ランディング ターゲット ファイルに重複するデータが発生することができます。</span><span class="sxs-lookup"><span data-stu-id="86ece-161">ConcurrentAppend does not guarantee order and can result in duplicated data landing in the target file.</span></span>
  syntax:
    content: 'function concurrentAppendWithHttpOperationResponse(accountName: string, path: string, streamContents: stream.Readable, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="86ece-162">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="86ece-162">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="86ece-163">Data Lake Store パス (以降では '/') のファイルを追加する同時実行を使用して追加します。</span><span class="sxs-lookup"><span data-stu-id="86ece-163">The Data Lake Store path (starting with '/') of the file to which to append using concurrent append.</span></span>
    - id: streamContents
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="86ece-164">ファイルに追加するときに含めるファイルの内容。</span><span class="sxs-lookup"><span data-stu-id="86ece-164">The file contents to include when appending to the file.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.create_2
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="86ece-165">必要に応じて指定したコンテンツを含むファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="86ece-165">Creates a file with optionally specified content.</span></span> <span data-ttu-id="86ece-166">注: コンテンツが指定されている場合、結果として得られるファイルは変更できません ConcurrentAppend を使用します。</span><span class="sxs-lookup"><span data-stu-id="86ece-166">NOTE: If content is provided, the resulting file cannot be modified using ConcurrentAppend.</span></span>'
  syntax:
    content: 'function create(accountName: string, path: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.create
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="86ece-167">必要に応じて指定したコンテンツを含むファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="86ece-167">Creates a file with optionally specified content.</span></span> <span data-ttu-id="86ece-168">注: コンテンツが指定されている場合、結果として得られるファイルは変更できません ConcurrentAppend を使用します。</span><span class="sxs-lookup"><span data-stu-id="86ece-168">NOTE: If content is provided, the resulting file cannot be modified using ConcurrentAppend.</span></span>'
  syntax:
    content: 'function create(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="86ece-169">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="86ece-169">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="86ece-170">Data Lake Store パス (以降では '/') のファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="86ece-170">The Data Lake Store path (starting with '/') of the file to create.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.create_1
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="86ece-171">必要に応じて指定したコンテンツを含むファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="86ece-171">Creates a file with optionally specified content.</span></span> <span data-ttu-id="86ece-172">注: コンテンツが指定されている場合、結果として得られるファイルは変更できません ConcurrentAppend を使用します。</span><span class="sxs-lookup"><span data-stu-id="86ece-172">NOTE: If content is provided, the resulting file cannot be modified using ConcurrentAppend.</span></span>'
  syntax:
    content: 'function create(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.createWithHttpOperationResponse
  name: createWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="86ece-173">必要に応じて指定したコンテンツを含むファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="86ece-173">Creates a file with optionally specified content.</span></span> <span data-ttu-id="86ece-174">注: コンテンツが指定されている場合、結果として得られるファイルは変更できません ConcurrentAppend を使用します。</span><span class="sxs-lookup"><span data-stu-id="86ece-174">NOTE: If content is provided, the resulting file cannot be modified using ConcurrentAppend.</span></span>'
  syntax:
    content: 'function createWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="86ece-175">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="86ece-175">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="86ece-176">Data Lake Store パス (以降では '/') のファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="86ece-176">The Data Lake Store path (starting with '/') of the file to create.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.deleteMethod
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-177">要求されたファイルまたはディレクトリ、必要に応じて再帰的に削除します。</span><span class="sxs-lookup"><span data-stu-id="86ece-177">Deletes the requested file or directory, optionally recursively.</span></span>
  syntax:
    content: 'function deleteMethod(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="86ece-178">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="86ece-178">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="86ece-179">Data Lake Store パス (以降では '/') のファイルまたはディレクトリを削除します。</span><span class="sxs-lookup"><span data-stu-id="86ece-179">The Data Lake Store path (starting with '/') of the file or directory to delete.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.deleteMethod_1
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-180">要求されたファイルまたはディレクトリ、必要に応じて再帰的に削除します。</span><span class="sxs-lookup"><span data-stu-id="86ece-180">Deletes the requested file or directory, optionally recursively.</span></span>
  syntax:
    content: 'function deleteMethod(accountName: string, path: string, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.deleteMethod_2
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-181">要求されたファイルまたはディレクトリ、必要に応じて再帰的に削除します。</span><span class="sxs-lookup"><span data-stu-id="86ece-181">Deletes the requested file or directory, optionally recursively.</span></span>
  syntax:
    content: 'function deleteMethod(accountName: string, path: string, options: function, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-182">要求されたファイルまたはディレクトリ、必要に応じて再帰的に削除します。</span><span class="sxs-lookup"><span data-stu-id="86ece-182">Deletes the requested file or directory, optionally recursively.</span></span>
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="86ece-183">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="86ece-183">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="86ece-184">Data Lake Store パス (以降では '/') のファイルまたはディレクトリを削除します。</span><span class="sxs-lookup"><span data-stu-id="86ece-184">The Data Lake Store path (starting with '/') of the file or directory to delete.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileOperationResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getAclStatus_1
  name: getAclStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-185">指定したファイルまたはディレクトリのアクセス制御リスト (ACL) エントリを取得します。</span><span class="sxs-lookup"><span data-stu-id="86ece-185">Gets Access Control List (ACL) entries for the specified file or directory.</span></span>
  syntax:
    content: 'function getAclStatus(accountName: string, path: string, callback: ServiceCallback<AclStatusResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.AclStatusResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.AclStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getAclStatus
  name: getAclStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-186">指定したファイルまたはディレクトリのアクセス制御リスト (ACL) エントリを取得します。</span><span class="sxs-lookup"><span data-stu-id="86ece-186">Gets Access Control List (ACL) entries for the specified file or directory.</span></span>
  syntax:
    content: 'function getAclStatus(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="86ece-187">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="86ece-187">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="86ece-188">Data Lake Store パス (以降では '/') のファイルまたはディレクトリの ACL を取得します。</span><span class="sxs-lookup"><span data-stu-id="86ece-188">The Data Lake Store path (starting with '/') of the file or directory for which to get the ACL.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.AclStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getAclStatus_2
  name: getAclStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-189">指定したファイルまたはディレクトリのアクセス制御リスト (ACL) エントリを取得します。</span><span class="sxs-lookup"><span data-stu-id="86ece-189">Gets Access Control List (ACL) entries for the specified file or directory.</span></span>
  syntax:
    content: 'function getAclStatus(accountName: string, path: string, options: function, callback: ServiceCallback<AclStatusResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.AclStatusResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.AclStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getAclStatusWithHttpOperationResponse
  name: getAclStatusWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-190">指定したファイルまたはディレクトリのアクセス制御リスト (ACL) エントリを取得します。</span><span class="sxs-lookup"><span data-stu-id="86ece-190">Gets Access Control List (ACL) entries for the specified file or directory.</span></span>
  syntax:
    content: 'function getAclStatusWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="86ece-191">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="86ece-191">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="86ece-192">Data Lake Store パス (以降では '/') のファイルまたはディレクトリの ACL を取得します。</span><span class="sxs-lookup"><span data-stu-id="86ece-192">The Data Lake Store path (starting with '/') of the file or directory for which to get the ACL.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.AclStatusResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getContentSummary
  name: getContentSummary
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-193">ファイル パスで指定された、ファイルのコンテンツの概要オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="86ece-193">Gets the file content summary object specified by the file path.</span></span>
  syntax:
    content: 'function getContentSummary(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="86ece-194">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="86ece-194">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="86ece-195">Data Lake Store パス (以降では '/') の概要を取得する対象のファイル。</span><span class="sxs-lookup"><span data-stu-id="86ece-195">The Data Lake Store path (starting with '/') of the file for which to retrieve the summary.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.ContentSummaryResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getContentSummary_2
  name: getContentSummary
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-196">ファイル パスで指定された、ファイルのコンテンツの概要オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="86ece-196">Gets the file content summary object specified by the file path.</span></span>
  syntax:
    content: 'function getContentSummary(accountName: string, path: string, options: function, callback: ServiceCallback<ContentSummaryResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.ContentSummaryResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.ContentSummaryResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getContentSummary_1
  name: getContentSummary
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-197">ファイル パスで指定された、ファイルのコンテンツの概要オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="86ece-197">Gets the file content summary object specified by the file path.</span></span>
  syntax:
    content: 'function getContentSummary(accountName: string, path: string, callback: ServiceCallback<ContentSummaryResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.ContentSummaryResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.ContentSummaryResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getContentSummaryWithHttpOperationResponse
  name: getContentSummaryWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-198">ファイル パスで指定された、ファイルのコンテンツの概要オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="86ece-198">Gets the file content summary object specified by the file path.</span></span>
  syntax:
    content: 'function getContentSummaryWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="86ece-199">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="86ece-199">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="86ece-200">Data Lake Store パス (以降では '/') の概要を取得する対象のファイル。</span><span class="sxs-lookup"><span data-stu-id="86ece-200">The Data Lake Store path (starting with '/') of the file for which to retrieve the summary.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.ContentSummaryResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getFileStatus
  name: getFileStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-201">ファイルのパスで指定されたファイルの状態オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="86ece-201">Get the file status object specified by the file path.</span></span>
  syntax:
    content: 'function getFileStatus(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="86ece-202">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="86ece-202">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="86ece-203">Data Lake Store パス (以降では '/') のファイルまたは状態を取得する対象のディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="86ece-203">The Data Lake Store path (starting with '/') of the file or directory for which to retrieve the status.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getFileStatus_1
  name: getFileStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-204">ファイルのパスで指定されたファイルの状態オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="86ece-204">Get the file status object specified by the file path.</span></span>
  syntax:
    content: 'function getFileStatus(accountName: string, path: string, callback: ServiceCallback<FileStatusResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileStatusResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getFileStatus_2
  name: getFileStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-205">ファイルのパスで指定されたファイルの状態オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="86ece-205">Get the file status object specified by the file path.</span></span>
  syntax:
    content: 'function getFileStatus(accountName: string, path: string, options: function, callback: ServiceCallback<FileStatusResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileStatusResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getFileStatusWithHttpOperationResponse
  name: getFileStatusWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-206">ファイルのパスで指定されたファイルの状態オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="86ece-206">Get the file status object specified by the file path.</span></span>
  syntax:
    content: 'function getFileStatusWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="86ece-207">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="86ece-207">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="86ece-208">Data Lake Store パス (以降では '/') のファイルまたは状態を取得する対象のディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="86ece-208">The Data Lake Store path (starting with '/') of the file or directory for which to retrieve the status.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileStatusResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.listFileStatus_1
  name: listFileStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-209">ファイルのパスと省略可能な改ページ パラメーターで指定されたファイルの状態オブジェクトの一覧を取得します。</span><span class="sxs-lookup"><span data-stu-id="86ece-209">Get the list of file status objects specified by the file path, with optional pagination parameters</span></span>
  syntax:
    content: 'function listFileStatus(accountName: string, path: string, callback: ServiceCallback<FileStatusesResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileStatusesResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusesResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.listFileStatus_2
  name: listFileStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-210">ファイルのパスと省略可能な改ページ パラメーターで指定されたファイルの状態オブジェクトの一覧を取得します。</span><span class="sxs-lookup"><span data-stu-id="86ece-210">Get the list of file status objects specified by the file path, with optional pagination parameters</span></span>
  syntax:
    content: 'function listFileStatus(accountName: string, path: string, options: function, callback: ServiceCallback<FileStatusesResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileStatusesResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusesResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.listFileStatus
  name: listFileStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-211">ファイルのパスと省略可能な改ページ パラメーターで指定されたファイルの状態オブジェクトの一覧を取得します。</span><span class="sxs-lookup"><span data-stu-id="86ece-211">Get the list of file status objects specified by the file path, with optional pagination parameters</span></span>
  syntax:
    content: 'function listFileStatus(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="86ece-212">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="86ece-212">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="86ece-213">Data Lake Store パス (以降では '/') のリストにディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="86ece-213">The Data Lake Store path (starting with '/') of the directory to list.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusesResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.listFileStatusWithHttpOperationResponse
  name: listFileStatusWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-214">ファイルのパスと省略可能な改ページ パラメーターで指定されたファイルの状態オブジェクトの一覧を取得します。</span><span class="sxs-lookup"><span data-stu-id="86ece-214">Get the list of file status objects specified by the file path, with optional pagination parameters</span></span>
  syntax:
    content: 'function listFileStatusWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="86ece-215">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="86ece-215">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="86ece-216">Data Lake Store パス (以降では '/') のリストにディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="86ece-216">The Data Lake Store path (starting with '/') of the directory to list.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileStatusesResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.mkdirs
  name: mkdirs
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-217">ディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="86ece-217">Creates a directory.</span></span>
  syntax:
    content: 'function mkdirs(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="86ece-218">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="86ece-218">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="86ece-219">Data Lake Store パス (以降では '/') を作成するディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="86ece-219">The Data Lake Store path (starting with '/') of the directory to create.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.mkdirs_1
  name: mkdirs
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-220">ディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="86ece-220">Creates a directory.</span></span>
  syntax:
    content: 'function mkdirs(accountName: string, path: string, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.mkdirs_2
  name: mkdirs
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-221">ディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="86ece-221">Creates a directory.</span></span>
  syntax:
    content: 'function mkdirs(accountName: string, path: string, options: function, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.mkdirsWithHttpOperationResponse
  name: mkdirsWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-222">ディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="86ece-222">Creates a directory.</span></span>
  syntax:
    content: 'function mkdirsWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="86ece-223">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="86ece-223">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="86ece-224">Data Lake Store パス (以降では '/') を作成するディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="86ece-224">The Data Lake Store path (starting with '/') of the directory to create.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileOperationResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.modifyAclEntries
  name: modifyAclEntries
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-225">ファイルまたはフォルダーの既存のアクセス制御リスト (ACL) エントリを変更します。</span><span class="sxs-lookup"><span data-stu-id="86ece-225">Modifies existing Access Control List (ACL) entries on a file or folder.</span></span>
  syntax:
    content: 'function modifyAclEntries(accountName: string, path: string, aclspec: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="86ece-226">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="86ece-226">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="86ece-227">Data Lake Store パス (以降では '/') のファイルまたはディレクトリが変更されている ACL を使用します。</span><span class="sxs-lookup"><span data-stu-id="86ece-227">The Data Lake Store path (starting with '/') of the file or directory with the ACL being modified.</span></span>
    - id: aclspec
      type:
      - string
      description: >
        <span data-ttu-id="86ece-228">ACL の仕様の形式での ACL の変更操作に含まれる ' [既定:] ユーザー | グループ | その他:: r |-w |-x |-'</span><span class="sxs-lookup"><span data-stu-id="86ece-228">The ACL specification included in ACL modification operations in the format '[default:]user|group|other::r|-w|-x|-'</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.modifyAclEntries_1
  name: modifyAclEntries
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-229">ファイルまたはフォルダーの既存のアクセス制御リスト (ACL) エントリを変更します。</span><span class="sxs-lookup"><span data-stu-id="86ece-229">Modifies existing Access Control List (ACL) entries on a file or folder.</span></span>
  syntax:
    content: 'function modifyAclEntries(accountName: string, path: string, aclspec: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.modifyAclEntries_2
  name: modifyAclEntries
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-230">ファイルまたはフォルダーの既存のアクセス制御リスト (ACL) エントリを変更します。</span><span class="sxs-lookup"><span data-stu-id="86ece-230">Modifies existing Access Control List (ACL) entries on a file or folder.</span></span>
  syntax:
    content: 'function modifyAclEntries(accountName: string, path: string, aclspec: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.modifyAclEntriesWithHttpOperationResponse
  name: modifyAclEntriesWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-231">ファイルまたはフォルダーの既存のアクセス制御リスト (ACL) エントリを変更します。</span><span class="sxs-lookup"><span data-stu-id="86ece-231">Modifies existing Access Control List (ACL) entries on a file or folder.</span></span>
  syntax:
    content: 'function modifyAclEntriesWithHttpOperationResponse(accountName: string, path: string, aclspec: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="86ece-232">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="86ece-232">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="86ece-233">Data Lake Store パス (以降では '/') のファイルまたはディレクトリが変更されている ACL を使用します。</span><span class="sxs-lookup"><span data-stu-id="86ece-233">The Data Lake Store path (starting with '/') of the file or directory with the ACL being modified.</span></span>
    - id: aclspec
      type:
      - string
      description: >
        <span data-ttu-id="86ece-234">ACL の仕様の形式での ACL の変更操作に含まれる ' [既定:] ユーザー | グループ | その他:: r |-w |-x |-'</span><span class="sxs-lookup"><span data-stu-id="86ece-234">The ACL specification included in ACL modification operations in the format '[default:]user|group|other::r|-w|-x|-'</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.msConcat
  name: msConcat
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-235">成功時にすべてのソース ファイルを削除して、目的のファイルにソース ファイルのリストを連結します。</span><span class="sxs-lookup"><span data-stu-id="86ece-235">Concatenates the list of source files into the destination file, deleting all source files upon success.</span></span> <span data-ttu-id="86ece-236">このメソッドは、Concat メソッドよりも多くのソース ファイルのパスを受け取ります。</span><span class="sxs-lookup"><span data-stu-id="86ece-236">This method accepts more source file paths than the Concat method.</span></span> <span data-ttu-id="86ece-237">このメソッドと、受け取るパラメーターは、使いやすさ、今後のバージョンでの変更される可能性が。</span><span class="sxs-lookup"><span data-stu-id="86ece-237">This method and the parameters it accepts are subject to change for usability in an upcoming version.</span></span>
  syntax:
    content: 'function msConcat(accountName: string, path: string, streamContents: stream.Readable, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="86ece-238">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="86ece-238">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="86ece-239">Data Lake Store パス (以降では '/') の結果を連結したもののコピー先ファイル。</span><span class="sxs-lookup"><span data-stu-id="86ece-239">The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation.</span></span>
    - id: streamContents
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="86ece-240">Data Lake Store パスの一覧 (以降では '/') のソース ファイル。</span><span class="sxs-lookup"><span data-stu-id="86ece-240">A list of Data Lake Store paths (starting with '/') of the source files.</span></span> <span data-ttu-id="86ece-241">形式でコンマで区切られたパスの一覧でなければなりません: sources=/file/path/1.txt,/file/path/2.txt,/file/path/lastfile.csv</span><span class="sxs-lookup"><span data-stu-id="86ece-241">Must be a comma-separated path list in the format: sources=/file/path/1.txt,/file/path/2.txt,/file/path/lastfile.csv</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.msConcat_2
  name: msConcat
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-242">成功時にすべてのソース ファイルを削除して、目的のファイルにソース ファイルのリストを連結します。</span><span class="sxs-lookup"><span data-stu-id="86ece-242">Concatenates the list of source files into the destination file, deleting all source files upon success.</span></span> <span data-ttu-id="86ece-243">このメソッドは、Concat メソッドよりも多くのソース ファイルのパスを受け取ります。</span><span class="sxs-lookup"><span data-stu-id="86ece-243">This method accepts more source file paths than the Concat method.</span></span> <span data-ttu-id="86ece-244">このメソッドと、受け取るパラメーターは、使いやすさ、今後のバージョンでの変更される可能性が。</span><span class="sxs-lookup"><span data-stu-id="86ece-244">This method and the parameters it accepts are subject to change for usability in an upcoming version.</span></span>
  syntax:
    content: 'function msConcat(accountName: string, path: string, streamContents: stream.Readable, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.msConcat_1
  name: msConcat
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-245">成功時にすべてのソース ファイルを削除して、目的のファイルにソース ファイルのリストを連結します。</span><span class="sxs-lookup"><span data-stu-id="86ece-245">Concatenates the list of source files into the destination file, deleting all source files upon success.</span></span> <span data-ttu-id="86ece-246">このメソッドは、Concat メソッドよりも多くのソース ファイルのパスを受け取ります。</span><span class="sxs-lookup"><span data-stu-id="86ece-246">This method accepts more source file paths than the Concat method.</span></span> <span data-ttu-id="86ece-247">このメソッドと、受け取るパラメーターは、使いやすさ、今後のバージョンでの変更される可能性が。</span><span class="sxs-lookup"><span data-stu-id="86ece-247">This method and the parameters it accepts are subject to change for usability in an upcoming version.</span></span>
  syntax:
    content: 'function msConcat(accountName: string, path: string, streamContents: stream.Readable, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.msConcatWithHttpOperationResponse
  name: msConcatWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-248">成功時にすべてのソース ファイルを削除して、目的のファイルにソース ファイルのリストを連結します。</span><span class="sxs-lookup"><span data-stu-id="86ece-248">Concatenates the list of source files into the destination file, deleting all source files upon success.</span></span> <span data-ttu-id="86ece-249">このメソッドは、Concat メソッドよりも多くのソース ファイルのパスを受け取ります。</span><span class="sxs-lookup"><span data-stu-id="86ece-249">This method accepts more source file paths than the Concat method.</span></span> <span data-ttu-id="86ece-250">このメソッドと、受け取るパラメーターは、使いやすさ、今後のバージョンでの変更される可能性が。</span><span class="sxs-lookup"><span data-stu-id="86ece-250">This method and the parameters it accepts are subject to change for usability in an upcoming version.</span></span>
  syntax:
    content: 'function msConcatWithHttpOperationResponse(accountName: string, path: string, streamContents: stream.Readable, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="86ece-251">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="86ece-251">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="86ece-252">Data Lake Store パス (以降では '/') の結果を連結したもののコピー先ファイル。</span><span class="sxs-lookup"><span data-stu-id="86ece-252">The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation.</span></span>
    - id: streamContents
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="86ece-253">Data Lake Store パスの一覧 (以降では '/') のソース ファイル。</span><span class="sxs-lookup"><span data-stu-id="86ece-253">A list of Data Lake Store paths (starting with '/') of the source files.</span></span> <span data-ttu-id="86ece-254">形式でコンマで区切られたパスの一覧でなければなりません: sources=/file/path/1.txt,/file/path/2.txt,/file/path/lastfile.csv</span><span class="sxs-lookup"><span data-stu-id="86ece-254">Must be a comma-separated path list in the format: sources=/file/path/1.txt,/file/path/2.txt,/file/path/lastfile.csv</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.open
  name: open
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-255">開き、指定したファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="86ece-255">Opens and reads from the specified file.</span></span>
  syntax:
    content: 'function open(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="86ece-256">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="86ece-256">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="86ece-257">Data Lake Store パス (以降では '/') のファイルを開きます。</span><span class="sxs-lookup"><span data-stu-id="86ece-257">The Data Lake Store path (starting with '/') of the file to open.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<stream.Readable>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.open_2
  name: open
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-258">開き、指定したファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="86ece-258">Opens and reads from the specified file.</span></span>
  syntax:
    content: 'function open(accountName: string, path: string, options: function, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.open_1
  name: open
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-259">開き、指定したファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="86ece-259">Opens and reads from the specified file.</span></span>
  syntax:
    content: 'function open(accountName: string, path: string, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.openWithHttpOperationResponse
  name: openWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-260">開き、指定したファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="86ece-260">Opens and reads from the specified file.</span></span>
  syntax:
    content: 'function openWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="86ece-261">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="86ece-261">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="86ece-262">Data Lake Store パス (以降では '/') のファイルを開きます。</span><span class="sxs-lookup"><span data-stu-id="86ece-262">The Data Lake Store path (starting with '/') of the file to open.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<stream.Readable>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAcl_1
  name: removeAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-263">指定したファイルまたはディレクトリの既存のアクセス制御リスト (ACL) を削除します。</span><span class="sxs-lookup"><span data-stu-id="86ece-263">Removes the existing Access Control List (ACL) of the specified file or directory.</span></span>
  syntax:
    content: 'function removeAcl(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAcl_2
  name: removeAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-264">指定したファイルまたはディレクトリの既存のアクセス制御リスト (ACL) を削除します。</span><span class="sxs-lookup"><span data-stu-id="86ece-264">Removes the existing Access Control List (ACL) of the specified file or directory.</span></span>
  syntax:
    content: 'function removeAcl(accountName: string, path: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAcl
  name: removeAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-265">指定したファイルまたはディレクトリの既存のアクセス制御リスト (ACL) を削除します。</span><span class="sxs-lookup"><span data-stu-id="86ece-265">Removes the existing Access Control List (ACL) of the specified file or directory.</span></span>
  syntax:
    content: 'function removeAcl(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="86ece-266">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="86ece-266">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="86ece-267">Data Lake Store パス (以降では '/') のファイルまたはディレクトリが削除されている ACL を使用します。</span><span class="sxs-lookup"><span data-stu-id="86ece-267">The Data Lake Store path (starting with '/') of the file or directory with the ACL being removed.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclEntries
  name: removeAclEntries
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-268">既存のファイルまたはフォルダーのアクセス制御リスト (ACL) エントリを削除します。</span><span class="sxs-lookup"><span data-stu-id="86ece-268">Removes existing Access Control List (ACL) entries for a file or folder.</span></span>
  syntax:
    content: 'function removeAclEntries(accountName: string, path: string, aclspec: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="86ece-269">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="86ece-269">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="86ece-270">Data Lake Store パス (以降では '/') のファイルまたはディレクトリが削除されている ACL を使用します。</span><span class="sxs-lookup"><span data-stu-id="86ece-270">The Data Lake Store path (starting with '/') of the file or directory with the ACL being removed.</span></span>
    - id: aclspec
      type:
      - string
      description: >
        <span data-ttu-id="86ece-271">ACL の仕様の形式での ACL の削除操作に含まれる ' [既定:] ユーザー | グループ | その他の '</span><span class="sxs-lookup"><span data-stu-id="86ece-271">The ACL spec included in ACL removal operations in the format '[default:]user|group|other'</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclEntries_2
  name: removeAclEntries
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-272">既存のファイルまたはフォルダーのアクセス制御リスト (ACL) エントリを削除します。</span><span class="sxs-lookup"><span data-stu-id="86ece-272">Removes existing Access Control List (ACL) entries for a file or folder.</span></span>
  syntax:
    content: 'function removeAclEntries(accountName: string, path: string, aclspec: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclEntries_1
  name: removeAclEntries
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-273">既存のファイルまたはフォルダーのアクセス制御リスト (ACL) エントリを削除します。</span><span class="sxs-lookup"><span data-stu-id="86ece-273">Removes existing Access Control List (ACL) entries for a file or folder.</span></span>
  syntax:
    content: 'function removeAclEntries(accountName: string, path: string, aclspec: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclEntriesWithHttpOperationResponse
  name: removeAclEntriesWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-274">既存のファイルまたはフォルダーのアクセス制御リスト (ACL) エントリを削除します。</span><span class="sxs-lookup"><span data-stu-id="86ece-274">Removes existing Access Control List (ACL) entries for a file or folder.</span></span>
  syntax:
    content: 'function removeAclEntriesWithHttpOperationResponse(accountName: string, path: string, aclspec: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="86ece-275">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="86ece-275">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="86ece-276">Data Lake Store パス (以降では '/') のファイルまたはディレクトリが削除されている ACL を使用します。</span><span class="sxs-lookup"><span data-stu-id="86ece-276">The Data Lake Store path (starting with '/') of the file or directory with the ACL being removed.</span></span>
    - id: aclspec
      type:
      - string
      description: >
        <span data-ttu-id="86ece-277">ACL の仕様の形式での ACL の削除操作に含まれる ' [既定:] ユーザー | グループ | その他の '</span><span class="sxs-lookup"><span data-stu-id="86ece-277">The ACL spec included in ACL removal operations in the format '[default:]user|group|other'</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclWithHttpOperationResponse
  name: removeAclWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-278">指定したファイルまたはディレクトリの既存のアクセス制御リスト (ACL) を削除します。</span><span class="sxs-lookup"><span data-stu-id="86ece-278">Removes the existing Access Control List (ACL) of the specified file or directory.</span></span>
  syntax:
    content: 'function removeAclWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="86ece-279">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="86ece-279">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="86ece-280">Data Lake Store パス (以降では '/') のファイルまたはディレクトリが削除されている ACL を使用します。</span><span class="sxs-lookup"><span data-stu-id="86ece-280">The Data Lake Store path (starting with '/') of the file or directory with the ACL being removed.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeDefaultAcl
  name: removeDefaultAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-281">既存既定のアクセス制御リスト (ACL) の指定されたディレクトリを削除します。</span><span class="sxs-lookup"><span data-stu-id="86ece-281">Removes the existing Default Access Control List (ACL) of the specified directory.</span></span>
  syntax:
    content: 'function removeDefaultAcl(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="86ece-282">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="86ece-282">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="86ece-283">Data Lake Store パス (以降では '/') の既定の ACL を削除するディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="86ece-283">The Data Lake Store path (starting with '/') of the directory with the default ACL being removed.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeDefaultAcl_1
  name: removeDefaultAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-284">既存既定のアクセス制御リスト (ACL) の指定されたディレクトリを削除します。</span><span class="sxs-lookup"><span data-stu-id="86ece-284">Removes the existing Default Access Control List (ACL) of the specified directory.</span></span>
  syntax:
    content: 'function removeDefaultAcl(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeDefaultAcl_2
  name: removeDefaultAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-285">既存既定のアクセス制御リスト (ACL) の指定されたディレクトリを削除します。</span><span class="sxs-lookup"><span data-stu-id="86ece-285">Removes the existing Default Access Control List (ACL) of the specified directory.</span></span>
  syntax:
    content: 'function removeDefaultAcl(accountName: string, path: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeDefaultAclWithHttpOperationResponse
  name: removeDefaultAclWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-286">既存既定のアクセス制御リスト (ACL) の指定されたディレクトリを削除します。</span><span class="sxs-lookup"><span data-stu-id="86ece-286">Removes the existing Default Access Control List (ACL) of the specified directory.</span></span>
  syntax:
    content: 'function removeDefaultAclWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="86ece-287">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="86ece-287">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="86ece-288">Data Lake Store パス (以降では '/') の既定の ACL を削除するディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="86ece-288">The Data Lake Store path (starting with '/') of the directory with the default ACL being removed.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.rename
  name: rename
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-289">ファイルまたはディレクトリの名前を変更します。</span><span class="sxs-lookup"><span data-stu-id="86ece-289">Rename a file or directory.</span></span>
  syntax:
    content: 'function rename(accountName: string, path: string, destination: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="86ece-290">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="86ece-290">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="86ece-291">Data Lake Store パス (以降では '/') のファイルまたはディレクトリに移動/名前を変更します。</span><span class="sxs-lookup"><span data-stu-id="86ece-291">The Data Lake Store path (starting with '/') of the file or directory to move/rename.</span></span>
    - id: destination
      type:
      - string
      description: >
        <span data-ttu-id="86ece-292">ファイルまたはフォルダーを名前変更/移動へのパス</span><span class="sxs-lookup"><span data-stu-id="86ece-292">The path to move/rename the file or folder to</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.rename_2
  name: rename
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-293">ファイルまたはディレクトリの名前を変更します。</span><span class="sxs-lookup"><span data-stu-id="86ece-293">Rename a file or directory.</span></span>
  syntax:
    content: 'function rename(accountName: string, path: string, destination: string, options: function, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: destination
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.rename_1
  name: rename
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-294">ファイルまたはディレクトリの名前を変更します。</span><span class="sxs-lookup"><span data-stu-id="86ece-294">Rename a file or directory.</span></span>
  syntax:
    content: 'function rename(accountName: string, path: string, destination: string, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: destination
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.renameWithHttpOperationResponse
  name: renameWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-295">ファイルまたはディレクトリの名前を変更します。</span><span class="sxs-lookup"><span data-stu-id="86ece-295">Rename a file or directory.</span></span>
  syntax:
    content: 'function renameWithHttpOperationResponse(accountName: string, path: string, destination: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="86ece-296">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="86ece-296">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="86ece-297">Data Lake Store パス (以降では '/') のファイルまたはディレクトリに移動/名前を変更します。</span><span class="sxs-lookup"><span data-stu-id="86ece-297">The Data Lake Store path (starting with '/') of the file or directory to move/rename.</span></span>
    - id: destination
      type:
      - string
      description: >
        <span data-ttu-id="86ece-298">ファイルまたはフォルダーを名前変更/移動へのパス</span><span class="sxs-lookup"><span data-stu-id="86ece-298">The path to move/rename the file or folder to</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileOperationResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setAcl
  name: setAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-299">ファイルまたはフォルダーのアクセス制御リスト (ACL) を設定します。</span><span class="sxs-lookup"><span data-stu-id="86ece-299">Sets the Access Control List (ACL) for a file or folder.</span></span>
  syntax:
    content: 'function setAcl(accountName: string, path: string, aclspec: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="86ece-300">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="86ece-300">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="86ece-301">Data Lake Store パス (以降では '/') のファイルまたはディレクトリの ACL を設定します。</span><span class="sxs-lookup"><span data-stu-id="86ece-301">The Data Lake Store path (starting with '/') of the file or directory on which to set the ACL.</span></span>
    - id: aclspec
      type:
      - string
      description: >
        <span data-ttu-id="86ece-302">形式で ACL を作成する操作に含まれる、ACL の仕様 ' [既定:] ユーザー | グループ | その他:: r |-w |-x |-'</span><span class="sxs-lookup"><span data-stu-id="86ece-302">The ACL spec included in ACL creation operations in the format '[default:]user|group|other::r|-w|-x|-'</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setAcl_1
  name: setAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-303">ファイルまたはフォルダーのアクセス制御リスト (ACL) を設定します。</span><span class="sxs-lookup"><span data-stu-id="86ece-303">Sets the Access Control List (ACL) for a file or folder.</span></span>
  syntax:
    content: 'function setAcl(accountName: string, path: string, aclspec: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setAcl_2
  name: setAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-304">ファイルまたはフォルダーのアクセス制御リスト (ACL) を設定します。</span><span class="sxs-lookup"><span data-stu-id="86ece-304">Sets the Access Control List (ACL) for a file or folder.</span></span>
  syntax:
    content: 'function setAcl(accountName: string, path: string, aclspec: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setAclWithHttpOperationResponse
  name: setAclWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-305">ファイルまたはフォルダーのアクセス制御リスト (ACL) を設定します。</span><span class="sxs-lookup"><span data-stu-id="86ece-305">Sets the Access Control List (ACL) for a file or folder.</span></span>
  syntax:
    content: 'function setAclWithHttpOperationResponse(accountName: string, path: string, aclspec: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="86ece-306">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="86ece-306">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="86ece-307">Data Lake Store パス (以降では '/') のファイルまたはディレクトリの ACL を設定します。</span><span class="sxs-lookup"><span data-stu-id="86ece-307">The Data Lake Store path (starting with '/') of the file or directory on which to set the ACL.</span></span>
    - id: aclspec
      type:
      - string
      description: >
        <span data-ttu-id="86ece-308">形式で ACL を作成する操作に含まれる、ACL の仕様 ' [既定:] ユーザー | グループ | その他:: r |-w |-x |-'</span><span class="sxs-lookup"><span data-stu-id="86ece-308">The ACL spec included in ACL creation operations in the format '[default:]user|group|other::r|-w|-x|-'</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setFileExpiry
  name: setFileExpiry
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-309">設定または指定したファイルに有効期限を削除します。</span><span class="sxs-lookup"><span data-stu-id="86ece-309">Sets or removes the expiration time on the specified file.</span></span> <span data-ttu-id="86ece-310">この操作は、ファイルに対してのみ実行できます。</span><span class="sxs-lookup"><span data-stu-id="86ece-310">This operation can only be executed against files.</span></span> <span data-ttu-id="86ece-311">フォルダーを指定することはできません。</span><span class="sxs-lookup"><span data-stu-id="86ece-311">Folders are not supported.</span></span>
  syntax:
    content: 'function setFileExpiry(accountName: string, path: string, expiryOption: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="86ece-312">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="86ece-312">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="86ece-313">Data Lake Store パス (以降では '/') の設定または有効期限を削除するファイル。</span><span class="sxs-lookup"><span data-stu-id="86ece-313">The Data Lake Store path (starting with '/') of the file on which to set or remove the expiration time.</span></span>
    - id: expiryOption
      type:
      - string
      description: >
        <span data-ttu-id="86ece-314">ファイルを使用する有効期限の種類を示します: 1。</span><span class="sxs-lookup"><span data-stu-id="86ece-314">Indicates the type of expiration to use for the file: 1.</span></span> <span data-ttu-id="86ece-315">NeverExpire: ExpireTime は無視されます。</span><span class="sxs-lookup"><span data-stu-id="86ece-315">NeverExpire: ExpireTime is ignored.</span></span> <span data-ttu-id="86ece-316">2.</span><span class="sxs-lookup"><span data-stu-id="86ece-316">2.</span></span> <span data-ttu-id="86ece-317">RelativeToNow: ExpireTime はミリ秒単位のファイルの有効期限が更新されたときに、に対して相対的な有効期限の日付を表す整数です。</span><span class="sxs-lookup"><span data-stu-id="86ece-317">RelativeToNow: ExpireTime is an integer in milliseconds representing the expiration date relative to when file expiration is updated.</span></span> <span data-ttu-id="86ece-318">手順 3.</span><span class="sxs-lookup"><span data-stu-id="86ece-318">3.</span></span> <span data-ttu-id="86ece-319">RelativeToCreationDate: ExpireTime はミリ秒単位のファイルの作成の基準とした有効期限の日付を表す整数です。</span><span class="sxs-lookup"><span data-stu-id="86ece-319">RelativeToCreationDate: ExpireTime is an integer in milliseconds representing the expiration date relative to file creation.</span></span> <span data-ttu-id="86ece-320">4.</span><span class="sxs-lookup"><span data-stu-id="86ece-320">4.</span></span> <span data-ttu-id="86ece-321">絶対値: ExpireTime は整数です (ミリ秒単位) 1970 年 1 月 1 を基準とした Unix タイムスタンプとして 00時 00分: 00 です。</span><span class="sxs-lookup"><span data-stu-id="86ece-321">Absolute: ExpireTime is an integer in milliseconds, as a Unix timestamp relative to 1/1/1970 00:00:00.</span></span> <span data-ttu-id="86ece-322">使用可能な値が含まれます: 'NeverExpire'、'RelativeToNow'、'RelativeToCreationDate'、'Absolute'</span><span class="sxs-lookup"><span data-stu-id="86ece-322">Possible values include: 'NeverExpire', 'RelativeToNow', 'RelativeToCreationDate', 'Absolute'</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setFileExpiry_1
  name: setFileExpiry
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-323">設定または指定したファイルに有効期限を削除します。</span><span class="sxs-lookup"><span data-stu-id="86ece-323">Sets or removes the expiration time on the specified file.</span></span> <span data-ttu-id="86ece-324">この操作は、ファイルに対してのみ実行できます。</span><span class="sxs-lookup"><span data-stu-id="86ece-324">This operation can only be executed against files.</span></span> <span data-ttu-id="86ece-325">フォルダーを指定することはできません。</span><span class="sxs-lookup"><span data-stu-id="86ece-325">Folders are not supported.</span></span>
  syntax:
    content: 'function setFileExpiry(accountName: string, path: string, expiryOption: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: expiryOption
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setFileExpiry_2
  name: setFileExpiry
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-326">設定または指定したファイルに有効期限を削除します。</span><span class="sxs-lookup"><span data-stu-id="86ece-326">Sets or removes the expiration time on the specified file.</span></span> <span data-ttu-id="86ece-327">この操作は、ファイルに対してのみ実行できます。</span><span class="sxs-lookup"><span data-stu-id="86ece-327">This operation can only be executed against files.</span></span> <span data-ttu-id="86ece-328">フォルダーを指定することはできません。</span><span class="sxs-lookup"><span data-stu-id="86ece-328">Folders are not supported.</span></span>
  syntax:
    content: 'function setFileExpiry(accountName: string, path: string, expiryOption: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: expiryOption
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setFileExpiryWithHttpOperationResponse
  name: setFileExpiryWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-329">設定または指定したファイルに有効期限を削除します。</span><span class="sxs-lookup"><span data-stu-id="86ece-329">Sets or removes the expiration time on the specified file.</span></span> <span data-ttu-id="86ece-330">この操作は、ファイルに対してのみ実行できます。</span><span class="sxs-lookup"><span data-stu-id="86ece-330">This operation can only be executed against files.</span></span> <span data-ttu-id="86ece-331">フォルダーを指定することはできません。</span><span class="sxs-lookup"><span data-stu-id="86ece-331">Folders are not supported.</span></span>
  syntax:
    content: 'function setFileExpiryWithHttpOperationResponse(accountName: string, path: string, expiryOption: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="86ece-332">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="86ece-332">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="86ece-333">Data Lake Store パス (以降では '/') の設定または有効期限を削除するファイル。</span><span class="sxs-lookup"><span data-stu-id="86ece-333">The Data Lake Store path (starting with '/') of the file on which to set or remove the expiration time.</span></span>
    - id: expiryOption
      type:
      - string
      description: >
        <span data-ttu-id="86ece-334">ファイルを使用する有効期限の種類を示します: 1。</span><span class="sxs-lookup"><span data-stu-id="86ece-334">Indicates the type of expiration to use for the file: 1.</span></span> <span data-ttu-id="86ece-335">NeverExpire: ExpireTime は無視されます。</span><span class="sxs-lookup"><span data-stu-id="86ece-335">NeverExpire: ExpireTime is ignored.</span></span> <span data-ttu-id="86ece-336">2.</span><span class="sxs-lookup"><span data-stu-id="86ece-336">2.</span></span> <span data-ttu-id="86ece-337">RelativeToNow: ExpireTime はミリ秒単位のファイルの有効期限が更新されたときに、に対して相対的な有効期限の日付を表す整数です。</span><span class="sxs-lookup"><span data-stu-id="86ece-337">RelativeToNow: ExpireTime is an integer in milliseconds representing the expiration date relative to when file expiration is updated.</span></span> <span data-ttu-id="86ece-338">手順 3.</span><span class="sxs-lookup"><span data-stu-id="86ece-338">3.</span></span> <span data-ttu-id="86ece-339">RelativeToCreationDate: ExpireTime はミリ秒単位のファイルの作成の基準とした有効期限の日付を表す整数です。</span><span class="sxs-lookup"><span data-stu-id="86ece-339">RelativeToCreationDate: ExpireTime is an integer in milliseconds representing the expiration date relative to file creation.</span></span> <span data-ttu-id="86ece-340">4.</span><span class="sxs-lookup"><span data-stu-id="86ece-340">4.</span></span> <span data-ttu-id="86ece-341">絶対値: ExpireTime は整数です (ミリ秒単位) 1970 年 1 月 1 を基準とした Unix タイムスタンプとして 00時 00分: 00 です。</span><span class="sxs-lookup"><span data-stu-id="86ece-341">Absolute: ExpireTime is an integer in milliseconds, as a Unix timestamp relative to 1/1/1970 00:00:00.</span></span> <span data-ttu-id="86ece-342">使用可能な値が含まれます: 'NeverExpire'、'RelativeToNow'、'RelativeToCreationDate'、'Absolute'</span><span class="sxs-lookup"><span data-stu-id="86ece-342">Possible values include: 'NeverExpire', 'RelativeToNow', 'RelativeToCreationDate', 'Absolute'</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setOwner
  name: setOwner
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-343">ファイルまたはディレクトリの所有者を設定します。</span><span class="sxs-lookup"><span data-stu-id="86ece-343">Sets the owner of a file or directory.</span></span>
  syntax:
    content: 'function setOwner(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="86ece-344">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="86ece-344">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="86ece-345">Data Lake Store パス (以降では '/') のファイルまたは所有者を設定する対象のディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="86ece-345">The Data Lake Store path (starting with '/') of the file or directory for which to set the owner.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setOwner_1
  name: setOwner
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-346">ファイルまたはディレクトリの所有者を設定します。</span><span class="sxs-lookup"><span data-stu-id="86ece-346">Sets the owner of a file or directory.</span></span>
  syntax:
    content: 'function setOwner(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setOwner_2
  name: setOwner
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-347">ファイルまたはディレクトリの所有者を設定します。</span><span class="sxs-lookup"><span data-stu-id="86ece-347">Sets the owner of a file or directory.</span></span>
  syntax:
    content: 'function setOwner(accountName: string, path: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setOwnerWithHttpOperationResponse
  name: setOwnerWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-348">ファイルまたはディレクトリの所有者を設定します。</span><span class="sxs-lookup"><span data-stu-id="86ece-348">Sets the owner of a file or directory.</span></span>
  syntax:
    content: 'function setOwnerWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="86ece-349">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="86ece-349">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="86ece-350">Data Lake Store パス (以降では '/') のファイルまたは所有者を設定する対象のディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="86ece-350">The Data Lake Store path (starting with '/') of the file or directory for which to set the owner.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setPermission
  name: setPermission
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-351">ファイルまたはフォルダーのアクセス許可を設定します。</span><span class="sxs-lookup"><span data-stu-id="86ece-351">Sets the permission of the file or folder.</span></span>
  syntax:
    content: 'function setPermission(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="86ece-352">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="86ece-352">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="86ece-353">Data Lake Store パス (以降では '/') のファイルまたはアクセス許可を設定する対象のディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="86ece-353">The Data Lake Store path (starting with '/') of the file or directory for which to set the permission.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setPermission_1
  name: setPermission
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-354">ファイルまたはフォルダーのアクセス許可を設定します。</span><span class="sxs-lookup"><span data-stu-id="86ece-354">Sets the permission of the file or folder.</span></span>
  syntax:
    content: 'function setPermission(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setPermission_2
  name: setPermission
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-355">ファイルまたはフォルダーのアクセス許可を設定します。</span><span class="sxs-lookup"><span data-stu-id="86ece-355">Sets the permission of the file or folder.</span></span>
  syntax:
    content: 'function setPermission(accountName: string, path: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setPermissionWithHttpOperationResponse
  name: setPermissionWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="86ece-356">ファイルまたはフォルダーのアクセス許可を設定します。</span><span class="sxs-lookup"><span data-stu-id="86ece-356">Sets the permission of the file or folder.</span></span>
  syntax:
    content: 'function setPermissionWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="86ece-357">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="86ece-357">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="86ece-358">Data Lake Store パス (以降では '/') のファイルまたはアクセス許可を設定する対象のディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="86ece-358">The Data Lake Store path (starting with '/') of the file or directory for which to set the permission.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
references:
- uid: Promise<azure-arm-datalake-store.FileOperationResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: FileOperationResult
    fullName: FileOperationResult
    uid: azure-arm-datalake-store.FileOperationResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.FileOperationResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: FileOperationResult
    fullName: FileOperationResult
    uid: azure-arm-datalake-store.FileOperationResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.FileOperationResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: FileOperationResult
    fullName: FileOperationResult
    uid: azure-arm-datalake-store.FileOperationResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-datalake-store.AclStatusResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: AclStatusResult
    fullName: AclStatusResult
    uid: azure-arm-datalake-store.AclStatusResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.AclStatusResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: AclStatusResult
    fullName: AclStatusResult
    uid: azure-arm-datalake-store.AclStatusResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.AclStatusResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: AclStatusResult
    fullName: AclStatusResult
    uid: azure-arm-datalake-store.AclStatusResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-datalake-store.ContentSummaryResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ContentSummaryResult
    fullName: ContentSummaryResult
    uid: azure-arm-datalake-store.ContentSummaryResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.ContentSummaryResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ContentSummaryResult
    fullName: ContentSummaryResult
    uid: azure-arm-datalake-store.ContentSummaryResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.ContentSummaryResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ContentSummaryResult
    fullName: ContentSummaryResult
    uid: azure-arm-datalake-store.ContentSummaryResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-datalake-store.FileStatusResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: FileStatusResult
    fullName: FileStatusResult
    uid: azure-arm-datalake-store.FileStatusResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.FileStatusResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: FileStatusResult
    fullName: FileStatusResult
    uid: azure-arm-datalake-store.FileStatusResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.FileStatusResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: FileStatusResult
    fullName: FileStatusResult
    uid: azure-arm-datalake-store.FileStatusResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-datalake-store.FileStatusesResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: FileStatusesResult
    fullName: FileStatusesResult
    uid: azure-arm-datalake-store.FileStatusesResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.FileStatusesResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: FileStatusesResult
    fullName: FileStatusesResult
    uid: azure-arm-datalake-store.FileStatusesResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.FileStatusesResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: FileStatusesResult
    fullName: FileStatusesResult
    uid: azure-arm-datalake-store.FileStatusesResult
  - name: '>>'
    fullName: '>>'
