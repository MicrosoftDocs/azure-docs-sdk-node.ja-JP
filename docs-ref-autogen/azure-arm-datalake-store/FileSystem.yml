### YamlMime:UniversalReference
ms.openlocfilehash: 75afaedf2f5e76f076c1167cc227823ca7dc934f
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 08/12/2018
ms.locfileid: "40068801"
items:
- uid: azure-arm-datalake-store.FileSystem
  name: FileSystem
  fullName: FileSystem
  children:
  - azure-arm-datalake-store.FileSystem.append
  - azure-arm-datalake-store.FileSystem.append_1
  - azure-arm-datalake-store.FileSystem.append_2
  - azure-arm-datalake-store.FileSystem.appendWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.checkAccess
  - azure-arm-datalake-store.FileSystem.checkAccess_1
  - azure-arm-datalake-store.FileSystem.checkAccess_2
  - azure-arm-datalake-store.FileSystem.checkAccessWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.concat_1
  - azure-arm-datalake-store.FileSystem.concat
  - azure-arm-datalake-store.FileSystem.concat_2
  - azure-arm-datalake-store.FileSystem.concatWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.concurrentAppend
  - azure-arm-datalake-store.FileSystem.concurrentAppend_1
  - azure-arm-datalake-store.FileSystem.concurrentAppend_2
  - azure-arm-datalake-store.FileSystem.concurrentAppendWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.create_2
  - azure-arm-datalake-store.FileSystem.create
  - azure-arm-datalake-store.FileSystem.create_1
  - azure-arm-datalake-store.FileSystem.createWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.deleteMethod
  - azure-arm-datalake-store.FileSystem.deleteMethod_1
  - azure-arm-datalake-store.FileSystem.deleteMethod_2
  - azure-arm-datalake-store.FileSystem.deleteMethodWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.getAclStatus_1
  - azure-arm-datalake-store.FileSystem.getAclStatus
  - azure-arm-datalake-store.FileSystem.getAclStatus_2
  - azure-arm-datalake-store.FileSystem.getAclStatusWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.getContentSummary
  - azure-arm-datalake-store.FileSystem.getContentSummary_2
  - azure-arm-datalake-store.FileSystem.getContentSummary_1
  - azure-arm-datalake-store.FileSystem.getContentSummaryWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.getFileStatus
  - azure-arm-datalake-store.FileSystem.getFileStatus_1
  - azure-arm-datalake-store.FileSystem.getFileStatus_2
  - azure-arm-datalake-store.FileSystem.getFileStatusWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.listFileStatus_1
  - azure-arm-datalake-store.FileSystem.listFileStatus_2
  - azure-arm-datalake-store.FileSystem.listFileStatus
  - azure-arm-datalake-store.FileSystem.listFileStatusWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.mkdirs
  - azure-arm-datalake-store.FileSystem.mkdirs_1
  - azure-arm-datalake-store.FileSystem.mkdirs_2
  - azure-arm-datalake-store.FileSystem.mkdirsWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.modifyAclEntries
  - azure-arm-datalake-store.FileSystem.modifyAclEntries_1
  - azure-arm-datalake-store.FileSystem.modifyAclEntries_2
  - azure-arm-datalake-store.FileSystem.modifyAclEntriesWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.msConcat
  - azure-arm-datalake-store.FileSystem.msConcat_2
  - azure-arm-datalake-store.FileSystem.msConcat_1
  - azure-arm-datalake-store.FileSystem.msConcatWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.open
  - azure-arm-datalake-store.FileSystem.open_2
  - azure-arm-datalake-store.FileSystem.open_1
  - azure-arm-datalake-store.FileSystem.openWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.removeAcl_1
  - azure-arm-datalake-store.FileSystem.removeAcl_2
  - azure-arm-datalake-store.FileSystem.removeAcl
  - azure-arm-datalake-store.FileSystem.removeAclEntries
  - azure-arm-datalake-store.FileSystem.removeAclEntries_2
  - azure-arm-datalake-store.FileSystem.removeAclEntries_1
  - azure-arm-datalake-store.FileSystem.removeAclEntriesWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.removeAclWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.removeDefaultAcl
  - azure-arm-datalake-store.FileSystem.removeDefaultAcl_1
  - azure-arm-datalake-store.FileSystem.removeDefaultAcl_2
  - azure-arm-datalake-store.FileSystem.removeDefaultAclWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.rename
  - azure-arm-datalake-store.FileSystem.rename_2
  - azure-arm-datalake-store.FileSystem.rename_1
  - azure-arm-datalake-store.FileSystem.renameWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.setAcl
  - azure-arm-datalake-store.FileSystem.setAcl_1
  - azure-arm-datalake-store.FileSystem.setAcl_2
  - azure-arm-datalake-store.FileSystem.setAclWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.setFileExpiry
  - azure-arm-datalake-store.FileSystem.setFileExpiry_1
  - azure-arm-datalake-store.FileSystem.setFileExpiry_2
  - azure-arm-datalake-store.FileSystem.setFileExpiryWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.setOwner
  - azure-arm-datalake-store.FileSystem.setOwner_1
  - azure-arm-datalake-store.FileSystem.setOwner_2
  - azure-arm-datalake-store.FileSystem.setOwnerWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.setPermission
  - azure-arm-datalake-store.FileSystem.setPermission_1
  - azure-arm-datalake-store.FileSystem.setPermission_2
  - azure-arm-datalake-store.FileSystem.setPermissionWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.append
  name: append
  children: []
  type: method
  langs:
  - typeScript
  summary: '使用されるため、シリアルが指定したファイルに追加します。 注: ターゲットは ConcurrentAppend によって追加されたデータを含めないでください。 ConcurrentAppend と追加を同じ意味では使用することはできません。ターゲット ファイルが変更されたこれらのいずれかを使用して追加のオプション、ターゲット ファイルで追加する、他のオプションは使用できません。'
  syntax:
    content: 'function append(accountName: string, path: string, streamContents: stream.Readable, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        ファイルシステム操作を実行する Azure Data Lake Store アカウント。
    - id: path
      type:
      - string
      description: >
        Data Lake Store パス (以降では '/') を追加するファイルの。
    - id: streamContents
      type:
      - stream.Readable
      description: >
        ファイルに追加するときに含めるファイルの内容。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.append_1
  name: append
  children: []
  type: method
  langs:
  - typeScript
  summary: '使用されるため、シリアルが指定したファイルに追加します。 注: ターゲットは ConcurrentAppend によって追加されたデータを含めないでください。 ConcurrentAppend と追加を同じ意味では使用することはできません。ターゲット ファイルが変更されたこれらのいずれかを使用して追加のオプション、ターゲット ファイルで追加する、他のオプションは使用できません。'
  syntax:
    content: 'function append(accountName: string, path: string, streamContents: stream.Readable, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.append_2
  name: append
  children: []
  type: method
  langs:
  - typeScript
  summary: '使用されるため、シリアルが指定したファイルに追加します。 注: ターゲットは ConcurrentAppend によって追加されたデータを含めないでください。 ConcurrentAppend と追加を同じ意味では使用することはできません。ターゲット ファイルが変更されたこれらのいずれかを使用して追加のオプション、ターゲット ファイルで追加する、他のオプションは使用できません。'
  syntax:
    content: 'function append(accountName: string, path: string, streamContents: stream.Readable, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.appendWithHttpOperationResponse
  name: appendWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: '使用されるため、シリアルが指定したファイルに追加します。 注: ターゲットは ConcurrentAppend によって追加されたデータを含めないでください。 ConcurrentAppend と追加を同じ意味では使用することはできません。ターゲット ファイルが変更されたこれらのいずれかを使用して追加のオプション、ターゲット ファイルで追加する、他のオプションは使用できません。'
  syntax:
    content: 'function appendWithHttpOperationResponse(accountName: string, path: string, streamContents: stream.Readable, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        ファイルシステム操作を実行する Azure Data Lake Store アカウント。
    - id: path
      type:
      - string
      description: >
        Data Lake Store パス (以降では '/') を追加するファイルの。
    - id: streamContents
      type:
      - stream.Readable
      description: >
        ファイルに追加するときに含めるファイルの内容。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.checkAccess
  name: checkAccess
  children: []
  type: method
  langs:
  - typeScript
  summary: 指定したアクセスは、指定されたパスに使用可能なかどうかを確認します。
  syntax:
    content: 'function checkAccess(accountName: string, path: string, fsaction: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        ファイルシステム操作を実行する Azure Data Lake Store アカウント。
    - id: path
      type:
      - string
      description: >
        Data Lake Store パス (以降では '/') のファイルまたはディレクトリへのアクセスをチェックします。
    - id: fsaction
      type:
      - string
      description: >
        システム操作読み取り/書き込み/実行の正規表現パターンに一致する文字列形式をファイル ' [rwx-]{3}'
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.checkAccess_1
  name: checkAccess
  children: []
  type: method
  langs:
  - typeScript
  summary: 指定したアクセスは、指定されたパスに使用可能なかどうかを確認します。
  syntax:
    content: 'function checkAccess(accountName: string, path: string, fsaction: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: fsaction
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.checkAccess_2
  name: checkAccess
  children: []
  type: method
  langs:
  - typeScript
  summary: 指定したアクセスは、指定されたパスに使用可能なかどうかを確認します。
  syntax:
    content: 'function checkAccess(accountName: string, path: string, fsaction: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: fsaction
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.checkAccessWithHttpOperationResponse
  name: checkAccessWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: 指定したアクセスは、指定されたパスに使用可能なかどうかを確認します。
  syntax:
    content: 'function checkAccessWithHttpOperationResponse(accountName: string, path: string, fsaction: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        ファイルシステム操作を実行する Azure Data Lake Store アカウント。
    - id: path
      type:
      - string
      description: >
        Data Lake Store パス (以降では '/') のファイルまたはディレクトリへのアクセスをチェックします。
    - id: fsaction
      type:
      - string
      description: >
        システム操作読み取り/書き込み/実行の正規表現パターンに一致する文字列形式をファイル ' [rwx-]{3}'
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concat_1
  name: concat
  children: []
  type: method
  langs:
  - typeScript
  summary: 成功時にすべてのソース ファイルを削除して、目的のファイルにソース ファイルのリストを連結します。
  syntax:
    content: 'function concat(accountName: string, path: string, sources: string[], callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: sources
      type:
      - string[]
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concat
  name: concat
  children: []
  type: method
  langs:
  - typeScript
  summary: 成功時にすべてのソース ファイルを削除して、目的のファイルにソース ファイルのリストを連結します。
  syntax:
    content: 'function concat(accountName: string, path: string, sources: string[], options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        ファイルシステム操作を実行する Azure Data Lake Store アカウント。
    - id: path
      type:
      - string
      description: >
        Data Lake Store パス (以降では '/') の結果を連結したもののコピー先ファイル。
    - id: sources
      type:
      - string[]
      description: >
        一連のコンマ区切りの Data Lake Store パス (以降では '/') を連結する順序で連結するファイル。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concat_2
  name: concat
  children: []
  type: method
  langs:
  - typeScript
  summary: 成功時にすべてのソース ファイルを削除して、目的のファイルにソース ファイルのリストを連結します。
  syntax:
    content: 'function concat(accountName: string, path: string, sources: string[], options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: sources
      type:
      - string[]
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concatWithHttpOperationResponse
  name: concatWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: 成功時にすべてのソース ファイルを削除して、目的のファイルにソース ファイルのリストを連結します。
  syntax:
    content: 'function concatWithHttpOperationResponse(accountName: string, path: string, sources: string[], options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        ファイルシステム操作を実行する Azure Data Lake Store アカウント。
    - id: path
      type:
      - string
      description: >
        Data Lake Store パス (以降では '/') の結果を連結したもののコピー先ファイル。
    - id: sources
      type:
      - string[]
      description: >
        一連のコンマ区切りの Data Lake Store パス (以降では '/') を連結する順序で連結するファイル。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concurrentAppend
  name: concurrentAppend
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    必要に応じて、指定したファイルに追加しますがまだ存在しない場合、最初にファイルを作成します。 このメソッドは、ファイルに複数の同時実行の追加をサポートします。

    注: ターゲットは作成または通常の (シリアル) の追加によって追加されたデータを含めないでください。 ConcurrentAppend と追加を同じ意味では使用することはできません。ターゲット ファイルが変更されたこれらのいずれかを使用して追加のオプション、ターゲット ファイルで追加する、他のオプションは使用できません。 ConcurrentAppend 順序は保証されませんし、ランディング ターゲット ファイルに重複するデータが発生することができます。
  syntax:
    content: 'function concurrentAppend(accountName: string, path: string, streamContents: stream.Readable, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        ファイルシステム操作を実行する Azure Data Lake Store アカウント。
    - id: path
      type:
      - string
      description: >
        Data Lake Store パス (以降では '/') のファイルを追加する同時実行を使用して追加します。
    - id: streamContents
      type:
      - stream.Readable
      description: >
        ファイルに追加するときに含めるファイルの内容。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concurrentAppend_1
  name: concurrentAppend
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    必要に応じて、指定したファイルに追加しますがまだ存在しない場合、最初にファイルを作成します。 このメソッドは、ファイルに複数の同時実行の追加をサポートします。

    注: ターゲットは作成または通常の (シリアル) の追加によって追加されたデータを含めないでください。 ConcurrentAppend と追加を同じ意味では使用することはできません。ターゲット ファイルが変更されたこれらのいずれかを使用して追加のオプション、ターゲット ファイルで追加する、他のオプションは使用できません。 ConcurrentAppend 順序は保証されませんし、ランディング ターゲット ファイルに重複するデータが発生することができます。
  syntax:
    content: 'function concurrentAppend(accountName: string, path: string, streamContents: stream.Readable, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concurrentAppend_2
  name: concurrentAppend
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    必要に応じて、指定したファイルに追加しますがまだ存在しない場合、最初にファイルを作成します。 このメソッドは、ファイルに複数の同時実行の追加をサポートします。

    注: ターゲットは作成または通常の (シリアル) の追加によって追加されたデータを含めないでください。 ConcurrentAppend と追加を同じ意味では使用することはできません。ターゲット ファイルが変更されたこれらのいずれかを使用して追加のオプション、ターゲット ファイルで追加する、他のオプションは使用できません。 ConcurrentAppend 順序は保証されませんし、ランディング ターゲット ファイルに重複するデータが発生することができます。
  syntax:
    content: 'function concurrentAppend(accountName: string, path: string, streamContents: stream.Readable, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concurrentAppendWithHttpOperationResponse
  name: concurrentAppendWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    必要に応じて、指定したファイルに追加しますがまだ存在しない場合、最初にファイルを作成します。 このメソッドは、ファイルに複数の同時実行の追加をサポートします。

    注: ターゲットは作成または通常の (シリアル) の追加によって追加されたデータを含めないでください。 ConcurrentAppend と追加を同じ意味では使用することはできません。ターゲット ファイルが変更されたこれらのいずれかを使用して追加のオプション、ターゲット ファイルで追加する、他のオプションは使用できません。 ConcurrentAppend 順序は保証されませんし、ランディング ターゲット ファイルに重複するデータが発生することができます。
  syntax:
    content: 'function concurrentAppendWithHttpOperationResponse(accountName: string, path: string, streamContents: stream.Readable, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        ファイルシステム操作を実行する Azure Data Lake Store アカウント。
    - id: path
      type:
      - string
      description: >
        Data Lake Store パス (以降では '/') のファイルを追加する同時実行を使用して追加します。
    - id: streamContents
      type:
      - stream.Readable
      description: >
        ファイルに追加するときに含めるファイルの内容。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.create_2
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: '必要に応じて指定したコンテンツを含むファイルを作成します。 注: コンテンツが指定されている場合、結果として得られるファイルは変更できません ConcurrentAppend を使用します。'
  syntax:
    content: 'function create(accountName: string, path: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.create
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: '必要に応じて指定したコンテンツを含むファイルを作成します。 注: コンテンツが指定されている場合、結果として得られるファイルは変更できません ConcurrentAppend を使用します。'
  syntax:
    content: 'function create(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        ファイルシステム操作を実行する Azure Data Lake Store アカウント。
    - id: path
      type:
      - string
      description: >
        Data Lake Store パス (以降では '/') のファイルを作成します。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.create_1
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: '必要に応じて指定したコンテンツを含むファイルを作成します。 注: コンテンツが指定されている場合、結果として得られるファイルは変更できません ConcurrentAppend を使用します。'
  syntax:
    content: 'function create(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.createWithHttpOperationResponse
  name: createWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: '必要に応じて指定したコンテンツを含むファイルを作成します。 注: コンテンツが指定されている場合、結果として得られるファイルは変更できません ConcurrentAppend を使用します。'
  syntax:
    content: 'function createWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        ファイルシステム操作を実行する Azure Data Lake Store アカウント。
    - id: path
      type:
      - string
      description: >
        Data Lake Store パス (以降では '/') のファイルを作成します。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.deleteMethod
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: 要求されたファイルまたはディレクトリ、必要に応じて再帰的に削除します。
  syntax:
    content: 'function deleteMethod(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        ファイルシステム操作を実行する Azure Data Lake Store アカウント。
    - id: path
      type:
      - string
      description: >
        Data Lake Store パス (以降では '/') のファイルまたはディレクトリを削除します。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.deleteMethod_1
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: 要求されたファイルまたはディレクトリ、必要に応じて再帰的に削除します。
  syntax:
    content: 'function deleteMethod(accountName: string, path: string, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.deleteMethod_2
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: 要求されたファイルまたはディレクトリ、必要に応じて再帰的に削除します。
  syntax:
    content: 'function deleteMethod(accountName: string, path: string, options: function, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: 要求されたファイルまたはディレクトリ、必要に応じて再帰的に削除します。
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        ファイルシステム操作を実行する Azure Data Lake Store アカウント。
    - id: path
      type:
      - string
      description: >
        Data Lake Store パス (以降では '/') のファイルまたはディレクトリを削除します。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileOperationResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getAclStatus_1
  name: getAclStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: 指定したファイルまたはディレクトリのアクセス制御リスト (ACL) エントリを取得します。
  syntax:
    content: 'function getAclStatus(accountName: string, path: string, callback: ServiceCallback<AclStatusResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.AclStatusResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.AclStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getAclStatus
  name: getAclStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: 指定したファイルまたはディレクトリのアクセス制御リスト (ACL) エントリを取得します。
  syntax:
    content: 'function getAclStatus(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        ファイルシステム操作を実行する Azure Data Lake Store アカウント。
    - id: path
      type:
      - string
      description: >
        Data Lake Store パス (以降では '/') のファイルまたはディレクトリの ACL を取得します。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.AclStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getAclStatus_2
  name: getAclStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: 指定したファイルまたはディレクトリのアクセス制御リスト (ACL) エントリを取得します。
  syntax:
    content: 'function getAclStatus(accountName: string, path: string, options: function, callback: ServiceCallback<AclStatusResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.AclStatusResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.AclStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getAclStatusWithHttpOperationResponse
  name: getAclStatusWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: 指定したファイルまたはディレクトリのアクセス制御リスト (ACL) エントリを取得します。
  syntax:
    content: 'function getAclStatusWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        ファイルシステム操作を実行する Azure Data Lake Store アカウント。
    - id: path
      type:
      - string
      description: >
        Data Lake Store パス (以降では '/') のファイルまたはディレクトリの ACL を取得します。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.AclStatusResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getContentSummary
  name: getContentSummary
  children: []
  type: method
  langs:
  - typeScript
  summary: ファイル パスで指定された、ファイルのコンテンツの概要オブジェクトを取得します。
  syntax:
    content: 'function getContentSummary(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        ファイルシステム操作を実行する Azure Data Lake Store アカウント。
    - id: path
      type:
      - string
      description: >
        Data Lake Store パス (以降では '/') の概要を取得する対象のファイル。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.ContentSummaryResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getContentSummary_2
  name: getContentSummary
  children: []
  type: method
  langs:
  - typeScript
  summary: ファイル パスで指定された、ファイルのコンテンツの概要オブジェクトを取得します。
  syntax:
    content: 'function getContentSummary(accountName: string, path: string, options: function, callback: ServiceCallback<ContentSummaryResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.ContentSummaryResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.ContentSummaryResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getContentSummary_1
  name: getContentSummary
  children: []
  type: method
  langs:
  - typeScript
  summary: ファイル パスで指定された、ファイルのコンテンツの概要オブジェクトを取得します。
  syntax:
    content: 'function getContentSummary(accountName: string, path: string, callback: ServiceCallback<ContentSummaryResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.ContentSummaryResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.ContentSummaryResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getContentSummaryWithHttpOperationResponse
  name: getContentSummaryWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ファイル パスで指定された、ファイルのコンテンツの概要オブジェクトを取得します。
  syntax:
    content: 'function getContentSummaryWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        ファイルシステム操作を実行する Azure Data Lake Store アカウント。
    - id: path
      type:
      - string
      description: >
        Data Lake Store パス (以降では '/') の概要を取得する対象のファイル。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.ContentSummaryResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getFileStatus
  name: getFileStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: ファイルのパスで指定されたファイルの状態オブジェクトを取得します。
  syntax:
    content: 'function getFileStatus(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        ファイルシステム操作を実行する Azure Data Lake Store アカウント。
    - id: path
      type:
      - string
      description: >
        Data Lake Store パス (以降では '/') のファイルまたは状態を取得する対象のディレクトリ。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getFileStatus_1
  name: getFileStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: ファイルのパスで指定されたファイルの状態オブジェクトを取得します。
  syntax:
    content: 'function getFileStatus(accountName: string, path: string, callback: ServiceCallback<FileStatusResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileStatusResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getFileStatus_2
  name: getFileStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: ファイルのパスで指定されたファイルの状態オブジェクトを取得します。
  syntax:
    content: 'function getFileStatus(accountName: string, path: string, options: function, callback: ServiceCallback<FileStatusResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileStatusResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getFileStatusWithHttpOperationResponse
  name: getFileStatusWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ファイルのパスで指定されたファイルの状態オブジェクトを取得します。
  syntax:
    content: 'function getFileStatusWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        ファイルシステム操作を実行する Azure Data Lake Store アカウント。
    - id: path
      type:
      - string
      description: >
        Data Lake Store パス (以降では '/') のファイルまたは状態を取得する対象のディレクトリ。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileStatusResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.listFileStatus_1
  name: listFileStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: ファイルのパスと省略可能な改ページ パラメーターで指定されたファイルの状態オブジェクトの一覧を取得します。
  syntax:
    content: 'function listFileStatus(accountName: string, path: string, callback: ServiceCallback<FileStatusesResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileStatusesResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusesResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.listFileStatus_2
  name: listFileStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: ファイルのパスと省略可能な改ページ パラメーターで指定されたファイルの状態オブジェクトの一覧を取得します。
  syntax:
    content: 'function listFileStatus(accountName: string, path: string, options: function, callback: ServiceCallback<FileStatusesResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileStatusesResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusesResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.listFileStatus
  name: listFileStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: ファイルのパスと省略可能な改ページ パラメーターで指定されたファイルの状態オブジェクトの一覧を取得します。
  syntax:
    content: 'function listFileStatus(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        ファイルシステム操作を実行する Azure Data Lake Store アカウント。
    - id: path
      type:
      - string
      description: >
        Data Lake Store パス (以降では '/') のリストにディレクトリ。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusesResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.listFileStatusWithHttpOperationResponse
  name: listFileStatusWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ファイルのパスと省略可能な改ページ パラメーターで指定されたファイルの状態オブジェクトの一覧を取得します。
  syntax:
    content: 'function listFileStatusWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        ファイルシステム操作を実行する Azure Data Lake Store アカウント。
    - id: path
      type:
      - string
      description: >
        Data Lake Store パス (以降では '/') のリストにディレクトリ。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileStatusesResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.mkdirs
  name: mkdirs
  children: []
  type: method
  langs:
  - typeScript
  summary: ディレクトリを作成します。
  syntax:
    content: 'function mkdirs(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        ファイルシステム操作を実行する Azure Data Lake Store アカウント。
    - id: path
      type:
      - string
      description: >
        Data Lake Store パス (以降では '/') を作成するディレクトリ。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.mkdirs_1
  name: mkdirs
  children: []
  type: method
  langs:
  - typeScript
  summary: ディレクトリを作成します。
  syntax:
    content: 'function mkdirs(accountName: string, path: string, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.mkdirs_2
  name: mkdirs
  children: []
  type: method
  langs:
  - typeScript
  summary: ディレクトリを作成します。
  syntax:
    content: 'function mkdirs(accountName: string, path: string, options: function, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.mkdirsWithHttpOperationResponse
  name: mkdirsWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ディレクトリを作成します。
  syntax:
    content: 'function mkdirsWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        ファイルシステム操作を実行する Azure Data Lake Store アカウント。
    - id: path
      type:
      - string
      description: >
        Data Lake Store パス (以降では '/') を作成するディレクトリ。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileOperationResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.modifyAclEntries
  name: modifyAclEntries
  children: []
  type: method
  langs:
  - typeScript
  summary: ファイルまたはフォルダーの既存のアクセス制御リスト (ACL) エントリを変更します。
  syntax:
    content: 'function modifyAclEntries(accountName: string, path: string, aclspec: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        ファイルシステム操作を実行する Azure Data Lake Store アカウント。
    - id: path
      type:
      - string
      description: >
        Data Lake Store パス (以降では '/') のファイルまたはディレクトリが変更されている ACL を使用します。
    - id: aclspec
      type:
      - string
      description: >
        ACL の仕様の形式での ACL の変更操作に含まれる ' [既定:] ユーザー | グループ | その他:: r |-w |-x |-'
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.modifyAclEntries_1
  name: modifyAclEntries
  children: []
  type: method
  langs:
  - typeScript
  summary: ファイルまたはフォルダーの既存のアクセス制御リスト (ACL) エントリを変更します。
  syntax:
    content: 'function modifyAclEntries(accountName: string, path: string, aclspec: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.modifyAclEntries_2
  name: modifyAclEntries
  children: []
  type: method
  langs:
  - typeScript
  summary: ファイルまたはフォルダーの既存のアクセス制御リスト (ACL) エントリを変更します。
  syntax:
    content: 'function modifyAclEntries(accountName: string, path: string, aclspec: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.modifyAclEntriesWithHttpOperationResponse
  name: modifyAclEntriesWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ファイルまたはフォルダーの既存のアクセス制御リスト (ACL) エントリを変更します。
  syntax:
    content: 'function modifyAclEntriesWithHttpOperationResponse(accountName: string, path: string, aclspec: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        ファイルシステム操作を実行する Azure Data Lake Store アカウント。
    - id: path
      type:
      - string
      description: >
        Data Lake Store パス (以降では '/') のファイルまたはディレクトリが変更されている ACL を使用します。
    - id: aclspec
      type:
      - string
      description: >
        ACL の仕様の形式での ACL の変更操作に含まれる ' [既定:] ユーザー | グループ | その他:: r |-w |-x |-'
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.msConcat
  name: msConcat
  children: []
  type: method
  langs:
  - typeScript
  summary: 成功時にすべてのソース ファイルを削除して、目的のファイルにソース ファイルのリストを連結します。 このメソッドは、Concat メソッドよりも多くのソース ファイルのパスを受け取ります。 このメソッドと、受け取るパラメーターは、使いやすさ、今後のバージョンでの変更される可能性が。
  syntax:
    content: 'function msConcat(accountName: string, path: string, streamContents: stream.Readable, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        ファイルシステム操作を実行する Azure Data Lake Store アカウント。
    - id: path
      type:
      - string
      description: >
        Data Lake Store パス (以降では '/') の結果を連結したもののコピー先ファイル。
    - id: streamContents
      type:
      - stream.Readable
      description: >
        Data Lake Store パスの一覧 (以降では '/') のソース ファイル。 形式でコンマで区切られたパスの一覧でなければなりません: sources=/file/path/1.txt,/file/path/2.txt,/file/path/lastfile.csv
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.msConcat_2
  name: msConcat
  children: []
  type: method
  langs:
  - typeScript
  summary: 成功時にすべてのソース ファイルを削除して、目的のファイルにソース ファイルのリストを連結します。 このメソッドは、Concat メソッドよりも多くのソース ファイルのパスを受け取ります。 このメソッドと、受け取るパラメーターは、使いやすさ、今後のバージョンでの変更される可能性が。
  syntax:
    content: 'function msConcat(accountName: string, path: string, streamContents: stream.Readable, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.msConcat_1
  name: msConcat
  children: []
  type: method
  langs:
  - typeScript
  summary: 成功時にすべてのソース ファイルを削除して、目的のファイルにソース ファイルのリストを連結します。 このメソッドは、Concat メソッドよりも多くのソース ファイルのパスを受け取ります。 このメソッドと、受け取るパラメーターは、使いやすさ、今後のバージョンでの変更される可能性が。
  syntax:
    content: 'function msConcat(accountName: string, path: string, streamContents: stream.Readable, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.msConcatWithHttpOperationResponse
  name: msConcatWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: 成功時にすべてのソース ファイルを削除して、目的のファイルにソース ファイルのリストを連結します。 このメソッドは、Concat メソッドよりも多くのソース ファイルのパスを受け取ります。 このメソッドと、受け取るパラメーターは、使いやすさ、今後のバージョンでの変更される可能性が。
  syntax:
    content: 'function msConcatWithHttpOperationResponse(accountName: string, path: string, streamContents: stream.Readable, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        ファイルシステム操作を実行する Azure Data Lake Store アカウント。
    - id: path
      type:
      - string
      description: >
        Data Lake Store パス (以降では '/') の結果を連結したもののコピー先ファイル。
    - id: streamContents
      type:
      - stream.Readable
      description: >
        Data Lake Store パスの一覧 (以降では '/') のソース ファイル。 形式でコンマで区切られたパスの一覧でなければなりません: sources=/file/path/1.txt,/file/path/2.txt,/file/path/lastfile.csv
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.open
  name: open
  children: []
  type: method
  langs:
  - typeScript
  summary: 開き、指定したファイルから読み取ります。
  syntax:
    content: 'function open(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        ファイルシステム操作を実行する Azure Data Lake Store アカウント。
    - id: path
      type:
      - string
      description: >
        Data Lake Store パス (以降では '/') のファイルを開きます。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<stream.Readable>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.open_2
  name: open
  children: []
  type: method
  langs:
  - typeScript
  summary: 開き、指定したファイルから読み取ります。
  syntax:
    content: 'function open(accountName: string, path: string, options: function, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.open_1
  name: open
  children: []
  type: method
  langs:
  - typeScript
  summary: 開き、指定したファイルから読み取ります。
  syntax:
    content: 'function open(accountName: string, path: string, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.openWithHttpOperationResponse
  name: openWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: 開き、指定したファイルから読み取ります。
  syntax:
    content: 'function openWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        ファイルシステム操作を実行する Azure Data Lake Store アカウント。
    - id: path
      type:
      - string
      description: >
        Data Lake Store パス (以降では '/') のファイルを開きます。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<stream.Readable>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAcl_1
  name: removeAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: 指定したファイルまたはディレクトリの既存のアクセス制御リスト (ACL) を削除します。
  syntax:
    content: 'function removeAcl(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAcl_2
  name: removeAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: 指定したファイルまたはディレクトリの既存のアクセス制御リスト (ACL) を削除します。
  syntax:
    content: 'function removeAcl(accountName: string, path: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAcl
  name: removeAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: 指定したファイルまたはディレクトリの既存のアクセス制御リスト (ACL) を削除します。
  syntax:
    content: 'function removeAcl(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        ファイルシステム操作を実行する Azure Data Lake Store アカウント。
    - id: path
      type:
      - string
      description: >
        Data Lake Store パス (以降では '/') のファイルまたはディレクトリが削除されている ACL を使用します。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclEntries
  name: removeAclEntries
  children: []
  type: method
  langs:
  - typeScript
  summary: 既存のファイルまたはフォルダーのアクセス制御リスト (ACL) エントリを削除します。
  syntax:
    content: 'function removeAclEntries(accountName: string, path: string, aclspec: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        ファイルシステム操作を実行する Azure Data Lake Store アカウント。
    - id: path
      type:
      - string
      description: >
        Data Lake Store パス (以降では '/') のファイルまたはディレクトリが削除されている ACL を使用します。
    - id: aclspec
      type:
      - string
      description: >
        ACL の仕様の形式での ACL の削除操作に含まれる ' [既定:] ユーザー | グループ | その他の '
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclEntries_2
  name: removeAclEntries
  children: []
  type: method
  langs:
  - typeScript
  summary: 既存のファイルまたはフォルダーのアクセス制御リスト (ACL) エントリを削除します。
  syntax:
    content: 'function removeAclEntries(accountName: string, path: string, aclspec: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclEntries_1
  name: removeAclEntries
  children: []
  type: method
  langs:
  - typeScript
  summary: 既存のファイルまたはフォルダーのアクセス制御リスト (ACL) エントリを削除します。
  syntax:
    content: 'function removeAclEntries(accountName: string, path: string, aclspec: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclEntriesWithHttpOperationResponse
  name: removeAclEntriesWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: 既存のファイルまたはフォルダーのアクセス制御リスト (ACL) エントリを削除します。
  syntax:
    content: 'function removeAclEntriesWithHttpOperationResponse(accountName: string, path: string, aclspec: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        ファイルシステム操作を実行する Azure Data Lake Store アカウント。
    - id: path
      type:
      - string
      description: >
        Data Lake Store パス (以降では '/') のファイルまたはディレクトリが削除されている ACL を使用します。
    - id: aclspec
      type:
      - string
      description: >
        ACL の仕様の形式での ACL の削除操作に含まれる ' [既定:] ユーザー | グループ | その他の '
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclWithHttpOperationResponse
  name: removeAclWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: 指定したファイルまたはディレクトリの既存のアクセス制御リスト (ACL) を削除します。
  syntax:
    content: 'function removeAclWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        ファイルシステム操作を実行する Azure Data Lake Store アカウント。
    - id: path
      type:
      - string
      description: >
        Data Lake Store パス (以降では '/') のファイルまたはディレクトリが削除されている ACL を使用します。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeDefaultAcl
  name: removeDefaultAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: 既存既定のアクセス制御リスト (ACL) の指定されたディレクトリを削除します。
  syntax:
    content: 'function removeDefaultAcl(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        ファイルシステム操作を実行する Azure Data Lake Store アカウント。
    - id: path
      type:
      - string
      description: >
        Data Lake Store パス (以降では '/') の既定の ACL を削除するディレクトリ。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeDefaultAcl_1
  name: removeDefaultAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: 既存既定のアクセス制御リスト (ACL) の指定されたディレクトリを削除します。
  syntax:
    content: 'function removeDefaultAcl(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeDefaultAcl_2
  name: removeDefaultAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: 既存既定のアクセス制御リスト (ACL) の指定されたディレクトリを削除します。
  syntax:
    content: 'function removeDefaultAcl(accountName: string, path: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeDefaultAclWithHttpOperationResponse
  name: removeDefaultAclWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: 既存既定のアクセス制御リスト (ACL) の指定されたディレクトリを削除します。
  syntax:
    content: 'function removeDefaultAclWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        ファイルシステム操作を実行する Azure Data Lake Store アカウント。
    - id: path
      type:
      - string
      description: >
        Data Lake Store パス (以降では '/') の既定の ACL を削除するディレクトリ。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.rename
  name: rename
  children: []
  type: method
  langs:
  - typeScript
  summary: ファイルまたはディレクトリの名前を変更します。
  syntax:
    content: 'function rename(accountName: string, path: string, destination: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        ファイルシステム操作を実行する Azure Data Lake Store アカウント。
    - id: path
      type:
      - string
      description: >
        Data Lake Store パス (以降では '/') のファイルまたはディレクトリに移動/名前を変更します。
    - id: destination
      type:
      - string
      description: >
        ファイルまたはフォルダーを名前変更/移動へのパス
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.rename_2
  name: rename
  children: []
  type: method
  langs:
  - typeScript
  summary: ファイルまたはディレクトリの名前を変更します。
  syntax:
    content: 'function rename(accountName: string, path: string, destination: string, options: function, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: destination
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.rename_1
  name: rename
  children: []
  type: method
  langs:
  - typeScript
  summary: ファイルまたはディレクトリの名前を変更します。
  syntax:
    content: 'function rename(accountName: string, path: string, destination: string, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: destination
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.renameWithHttpOperationResponse
  name: renameWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ファイルまたはディレクトリの名前を変更します。
  syntax:
    content: 'function renameWithHttpOperationResponse(accountName: string, path: string, destination: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        ファイルシステム操作を実行する Azure Data Lake Store アカウント。
    - id: path
      type:
      - string
      description: >
        Data Lake Store パス (以降では '/') のファイルまたはディレクトリに移動/名前を変更します。
    - id: destination
      type:
      - string
      description: >
        ファイルまたはフォルダーを名前変更/移動へのパス
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileOperationResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setAcl
  name: setAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: ファイルまたはフォルダーのアクセス制御リスト (ACL) を設定します。
  syntax:
    content: 'function setAcl(accountName: string, path: string, aclspec: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        ファイルシステム操作を実行する Azure Data Lake Store アカウント。
    - id: path
      type:
      - string
      description: >
        Data Lake Store パス (以降では '/') のファイルまたはディレクトリの ACL を設定します。
    - id: aclspec
      type:
      - string
      description: >
        形式で ACL を作成する操作に含まれる、ACL の仕様 ' [既定:] ユーザー | グループ | その他:: r |-w |-x |-'
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setAcl_1
  name: setAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: ファイルまたはフォルダーのアクセス制御リスト (ACL) を設定します。
  syntax:
    content: 'function setAcl(accountName: string, path: string, aclspec: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setAcl_2
  name: setAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: ファイルまたはフォルダーのアクセス制御リスト (ACL) を設定します。
  syntax:
    content: 'function setAcl(accountName: string, path: string, aclspec: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setAclWithHttpOperationResponse
  name: setAclWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ファイルまたはフォルダーのアクセス制御リスト (ACL) を設定します。
  syntax:
    content: 'function setAclWithHttpOperationResponse(accountName: string, path: string, aclspec: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        ファイルシステム操作を実行する Azure Data Lake Store アカウント。
    - id: path
      type:
      - string
      description: >
        Data Lake Store パス (以降では '/') のファイルまたはディレクトリの ACL を設定します。
    - id: aclspec
      type:
      - string
      description: >
        形式で ACL を作成する操作に含まれる、ACL の仕様 ' [既定:] ユーザー | グループ | その他:: r |-w |-x |-'
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setFileExpiry
  name: setFileExpiry
  children: []
  type: method
  langs:
  - typeScript
  summary: 設定または指定したファイルに有効期限を削除します。 この操作は、ファイルに対してのみ実行できます。 フォルダーを指定することはできません。
  syntax:
    content: 'function setFileExpiry(accountName: string, path: string, expiryOption: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        ファイルシステム操作を実行する Azure Data Lake Store アカウント。
    - id: path
      type:
      - string
      description: >
        Data Lake Store パス (以降では '/') の設定または有効期限を削除するファイル。
    - id: expiryOption
      type:
      - string
      description: >
        ファイルを使用する有効期限の種類を示します: 1。 NeverExpire: ExpireTime は無視されます。 2. RelativeToNow: ExpireTime はミリ秒単位のファイルの有効期限が更新されたときに、に対して相対的な有効期限の日付を表す整数です。 手順 3. RelativeToCreationDate: ExpireTime はミリ秒単位のファイルの作成の基準とした有効期限の日付を表す整数です。 4. 絶対値: ExpireTime は整数です (ミリ秒単位) 1970 年 1 月 1 を基準とした Unix タイムスタンプとして 00時 00分: 00 です。 使用可能な値が含まれます: 'NeverExpire'、'RelativeToNow'、'RelativeToCreationDate'、'Absolute'
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setFileExpiry_1
  name: setFileExpiry
  children: []
  type: method
  langs:
  - typeScript
  summary: 設定または指定したファイルに有効期限を削除します。 この操作は、ファイルに対してのみ実行できます。 フォルダーを指定することはできません。
  syntax:
    content: 'function setFileExpiry(accountName: string, path: string, expiryOption: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: expiryOption
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setFileExpiry_2
  name: setFileExpiry
  children: []
  type: method
  langs:
  - typeScript
  summary: 設定または指定したファイルに有効期限を削除します。 この操作は、ファイルに対してのみ実行できます。 フォルダーを指定することはできません。
  syntax:
    content: 'function setFileExpiry(accountName: string, path: string, expiryOption: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: expiryOption
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setFileExpiryWithHttpOperationResponse
  name: setFileExpiryWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: 設定または指定したファイルに有効期限を削除します。 この操作は、ファイルに対してのみ実行できます。 フォルダーを指定することはできません。
  syntax:
    content: 'function setFileExpiryWithHttpOperationResponse(accountName: string, path: string, expiryOption: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        ファイルシステム操作を実行する Azure Data Lake Store アカウント。
    - id: path
      type:
      - string
      description: >
        Data Lake Store パス (以降では '/') の設定または有効期限を削除するファイル。
    - id: expiryOption
      type:
      - string
      description: >
        ファイルを使用する有効期限の種類を示します: 1。 NeverExpire: ExpireTime は無視されます。 2. RelativeToNow: ExpireTime はミリ秒単位のファイルの有効期限が更新されたときに、に対して相対的な有効期限の日付を表す整数です。 手順 3. RelativeToCreationDate: ExpireTime はミリ秒単位のファイルの作成の基準とした有効期限の日付を表す整数です。 4. 絶対値: ExpireTime は整数です (ミリ秒単位) 1970 年 1 月 1 を基準とした Unix タイムスタンプとして 00時 00分: 00 です。 使用可能な値が含まれます: 'NeverExpire'、'RelativeToNow'、'RelativeToCreationDate'、'Absolute'
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setOwner
  name: setOwner
  children: []
  type: method
  langs:
  - typeScript
  summary: ファイルまたはディレクトリの所有者を設定します。
  syntax:
    content: 'function setOwner(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        ファイルシステム操作を実行する Azure Data Lake Store アカウント。
    - id: path
      type:
      - string
      description: >
        Data Lake Store パス (以降では '/') のファイルまたは所有者を設定する対象のディレクトリ。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setOwner_1
  name: setOwner
  children: []
  type: method
  langs:
  - typeScript
  summary: ファイルまたはディレクトリの所有者を設定します。
  syntax:
    content: 'function setOwner(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setOwner_2
  name: setOwner
  children: []
  type: method
  langs:
  - typeScript
  summary: ファイルまたはディレクトリの所有者を設定します。
  syntax:
    content: 'function setOwner(accountName: string, path: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setOwnerWithHttpOperationResponse
  name: setOwnerWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ファイルまたはディレクトリの所有者を設定します。
  syntax:
    content: 'function setOwnerWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        ファイルシステム操作を実行する Azure Data Lake Store アカウント。
    - id: path
      type:
      - string
      description: >
        Data Lake Store パス (以降では '/') のファイルまたは所有者を設定する対象のディレクトリ。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setPermission
  name: setPermission
  children: []
  type: method
  langs:
  - typeScript
  summary: ファイルまたはフォルダーのアクセス許可を設定します。
  syntax:
    content: 'function setPermission(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        ファイルシステム操作を実行する Azure Data Lake Store アカウント。
    - id: path
      type:
      - string
      description: >
        Data Lake Store パス (以降では '/') のファイルまたはアクセス許可を設定する対象のディレクトリ。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setPermission_1
  name: setPermission
  children: []
  type: method
  langs:
  - typeScript
  summary: ファイルまたはフォルダーのアクセス許可を設定します。
  syntax:
    content: 'function setPermission(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setPermission_2
  name: setPermission
  children: []
  type: method
  langs:
  - typeScript
  summary: ファイルまたはフォルダーのアクセス許可を設定します。
  syntax:
    content: 'function setPermission(accountName: string, path: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setPermissionWithHttpOperationResponse
  name: setPermissionWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ファイルまたはフォルダーのアクセス許可を設定します。
  syntax:
    content: 'function setPermissionWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        ファイルシステム操作を実行する Azure Data Lake Store アカウント。
    - id: path
      type:
      - string
      description: >
        Data Lake Store パス (以降では '/') のファイルまたはアクセス許可を設定する対象のディレクトリ。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
references:
- uid: Promise<azure-arm-datalake-store.FileOperationResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: FileOperationResult
    fullName: FileOperationResult
    uid: azure-arm-datalake-store.FileOperationResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.FileOperationResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: FileOperationResult
    fullName: FileOperationResult
    uid: azure-arm-datalake-store.FileOperationResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.FileOperationResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: FileOperationResult
    fullName: FileOperationResult
    uid: azure-arm-datalake-store.FileOperationResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-datalake-store.AclStatusResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: AclStatusResult
    fullName: AclStatusResult
    uid: azure-arm-datalake-store.AclStatusResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.AclStatusResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: AclStatusResult
    fullName: AclStatusResult
    uid: azure-arm-datalake-store.AclStatusResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.AclStatusResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: AclStatusResult
    fullName: AclStatusResult
    uid: azure-arm-datalake-store.AclStatusResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-datalake-store.ContentSummaryResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ContentSummaryResult
    fullName: ContentSummaryResult
    uid: azure-arm-datalake-store.ContentSummaryResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.ContentSummaryResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ContentSummaryResult
    fullName: ContentSummaryResult
    uid: azure-arm-datalake-store.ContentSummaryResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.ContentSummaryResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ContentSummaryResult
    fullName: ContentSummaryResult
    uid: azure-arm-datalake-store.ContentSummaryResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-datalake-store.FileStatusResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: FileStatusResult
    fullName: FileStatusResult
    uid: azure-arm-datalake-store.FileStatusResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.FileStatusResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: FileStatusResult
    fullName: FileStatusResult
    uid: azure-arm-datalake-store.FileStatusResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.FileStatusResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: FileStatusResult
    fullName: FileStatusResult
    uid: azure-arm-datalake-store.FileStatusResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-datalake-store.FileStatusesResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: FileStatusesResult
    fullName: FileStatusesResult
    uid: azure-arm-datalake-store.FileStatusesResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.FileStatusesResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: FileStatusesResult
    fullName: FileStatusesResult
    uid: azure-arm-datalake-store.FileStatusesResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.FileStatusesResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: FileStatusesResult
    fullName: FileStatusesResult
    uid: azure-arm-datalake-store.FileStatusesResult
  - name: '>>'
    fullName: '>>'
