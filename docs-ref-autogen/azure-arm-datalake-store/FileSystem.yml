### YamlMime:UniversalReference
ms.openlocfilehash: 051668180977efad82270f671a6fb69557e2d712
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 12/13/2018
ms.locfileid: "52044987"
items:
- uid: azure-arm-datalake-store.FileSystem
  name: FileSystem
  fullName: FileSystem
  children:
  - azure-arm-datalake-store.FileSystem.append
  - azure-arm-datalake-store.FileSystem.append_2
  - azure-arm-datalake-store.FileSystem.append_1
  - azure-arm-datalake-store.FileSystem.appendWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.checkAccess
  - azure-arm-datalake-store.FileSystem.checkAccess_2
  - azure-arm-datalake-store.FileSystem.checkAccess_1
  - azure-arm-datalake-store.FileSystem.checkAccessWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.concat
  - azure-arm-datalake-store.FileSystem.concat_2
  - azure-arm-datalake-store.FileSystem.concat_1
  - azure-arm-datalake-store.FileSystem.concatWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.concurrentAppend
  - azure-arm-datalake-store.FileSystem.concurrentAppend_2
  - azure-arm-datalake-store.FileSystem.concurrentAppend_1
  - azure-arm-datalake-store.FileSystem.concurrentAppendWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.create
  - azure-arm-datalake-store.FileSystem.create_2
  - azure-arm-datalake-store.FileSystem.create_1
  - azure-arm-datalake-store.FileSystem.createWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.deleteMethod
  - azure-arm-datalake-store.FileSystem.deleteMethod_2
  - azure-arm-datalake-store.FileSystem.deleteMethod_1
  - azure-arm-datalake-store.FileSystem.deleteMethodWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.getAclStatus
  - azure-arm-datalake-store.FileSystem.getAclStatus_2
  - azure-arm-datalake-store.FileSystem.getAclStatus_1
  - azure-arm-datalake-store.FileSystem.getAclStatusWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.getContentSummary
  - azure-arm-datalake-store.FileSystem.getContentSummary_2
  - azure-arm-datalake-store.FileSystem.getContentSummary_1
  - azure-arm-datalake-store.FileSystem.getContentSummaryWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.getFileStatus
  - azure-arm-datalake-store.FileSystem.getFileStatus_2
  - azure-arm-datalake-store.FileSystem.getFileStatus_1
  - azure-arm-datalake-store.FileSystem.getFileStatusWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.listFileStatus
  - azure-arm-datalake-store.FileSystem.listFileStatus_2
  - azure-arm-datalake-store.FileSystem.listFileStatus_1
  - azure-arm-datalake-store.FileSystem.listFileStatusWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.mkdirs
  - azure-arm-datalake-store.FileSystem.mkdirs_2
  - azure-arm-datalake-store.FileSystem.mkdirs_1
  - azure-arm-datalake-store.FileSystem.mkdirsWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.modifyAclEntries
  - azure-arm-datalake-store.FileSystem.modifyAclEntries_2
  - azure-arm-datalake-store.FileSystem.modifyAclEntries_1
  - azure-arm-datalake-store.FileSystem.modifyAclEntriesWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.msConcat
  - azure-arm-datalake-store.FileSystem.msConcat_2
  - azure-arm-datalake-store.FileSystem.msConcat_1
  - azure-arm-datalake-store.FileSystem.msConcatWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.open
  - azure-arm-datalake-store.FileSystem.open_2
  - azure-arm-datalake-store.FileSystem.open_1
  - azure-arm-datalake-store.FileSystem.openWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.removeAcl
  - azure-arm-datalake-store.FileSystem.removeAcl_2
  - azure-arm-datalake-store.FileSystem.removeAcl_1
  - azure-arm-datalake-store.FileSystem.removeAclEntries
  - azure-arm-datalake-store.FileSystem.removeAclEntries_2
  - azure-arm-datalake-store.FileSystem.removeAclEntries_1
  - azure-arm-datalake-store.FileSystem.removeAclEntriesWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.removeAclWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.removeDefaultAcl
  - azure-arm-datalake-store.FileSystem.removeDefaultAcl_2
  - azure-arm-datalake-store.FileSystem.removeDefaultAcl_1
  - azure-arm-datalake-store.FileSystem.removeDefaultAclWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.rename
  - azure-arm-datalake-store.FileSystem.rename_2
  - azure-arm-datalake-store.FileSystem.rename_1
  - azure-arm-datalake-store.FileSystem.renameWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.setAcl
  - azure-arm-datalake-store.FileSystem.setAcl_2
  - azure-arm-datalake-store.FileSystem.setAcl_1
  - azure-arm-datalake-store.FileSystem.setAclWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.setFileExpiry
  - azure-arm-datalake-store.FileSystem.setFileExpiry_2
  - azure-arm-datalake-store.FileSystem.setFileExpiry_1
  - azure-arm-datalake-store.FileSystem.setFileExpiryWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.setOwner
  - azure-arm-datalake-store.FileSystem.setOwner_2
  - azure-arm-datalake-store.FileSystem.setOwner_1
  - azure-arm-datalake-store.FileSystem.setOwnerWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.setPermission
  - azure-arm-datalake-store.FileSystem.setPermission_2
  - azure-arm-datalake-store.FileSystem.setPermission_1
  - azure-arm-datalake-store.FileSystem.setPermissionWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.append
  name: append(string, string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="a7738-101">使用されるため、シリアルが指定したファイルに追加します。</span><span class="sxs-lookup"><span data-stu-id="a7738-101">Used for serial appends to the specified file.</span></span><span data-ttu-id="a7738-102"> 注:ターゲットでは、ConcurrentAppend によって追加されたデータを含めることはできません。</span><span class="sxs-lookup"><span data-stu-id="a7738-102"> NOTE: The target must not contain data added by ConcurrentAppend.</span></span> <span data-ttu-id="a7738-103">ConcurrentAppend と追加を同じ意味では使用することはできません。ターゲット ファイルが変更されたこれらのいずれかを使用して追加のオプション、ターゲット ファイルで追加する、他のオプションは使用できません。</span><span class="sxs-lookup"><span data-stu-id="a7738-103">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span>'
  syntax:
    content: 'function append(accountName: string, path: string, streamContents: stream.Readable, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="a7738-104">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="a7738-104">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="a7738-105">Data Lake Store パス (以降では '/') を追加するファイルの。</span><span class="sxs-lookup"><span data-stu-id="a7738-105">The Data Lake Store path (starting with '/') of the file to which to append.</span></span>
    - id: streamContents
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="a7738-106">ファイルに追加するときに含めるファイルの内容。</span><span class="sxs-lookup"><span data-stu-id="a7738-106">The file contents to include when appending to the file.</span></span>  <span data-ttu-id="a7738-107">コンテンツの最大サイズは、4 MB です。</span><span class="sxs-lookup"><span data-stu-id="a7738-107">The maximum content size is 4MB.</span></span>  <span data-ttu-id="a7738-108">4 MB より大きいコンテンツ用には、4 MB のチャンク単位でコンテンツを追加する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a7738-108">For content larger than 4MB you must append the content in 4MB chunks.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.append_2
  name: append(string, string, stream.Readable, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="a7738-109">使用されるため、シリアルが指定したファイルに追加します。</span><span class="sxs-lookup"><span data-stu-id="a7738-109">Used for serial appends to the specified file.</span></span><span data-ttu-id="a7738-110"> 注:ターゲットでは、ConcurrentAppend によって追加されたデータを含めることはできません。</span><span class="sxs-lookup"><span data-stu-id="a7738-110"> NOTE: The target must not contain data added by ConcurrentAppend.</span></span> <span data-ttu-id="a7738-111">ConcurrentAppend と追加を同じ意味では使用することはできません。ターゲット ファイルが変更されたこれらのいずれかを使用して追加のオプション、ターゲット ファイルで追加する、他のオプションは使用できません。</span><span class="sxs-lookup"><span data-stu-id="a7738-111">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span>'
  syntax:
    content: 'function append(accountName: string, path: string, streamContents: stream.Readable, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.append_1
  name: append(string, string, stream.Readable, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="a7738-112">使用されるため、シリアルが指定したファイルに追加します。</span><span class="sxs-lookup"><span data-stu-id="a7738-112">Used for serial appends to the specified file.</span></span><span data-ttu-id="a7738-113"> 注:ターゲットでは、ConcurrentAppend によって追加されたデータを含めることはできません。</span><span class="sxs-lookup"><span data-stu-id="a7738-113"> NOTE: The target must not contain data added by ConcurrentAppend.</span></span> <span data-ttu-id="a7738-114">ConcurrentAppend と追加を同じ意味では使用することはできません。ターゲット ファイルが変更されたこれらのいずれかを使用して追加のオプション、ターゲット ファイルで追加する、他のオプションは使用できません。</span><span class="sxs-lookup"><span data-stu-id="a7738-114">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span>'
  syntax:
    content: 'function append(accountName: string, path: string, streamContents: stream.Readable, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.appendWithHttpOperationResponse
  name: appendWithHttpOperationResponse(string, string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="a7738-115">使用されるため、シリアルが指定したファイルに追加します。</span><span class="sxs-lookup"><span data-stu-id="a7738-115">Used for serial appends to the specified file.</span></span><span data-ttu-id="a7738-116"> 注:ターゲットでは、ConcurrentAppend によって追加されたデータを含めることはできません。</span><span class="sxs-lookup"><span data-stu-id="a7738-116"> NOTE: The target must not contain data added by ConcurrentAppend.</span></span> <span data-ttu-id="a7738-117">ConcurrentAppend と追加を同じ意味では使用することはできません。ターゲット ファイルが変更されたこれらのいずれかを使用して追加のオプション、ターゲット ファイルで追加する、他のオプションは使用できません。</span><span class="sxs-lookup"><span data-stu-id="a7738-117">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span>'
  syntax:
    content: 'function appendWithHttpOperationResponse(accountName: string, path: string, streamContents: stream.Readable, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="a7738-118">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="a7738-118">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="a7738-119">Data Lake Store パス (以降では '/') を追加するファイルの。</span><span class="sxs-lookup"><span data-stu-id="a7738-119">The Data Lake Store path (starting with '/') of the file to which to append.</span></span>
    - id: streamContents
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="a7738-120">ファイルに追加するときに含めるファイルの内容。</span><span class="sxs-lookup"><span data-stu-id="a7738-120">The file contents to include when appending to the file.</span></span>  <span data-ttu-id="a7738-121">コンテンツの最大サイズは、4 MB です。</span><span class="sxs-lookup"><span data-stu-id="a7738-121">The maximum content size is 4MB.</span></span>  <span data-ttu-id="a7738-122">4 MB より大きいコンテンツ用には、4 MB のチャンク単位でコンテンツを追加する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a7738-122">For content larger than 4MB you must append the content in 4MB chunks.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.checkAccess
  name: checkAccess(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-123">指定したアクセスは、指定されたパスに使用可能なかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="a7738-123">Checks if the specified access is available at the given path.</span></span>
  syntax:
    content: 'function checkAccess(accountName: string, path: string, fsaction: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="a7738-124">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="a7738-124">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="a7738-125">Data Lake Store パス (以降では '/') のファイルまたはディレクトリへのアクセスをチェックします。</span><span class="sxs-lookup"><span data-stu-id="a7738-125">The Data Lake Store path (starting with '/') of the file or directory for which to check access.</span></span>
    - id: fsaction
      type:
      - string
      description: >
        <span data-ttu-id="a7738-126">システム操作読み取り/書き込み/実行の正規表現パターンに一致する文字列形式をファイル ' [rwx-]{3}'</span><span class="sxs-lookup"><span data-stu-id="a7738-126">File system operation read/write/execute in string form, matching regex pattern '[rwx-]{3}'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.checkAccess_2
  name: checkAccess(string, string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-127">指定したアクセスは、指定されたパスに使用可能なかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="a7738-127">Checks if the specified access is available at the given path.</span></span>
  syntax:
    content: 'function checkAccess(accountName: string, path: string, fsaction: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: fsaction
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.checkAccess_1
  name: checkAccess(string, string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-128">指定したアクセスは、指定されたパスに使用可能なかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="a7738-128">Checks if the specified access is available at the given path.</span></span>
  syntax:
    content: 'function checkAccess(accountName: string, path: string, fsaction: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: fsaction
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.checkAccessWithHttpOperationResponse
  name: checkAccessWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-129">指定したアクセスは、指定されたパスに使用可能なかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="a7738-129">Checks if the specified access is available at the given path.</span></span>
  syntax:
    content: 'function checkAccessWithHttpOperationResponse(accountName: string, path: string, fsaction: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="a7738-130">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="a7738-130">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="a7738-131">Data Lake Store パス (以降では '/') のファイルまたはディレクトリへのアクセスをチェックします。</span><span class="sxs-lookup"><span data-stu-id="a7738-131">The Data Lake Store path (starting with '/') of the file or directory for which to check access.</span></span>
    - id: fsaction
      type:
      - string
      description: >
        <span data-ttu-id="a7738-132">システム操作読み取り/書き込み/実行の正規表現パターンに一致する文字列形式をファイル ' [rwx-]{3}'</span><span class="sxs-lookup"><span data-stu-id="a7738-132">File system operation read/write/execute in string form, matching regex pattern '[rwx-]{3}'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concat
  name: concat(string, string, string[], Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-133">成功時にすべてのソース ファイルを削除して、目的のファイルにソース ファイルのリストを連結します。</span><span class="sxs-lookup"><span data-stu-id="a7738-133">Concatenates the list of source files into the destination file, removing all source files upon success.</span></span>
  syntax:
    content: 'function concat(accountName: string, path: string, sources: string[], options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="a7738-134">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="a7738-134">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="a7738-135">Data Lake Store パス (以降では '/') の結果を連結したもののコピー先ファイル。</span><span class="sxs-lookup"><span data-stu-id="a7738-135">The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation.</span></span>
    - id: sources
      type:
      - string[]
      description: >
        <span data-ttu-id="a7738-136">一連のコンマ区切りの Data Lake Store パス (以降では '/') を連結する順序で連結するファイル。</span><span class="sxs-lookup"><span data-stu-id="a7738-136">A list of comma separated Data Lake Store paths (starting with '/') of the files to concatenate, in the order in which they should be concatenated.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concat_2
  name: concat(string, string, string[], Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-137">成功時にすべてのソース ファイルを削除して、目的のファイルにソース ファイルのリストを連結します。</span><span class="sxs-lookup"><span data-stu-id="a7738-137">Concatenates the list of source files into the destination file, removing all source files upon success.</span></span>
  syntax:
    content: 'function concat(accountName: string, path: string, sources: string[], options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: sources
      type:
      - string[]
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concat_1
  name: concat(string, string, string[], ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-138">成功時にすべてのソース ファイルを削除して、目的のファイルにソース ファイルのリストを連結します。</span><span class="sxs-lookup"><span data-stu-id="a7738-138">Concatenates the list of source files into the destination file, removing all source files upon success.</span></span>
  syntax:
    content: 'function concat(accountName: string, path: string, sources: string[], callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: sources
      type:
      - string[]
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concatWithHttpOperationResponse
  name: concatWithHttpOperationResponse(string, string, string[], Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-139">成功時にすべてのソース ファイルを削除して、目的のファイルにソース ファイルのリストを連結します。</span><span class="sxs-lookup"><span data-stu-id="a7738-139">Concatenates the list of source files into the destination file, removing all source files upon success.</span></span>
  syntax:
    content: 'function concatWithHttpOperationResponse(accountName: string, path: string, sources: string[], options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="a7738-140">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="a7738-140">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="a7738-141">Data Lake Store パス (以降では '/') の結果を連結したもののコピー先ファイル。</span><span class="sxs-lookup"><span data-stu-id="a7738-141">The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation.</span></span>
    - id: sources
      type:
      - string[]
      description: >
        <span data-ttu-id="a7738-142">一連のコンマ区切りの Data Lake Store パス (以降では '/') を連結する順序で連結するファイル。</span><span class="sxs-lookup"><span data-stu-id="a7738-142">A list of comma separated Data Lake Store paths (starting with '/') of the files to concatenate, in the order in which they should be concatenated.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concurrentAppend
  name: concurrentAppend(string, string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="a7738-143">必要に応じて、指定したファイルに追加しますがまだ存在しない場合、最初にファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="a7738-143">Appends to the specified file, optionally first creating the file if it does not yet exist.</span></span> <span data-ttu-id="a7738-144">このメソッドは、ファイルに複数の同時実行の追加をサポートします。</span><span class="sxs-lookup"><span data-stu-id="a7738-144">This method supports multiple concurrent appends to the file.</span></span>

    <span data-ttu-id="a7738-145">注:ターゲットでは、Create または通常の (シリアル) の追加によって追加されたデータを含めることはできません。</span><span class="sxs-lookup"><span data-stu-id="a7738-145">NOTE: The target must not contain data added by Create or normal (serial) Append.</span></span> <span data-ttu-id="a7738-146">ConcurrentAppend と追加を同じ意味では使用することはできません。ターゲット ファイルが変更されたこれらのいずれかを使用して追加のオプション、ターゲット ファイルで追加する、他のオプションは使用できません。</span><span class="sxs-lookup"><span data-stu-id="a7738-146">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span> <span data-ttu-id="a7738-147">ConcurrentAppend 順序は保証されませんし、ランディング ターゲット ファイルに重複するデータが発生することができます。</span><span class="sxs-lookup"><span data-stu-id="a7738-147">ConcurrentAppend does not guarantee order and can result in duplicated data landing in the target file.</span></span>
  syntax:
    content: 'function concurrentAppend(accountName: string, path: string, streamContents: stream.Readable, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="a7738-148">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="a7738-148">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="a7738-149">Data Lake Store パス (以降では '/') のファイルを追加する同時実行を使用して追加します。</span><span class="sxs-lookup"><span data-stu-id="a7738-149">The Data Lake Store path (starting with '/') of the file to which to append using concurrent append.</span></span>
    - id: streamContents
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="a7738-150">ファイルに追加するときに含めるファイルの内容。</span><span class="sxs-lookup"><span data-stu-id="a7738-150">The file contents to include when appending to the file.</span></span>  <span data-ttu-id="a7738-151">コンテンツの最大サイズは、4 MB です。</span><span class="sxs-lookup"><span data-stu-id="a7738-151">The maximum content size is 4MB.</span></span>  <span data-ttu-id="a7738-152">4 MB より大きいコンテンツ用には、4 MB のチャンク単位でコンテンツを追加する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a7738-152">For content larger than 4MB you must append the content in 4MB chunks.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concurrentAppend_2
  name: concurrentAppend(string, string, stream.Readable, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="a7738-153">必要に応じて、指定したファイルに追加しますがまだ存在しない場合、最初にファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="a7738-153">Appends to the specified file, optionally first creating the file if it does not yet exist.</span></span> <span data-ttu-id="a7738-154">このメソッドは、ファイルに複数の同時実行の追加をサポートします。</span><span class="sxs-lookup"><span data-stu-id="a7738-154">This method supports multiple concurrent appends to the file.</span></span>

    <span data-ttu-id="a7738-155">注:ターゲットでは、Create または通常の (シリアル) の追加によって追加されたデータを含めることはできません。</span><span class="sxs-lookup"><span data-stu-id="a7738-155">NOTE: The target must not contain data added by Create or normal (serial) Append.</span></span> <span data-ttu-id="a7738-156">ConcurrentAppend と追加を同じ意味では使用することはできません。ターゲット ファイルが変更されたこれらのいずれかを使用して追加のオプション、ターゲット ファイルで追加する、他のオプションは使用できません。</span><span class="sxs-lookup"><span data-stu-id="a7738-156">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span> <span data-ttu-id="a7738-157">ConcurrentAppend 順序は保証されませんし、ランディング ターゲット ファイルに重複するデータが発生することができます。</span><span class="sxs-lookup"><span data-stu-id="a7738-157">ConcurrentAppend does not guarantee order and can result in duplicated data landing in the target file.</span></span>
  syntax:
    content: 'function concurrentAppend(accountName: string, path: string, streamContents: stream.Readable, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concurrentAppend_1
  name: concurrentAppend(string, string, stream.Readable, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="a7738-158">必要に応じて、指定したファイルに追加しますがまだ存在しない場合、最初にファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="a7738-158">Appends to the specified file, optionally first creating the file if it does not yet exist.</span></span> <span data-ttu-id="a7738-159">このメソッドは、ファイルに複数の同時実行の追加をサポートします。</span><span class="sxs-lookup"><span data-stu-id="a7738-159">This method supports multiple concurrent appends to the file.</span></span>

    <span data-ttu-id="a7738-160">注:ターゲットでは、Create または通常の (シリアル) の追加によって追加されたデータを含めることはできません。</span><span class="sxs-lookup"><span data-stu-id="a7738-160">NOTE: The target must not contain data added by Create or normal (serial) Append.</span></span> <span data-ttu-id="a7738-161">ConcurrentAppend と追加を同じ意味では使用することはできません。ターゲット ファイルが変更されたこれらのいずれかを使用して追加のオプション、ターゲット ファイルで追加する、他のオプションは使用できません。</span><span class="sxs-lookup"><span data-stu-id="a7738-161">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span> <span data-ttu-id="a7738-162">ConcurrentAppend 順序は保証されませんし、ランディング ターゲット ファイルに重複するデータが発生することができます。</span><span class="sxs-lookup"><span data-stu-id="a7738-162">ConcurrentAppend does not guarantee order and can result in duplicated data landing in the target file.</span></span>
  syntax:
    content: 'function concurrentAppend(accountName: string, path: string, streamContents: stream.Readable, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concurrentAppendWithHttpOperationResponse
  name: concurrentAppendWithHttpOperationResponse(string, string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="a7738-163">必要に応じて、指定したファイルに追加しますがまだ存在しない場合、最初にファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="a7738-163">Appends to the specified file, optionally first creating the file if it does not yet exist.</span></span> <span data-ttu-id="a7738-164">このメソッドは、ファイルに複数の同時実行の追加をサポートします。</span><span class="sxs-lookup"><span data-stu-id="a7738-164">This method supports multiple concurrent appends to the file.</span></span>

    <span data-ttu-id="a7738-165">注:ターゲットでは、Create または通常の (シリアル) の追加によって追加されたデータを含めることはできません。</span><span class="sxs-lookup"><span data-stu-id="a7738-165">NOTE: The target must not contain data added by Create or normal (serial) Append.</span></span> <span data-ttu-id="a7738-166">ConcurrentAppend と追加を同じ意味では使用することはできません。ターゲット ファイルが変更されたこれらのいずれかを使用して追加のオプション、ターゲット ファイルで追加する、他のオプションは使用できません。</span><span class="sxs-lookup"><span data-stu-id="a7738-166">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span> <span data-ttu-id="a7738-167">ConcurrentAppend 順序は保証されませんし、ランディング ターゲット ファイルに重複するデータが発生することができます。</span><span class="sxs-lookup"><span data-stu-id="a7738-167">ConcurrentAppend does not guarantee order and can result in duplicated data landing in the target file.</span></span>
  syntax:
    content: 'function concurrentAppendWithHttpOperationResponse(accountName: string, path: string, streamContents: stream.Readable, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="a7738-168">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="a7738-168">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="a7738-169">Data Lake Store パス (以降では '/') のファイルを追加する同時実行を使用して追加します。</span><span class="sxs-lookup"><span data-stu-id="a7738-169">The Data Lake Store path (starting with '/') of the file to which to append using concurrent append.</span></span>
    - id: streamContents
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="a7738-170">ファイルに追加するときに含めるファイルの内容。</span><span class="sxs-lookup"><span data-stu-id="a7738-170">The file contents to include when appending to the file.</span></span>  <span data-ttu-id="a7738-171">コンテンツの最大サイズは、4 MB です。</span><span class="sxs-lookup"><span data-stu-id="a7738-171">The maximum content size is 4MB.</span></span>  <span data-ttu-id="a7738-172">4 MB より大きいコンテンツ用には、4 MB のチャンク単位でコンテンツを追加する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a7738-172">For content larger than 4MB you must append the content in 4MB chunks.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.create
  name: create(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="a7738-173">必要に応じて指定したコンテンツを含むファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="a7738-173">Creates a file with optionally specified content.</span></span> <span data-ttu-id="a7738-174">注:コンテンツが指定されている場合、ConcurrentAppend を使用して、生成されたファイルを変更できません。</span><span class="sxs-lookup"><span data-stu-id="a7738-174">NOTE: If content is provided, the resulting file cannot be modified using ConcurrentAppend.</span></span>'
  syntax:
    content: 'function create(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="a7738-175">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="a7738-175">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="a7738-176">Data Lake Store パス (以降では '/') のファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="a7738-176">The Data Lake Store path (starting with '/') of the file to create.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.create_2
  name: create(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="a7738-177">必要に応じて指定したコンテンツを含むファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="a7738-177">Creates a file with optionally specified content.</span></span> <span data-ttu-id="a7738-178">注:コンテンツが指定されている場合、ConcurrentAppend を使用して、生成されたファイルを変更できません。</span><span class="sxs-lookup"><span data-stu-id="a7738-178">NOTE: If content is provided, the resulting file cannot be modified using ConcurrentAppend.</span></span>'
  syntax:
    content: 'function create(accountName: string, path: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.create_1
  name: create(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="a7738-179">必要に応じて指定したコンテンツを含むファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="a7738-179">Creates a file with optionally specified content.</span></span> <span data-ttu-id="a7738-180">注:コンテンツが指定されている場合、ConcurrentAppend を使用して、生成されたファイルを変更できません。</span><span class="sxs-lookup"><span data-stu-id="a7738-180">NOTE: If content is provided, the resulting file cannot be modified using ConcurrentAppend.</span></span>'
  syntax:
    content: 'function create(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.createWithHttpOperationResponse
  name: createWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="a7738-181">必要に応じて指定したコンテンツを含むファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="a7738-181">Creates a file with optionally specified content.</span></span> <span data-ttu-id="a7738-182">注:コンテンツが指定されている場合、ConcurrentAppend を使用して、生成されたファイルを変更できません。</span><span class="sxs-lookup"><span data-stu-id="a7738-182">NOTE: If content is provided, the resulting file cannot be modified using ConcurrentAppend.</span></span>'
  syntax:
    content: 'function createWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="a7738-183">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="a7738-183">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="a7738-184">Data Lake Store パス (以降では '/') のファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="a7738-184">The Data Lake Store path (starting with '/') of the file to create.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.deleteMethod
  name: deleteMethod(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-185">要求されたファイルまたはディレクトリ、必要に応じて再帰的に削除します。</span><span class="sxs-lookup"><span data-stu-id="a7738-185">Deletes the requested file or directory, optionally recursively.</span></span>
  syntax:
    content: 'function deleteMethod(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="a7738-186">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="a7738-186">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="a7738-187">Data Lake Store パス (以降では '/') のファイルまたはディレクトリを削除します。</span><span class="sxs-lookup"><span data-stu-id="a7738-187">The Data Lake Store path (starting with '/') of the file or directory to delete.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.deleteMethod_2
  name: deleteMethod(string, string, Object, ServiceCallback<FileOperationResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-188">要求されたファイルまたはディレクトリ、必要に応じて再帰的に削除します。</span><span class="sxs-lookup"><span data-stu-id="a7738-188">Deletes the requested file or directory, optionally recursively.</span></span>
  syntax:
    content: 'function deleteMethod(accountName: string, path: string, options: Object, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.deleteMethod_1
  name: deleteMethod(string, string, ServiceCallback<FileOperationResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-189">要求されたファイルまたはディレクトリ、必要に応じて再帰的に削除します。</span><span class="sxs-lookup"><span data-stu-id="a7738-189">Deletes the requested file or directory, optionally recursively.</span></span>
  syntax:
    content: 'function deleteMethod(accountName: string, path: string, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-190">要求されたファイルまたはディレクトリ、必要に応じて再帰的に削除します。</span><span class="sxs-lookup"><span data-stu-id="a7738-190">Deletes the requested file or directory, optionally recursively.</span></span>
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="a7738-191">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="a7738-191">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="a7738-192">Data Lake Store パス (以降では '/') のファイルまたはディレクトリを削除します。</span><span class="sxs-lookup"><span data-stu-id="a7738-192">The Data Lake Store path (starting with '/') of the file or directory to delete.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileOperationResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getAclStatus
  name: getAclStatus(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-193">指定したファイルまたはディレクトリのアクセス制御リスト (ACL) エントリを取得します。</span><span class="sxs-lookup"><span data-stu-id="a7738-193">Gets Access Control List (ACL) entries for the specified file or directory.</span></span>
  syntax:
    content: 'function getAclStatus(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="a7738-194">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="a7738-194">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="a7738-195">Data Lake Store パス (以降では '/') のファイルまたはディレクトリの ACL を取得します。</span><span class="sxs-lookup"><span data-stu-id="a7738-195">The Data Lake Store path (starting with '/') of the file or directory for which to get the ACL.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.AclStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getAclStatus_2
  name: getAclStatus(string, string, Object, ServiceCallback<AclStatusResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-196">指定したファイルまたはディレクトリのアクセス制御リスト (ACL) エントリを取得します。</span><span class="sxs-lookup"><span data-stu-id="a7738-196">Gets Access Control List (ACL) entries for the specified file or directory.</span></span>
  syntax:
    content: 'function getAclStatus(accountName: string, path: string, options: Object, callback: ServiceCallback<AclStatusResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.AclStatusResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.AclStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getAclStatus_1
  name: getAclStatus(string, string, ServiceCallback<AclStatusResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-197">指定したファイルまたはディレクトリのアクセス制御リスト (ACL) エントリを取得します。</span><span class="sxs-lookup"><span data-stu-id="a7738-197">Gets Access Control List (ACL) entries for the specified file or directory.</span></span>
  syntax:
    content: 'function getAclStatus(accountName: string, path: string, callback: ServiceCallback<AclStatusResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.AclStatusResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.AclStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getAclStatusWithHttpOperationResponse
  name: getAclStatusWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-198">指定したファイルまたはディレクトリのアクセス制御リスト (ACL) エントリを取得します。</span><span class="sxs-lookup"><span data-stu-id="a7738-198">Gets Access Control List (ACL) entries for the specified file or directory.</span></span>
  syntax:
    content: 'function getAclStatusWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="a7738-199">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="a7738-199">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="a7738-200">Data Lake Store パス (以降では '/') のファイルまたはディレクトリの ACL を取得します。</span><span class="sxs-lookup"><span data-stu-id="a7738-200">The Data Lake Store path (starting with '/') of the file or directory for which to get the ACL.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.AclStatusResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getContentSummary
  name: getContentSummary(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-201">ファイル パスで指定された、ファイルのコンテンツの概要オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="a7738-201">Gets the file content summary object specified by the file path.</span></span>
  syntax:
    content: 'function getContentSummary(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="a7738-202">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="a7738-202">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="a7738-203">Data Lake Store パス (以降では '/') の概要を取得する対象のファイル。</span><span class="sxs-lookup"><span data-stu-id="a7738-203">The Data Lake Store path (starting with '/') of the file for which to retrieve the summary.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.ContentSummaryResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getContentSummary_2
  name: getContentSummary(string, string, Object, ServiceCallback<ContentSummaryResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-204">ファイル パスで指定された、ファイルのコンテンツの概要オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="a7738-204">Gets the file content summary object specified by the file path.</span></span>
  syntax:
    content: 'function getContentSummary(accountName: string, path: string, options: Object, callback: ServiceCallback<ContentSummaryResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.ContentSummaryResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.ContentSummaryResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getContentSummary_1
  name: getContentSummary(string, string, ServiceCallback<ContentSummaryResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-205">ファイル パスで指定された、ファイルのコンテンツの概要オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="a7738-205">Gets the file content summary object specified by the file path.</span></span>
  syntax:
    content: 'function getContentSummary(accountName: string, path: string, callback: ServiceCallback<ContentSummaryResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.ContentSummaryResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.ContentSummaryResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getContentSummaryWithHttpOperationResponse
  name: getContentSummaryWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-206">ファイル パスで指定された、ファイルのコンテンツの概要オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="a7738-206">Gets the file content summary object specified by the file path.</span></span>
  syntax:
    content: 'function getContentSummaryWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="a7738-207">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="a7738-207">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="a7738-208">Data Lake Store パス (以降では '/') の概要を取得する対象のファイル。</span><span class="sxs-lookup"><span data-stu-id="a7738-208">The Data Lake Store path (starting with '/') of the file for which to retrieve the summary.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.ContentSummaryResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getFileStatus
  name: getFileStatus(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-209">ファイルのパスで指定されたファイルの状態オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="a7738-209">Get the file status object specified by the file path.</span></span>
  syntax:
    content: 'function getFileStatus(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="a7738-210">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="a7738-210">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="a7738-211">Data Lake Store パス (以降では '/') のファイルまたは状態を取得する対象のディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="a7738-211">The Data Lake Store path (starting with '/') of the file or directory for which to retrieve the status.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getFileStatus_2
  name: getFileStatus(string, string, Object, ServiceCallback<FileStatusResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-212">ファイルのパスで指定されたファイルの状態オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="a7738-212">Get the file status object specified by the file path.</span></span>
  syntax:
    content: 'function getFileStatus(accountName: string, path: string, options: Object, callback: ServiceCallback<FileStatusResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileStatusResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getFileStatus_1
  name: getFileStatus(string, string, ServiceCallback<FileStatusResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-213">ファイルのパスで指定されたファイルの状態オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="a7738-213">Get the file status object specified by the file path.</span></span>
  syntax:
    content: 'function getFileStatus(accountName: string, path: string, callback: ServiceCallback<FileStatusResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileStatusResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getFileStatusWithHttpOperationResponse
  name: getFileStatusWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-214">ファイルのパスで指定されたファイルの状態オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="a7738-214">Get the file status object specified by the file path.</span></span>
  syntax:
    content: 'function getFileStatusWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="a7738-215">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="a7738-215">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="a7738-216">Data Lake Store パス (以降では '/') のファイルまたは状態を取得する対象のディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="a7738-216">The Data Lake Store path (starting with '/') of the file or directory for which to retrieve the status.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileStatusResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.listFileStatus
  name: listFileStatus(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-217">ファイルのパスと省略可能な改ページ パラメーターで指定されたファイルの状態オブジェクトの一覧を取得します。</span><span class="sxs-lookup"><span data-stu-id="a7738-217">Get the list of file status objects specified by the file path, with optional pagination parameters</span></span>
  syntax:
    content: 'function listFileStatus(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="a7738-218">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="a7738-218">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="a7738-219">Data Lake Store パス (以降では '/') のリストにディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="a7738-219">The Data Lake Store path (starting with '/') of the directory to list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusesResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.listFileStatus_2
  name: listFileStatus(string, string, Object, ServiceCallback<FileStatusesResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-220">ファイルのパスと省略可能な改ページ パラメーターで指定されたファイルの状態オブジェクトの一覧を取得します。</span><span class="sxs-lookup"><span data-stu-id="a7738-220">Get the list of file status objects specified by the file path, with optional pagination parameters</span></span>
  syntax:
    content: 'function listFileStatus(accountName: string, path: string, options: Object, callback: ServiceCallback<FileStatusesResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileStatusesResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusesResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.listFileStatus_1
  name: listFileStatus(string, string, ServiceCallback<FileStatusesResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-221">ファイルのパスと省略可能な改ページ パラメーターで指定されたファイルの状態オブジェクトの一覧を取得します。</span><span class="sxs-lookup"><span data-stu-id="a7738-221">Get the list of file status objects specified by the file path, with optional pagination parameters</span></span>
  syntax:
    content: 'function listFileStatus(accountName: string, path: string, callback: ServiceCallback<FileStatusesResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileStatusesResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusesResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.listFileStatusWithHttpOperationResponse
  name: listFileStatusWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-222">ファイルのパスと省略可能な改ページ パラメーターで指定されたファイルの状態オブジェクトの一覧を取得します。</span><span class="sxs-lookup"><span data-stu-id="a7738-222">Get the list of file status objects specified by the file path, with optional pagination parameters</span></span>
  syntax:
    content: 'function listFileStatusWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="a7738-223">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="a7738-223">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="a7738-224">Data Lake Store パス (以降では '/') のリストにディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="a7738-224">The Data Lake Store path (starting with '/') of the directory to list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileStatusesResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.mkdirs
  name: mkdirs(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-225">ディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="a7738-225">Creates a directory.</span></span>
  syntax:
    content: 'function mkdirs(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="a7738-226">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="a7738-226">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="a7738-227">Data Lake Store パス (以降では '/') を作成するディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="a7738-227">The Data Lake Store path (starting with '/') of the directory to create.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.mkdirs_2
  name: mkdirs(string, string, Object, ServiceCallback<FileOperationResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-228">ディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="a7738-228">Creates a directory.</span></span>
  syntax:
    content: 'function mkdirs(accountName: string, path: string, options: Object, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.mkdirs_1
  name: mkdirs(string, string, ServiceCallback<FileOperationResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-229">ディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="a7738-229">Creates a directory.</span></span>
  syntax:
    content: 'function mkdirs(accountName: string, path: string, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.mkdirsWithHttpOperationResponse
  name: mkdirsWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-230">ディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="a7738-230">Creates a directory.</span></span>
  syntax:
    content: 'function mkdirsWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="a7738-231">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="a7738-231">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="a7738-232">Data Lake Store パス (以降では '/') を作成するディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="a7738-232">The Data Lake Store path (starting with '/') of the directory to create.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileOperationResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.modifyAclEntries
  name: modifyAclEntries(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-233">ファイルまたはフォルダーの既存のアクセス制御リスト (ACL) エントリを変更します。</span><span class="sxs-lookup"><span data-stu-id="a7738-233">Modifies existing Access Control List (ACL) entries on a file or folder.</span></span>
  syntax:
    content: 'function modifyAclEntries(accountName: string, path: string, aclspec: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="a7738-234">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="a7738-234">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="a7738-235">Data Lake Store パス (以降では '/') のファイルまたはディレクトリが変更されている ACL を使用します。</span><span class="sxs-lookup"><span data-stu-id="a7738-235">The Data Lake Store path (starting with '/') of the file or directory with the ACL being modified.</span></span>
    - id: aclspec
      type:
      - string
      description: >
        <span data-ttu-id="a7738-236">ACL の仕様の形式での ACL の変更操作に含まれる ' [既定:] ユーザー | グループ | その他:: r |-w |-x |-'</span><span class="sxs-lookup"><span data-stu-id="a7738-236">The ACL specification included in ACL modification operations in the format '[default:]user|group|other::r|-w|-x|-'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.modifyAclEntries_2
  name: modifyAclEntries(string, string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-237">ファイルまたはフォルダーの既存のアクセス制御リスト (ACL) エントリを変更します。</span><span class="sxs-lookup"><span data-stu-id="a7738-237">Modifies existing Access Control List (ACL) entries on a file or folder.</span></span>
  syntax:
    content: 'function modifyAclEntries(accountName: string, path: string, aclspec: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.modifyAclEntries_1
  name: modifyAclEntries(string, string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-238">ファイルまたはフォルダーの既存のアクセス制御リスト (ACL) エントリを変更します。</span><span class="sxs-lookup"><span data-stu-id="a7738-238">Modifies existing Access Control List (ACL) entries on a file or folder.</span></span>
  syntax:
    content: 'function modifyAclEntries(accountName: string, path: string, aclspec: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.modifyAclEntriesWithHttpOperationResponse
  name: modifyAclEntriesWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-239">ファイルまたはフォルダーの既存のアクセス制御リスト (ACL) エントリを変更します。</span><span class="sxs-lookup"><span data-stu-id="a7738-239">Modifies existing Access Control List (ACL) entries on a file or folder.</span></span>
  syntax:
    content: 'function modifyAclEntriesWithHttpOperationResponse(accountName: string, path: string, aclspec: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="a7738-240">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="a7738-240">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="a7738-241">Data Lake Store パス (以降では '/') のファイルまたはディレクトリが変更されている ACL を使用します。</span><span class="sxs-lookup"><span data-stu-id="a7738-241">The Data Lake Store path (starting with '/') of the file or directory with the ACL being modified.</span></span>
    - id: aclspec
      type:
      - string
      description: >
        <span data-ttu-id="a7738-242">ACL の仕様の形式での ACL の変更操作に含まれる ' [既定:] ユーザー | グループ | その他:: r |-w |-x |-'</span><span class="sxs-lookup"><span data-stu-id="a7738-242">The ACL specification included in ACL modification operations in the format '[default:]user|group|other::r|-w|-x|-'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.msConcat
  name: msConcat(string, string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-243">成功時にすべてのソース ファイルを削除して、目的のファイルにソース ファイルのリストを連結します。</span><span class="sxs-lookup"><span data-stu-id="a7738-243">Concatenates the list of source files into the destination file, deleting all source files upon success.</span></span> <span data-ttu-id="a7738-244">このメソッドは、Concat メソッドよりも多くのソース ファイルのパスを受け取ります。</span><span class="sxs-lookup"><span data-stu-id="a7738-244">This method accepts more source file paths than the Concat method.</span></span> <span data-ttu-id="a7738-245">このメソッドと、受け取るパラメーターは、使いやすさ、今後のバージョンでの変更される可能性が。</span><span class="sxs-lookup"><span data-stu-id="a7738-245">This method and the parameters it accepts are subject to change for usability in an upcoming version.</span></span>
  syntax:
    content: 'function msConcat(accountName: string, path: string, streamContents: stream.Readable, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="a7738-246">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="a7738-246">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="a7738-247">Data Lake Store パス (以降では '/') の結果を連結したもののコピー先ファイル。</span><span class="sxs-lookup"><span data-stu-id="a7738-247">The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation.</span></span>
    - id: streamContents
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="a7738-248">Data Lake Store パスの一覧 (以降では '/') のソース ファイル。</span><span class="sxs-lookup"><span data-stu-id="a7738-248">A list of Data Lake Store paths (starting with '/') of the source files.</span></span> <span data-ttu-id="a7738-249">形式でコンマで区切られたパスの一覧でなければなりません: sources=/file/path/1.txt,/file/path/2.txt,/file/path/lastfile.csv</span><span class="sxs-lookup"><span data-stu-id="a7738-249">Must be a comma-separated path list in the format: sources=/file/path/1.txt,/file/path/2.txt,/file/path/lastfile.csv</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.msConcat_2
  name: msConcat(string, string, stream.Readable, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-250">成功時にすべてのソース ファイルを削除して、目的のファイルにソース ファイルのリストを連結します。</span><span class="sxs-lookup"><span data-stu-id="a7738-250">Concatenates the list of source files into the destination file, deleting all source files upon success.</span></span> <span data-ttu-id="a7738-251">このメソッドは、Concat メソッドよりも多くのソース ファイルのパスを受け取ります。</span><span class="sxs-lookup"><span data-stu-id="a7738-251">This method accepts more source file paths than the Concat method.</span></span> <span data-ttu-id="a7738-252">このメソッドと、受け取るパラメーターは、使いやすさ、今後のバージョンでの変更される可能性が。</span><span class="sxs-lookup"><span data-stu-id="a7738-252">This method and the parameters it accepts are subject to change for usability in an upcoming version.</span></span>
  syntax:
    content: 'function msConcat(accountName: string, path: string, streamContents: stream.Readable, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.msConcat_1
  name: msConcat(string, string, stream.Readable, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-253">成功時にすべてのソース ファイルを削除して、目的のファイルにソース ファイルのリストを連結します。</span><span class="sxs-lookup"><span data-stu-id="a7738-253">Concatenates the list of source files into the destination file, deleting all source files upon success.</span></span> <span data-ttu-id="a7738-254">このメソッドは、Concat メソッドよりも多くのソース ファイルのパスを受け取ります。</span><span class="sxs-lookup"><span data-stu-id="a7738-254">This method accepts more source file paths than the Concat method.</span></span> <span data-ttu-id="a7738-255">このメソッドと、受け取るパラメーターは、使いやすさ、今後のバージョンでの変更される可能性が。</span><span class="sxs-lookup"><span data-stu-id="a7738-255">This method and the parameters it accepts are subject to change for usability in an upcoming version.</span></span>
  syntax:
    content: 'function msConcat(accountName: string, path: string, streamContents: stream.Readable, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.msConcatWithHttpOperationResponse
  name: msConcatWithHttpOperationResponse(string, string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-256">成功時にすべてのソース ファイルを削除して、目的のファイルにソース ファイルのリストを連結します。</span><span class="sxs-lookup"><span data-stu-id="a7738-256">Concatenates the list of source files into the destination file, deleting all source files upon success.</span></span> <span data-ttu-id="a7738-257">このメソッドは、Concat メソッドよりも多くのソース ファイルのパスを受け取ります。</span><span class="sxs-lookup"><span data-stu-id="a7738-257">This method accepts more source file paths than the Concat method.</span></span> <span data-ttu-id="a7738-258">このメソッドと、受け取るパラメーターは、使いやすさ、今後のバージョンでの変更される可能性が。</span><span class="sxs-lookup"><span data-stu-id="a7738-258">This method and the parameters it accepts are subject to change for usability in an upcoming version.</span></span>
  syntax:
    content: 'function msConcatWithHttpOperationResponse(accountName: string, path: string, streamContents: stream.Readable, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="a7738-259">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="a7738-259">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="a7738-260">Data Lake Store パス (以降では '/') の結果を連結したもののコピー先ファイル。</span><span class="sxs-lookup"><span data-stu-id="a7738-260">The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation.</span></span>
    - id: streamContents
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="a7738-261">Data Lake Store パスの一覧 (以降では '/') のソース ファイル。</span><span class="sxs-lookup"><span data-stu-id="a7738-261">A list of Data Lake Store paths (starting with '/') of the source files.</span></span> <span data-ttu-id="a7738-262">形式でコンマで区切られたパスの一覧でなければなりません: sources=/file/path/1.txt,/file/path/2.txt,/file/path/lastfile.csv</span><span class="sxs-lookup"><span data-stu-id="a7738-262">Must be a comma-separated path list in the format: sources=/file/path/1.txt,/file/path/2.txt,/file/path/lastfile.csv</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.open
  name: open(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-263">開き、指定したファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="a7738-263">Opens and reads from the specified file.</span></span>
  syntax:
    content: 'function open(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="a7738-264">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="a7738-264">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="a7738-265">Data Lake Store パス (以降では '/') のファイルを開きます。</span><span class="sxs-lookup"><span data-stu-id="a7738-265">The Data Lake Store path (starting with '/') of the file to open.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<stream.Readable>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.open_2
  name: open(string, string, Object, ServiceCallback<stream.Readable>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-266">開き、指定したファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="a7738-266">Opens and reads from the specified file.</span></span>
  syntax:
    content: 'function open(accountName: string, path: string, options: Object, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.open_1
  name: open(string, string, ServiceCallback<stream.Readable>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-267">開き、指定したファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="a7738-267">Opens and reads from the specified file.</span></span>
  syntax:
    content: 'function open(accountName: string, path: string, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.openWithHttpOperationResponse
  name: openWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-268">開き、指定したファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="a7738-268">Opens and reads from the specified file.</span></span>
  syntax:
    content: 'function openWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="a7738-269">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="a7738-269">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="a7738-270">Data Lake Store パス (以降では '/') のファイルを開きます。</span><span class="sxs-lookup"><span data-stu-id="a7738-270">The Data Lake Store path (starting with '/') of the file to open.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<stream.Readable>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAcl
  name: removeAcl(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-271">指定したファイルまたはディレクトリの既存のアクセス制御リスト (ACL) を削除します。</span><span class="sxs-lookup"><span data-stu-id="a7738-271">Removes the existing Access Control List (ACL) of the specified file or directory.</span></span>
  syntax:
    content: 'function removeAcl(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="a7738-272">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="a7738-272">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="a7738-273">Data Lake Store パス (以降では '/') のファイルまたはディレクトリが削除されている ACL を使用します。</span><span class="sxs-lookup"><span data-stu-id="a7738-273">The Data Lake Store path (starting with '/') of the file or directory with the ACL being removed.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAcl_2
  name: removeAcl(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-274">指定したファイルまたはディレクトリの既存のアクセス制御リスト (ACL) を削除します。</span><span class="sxs-lookup"><span data-stu-id="a7738-274">Removes the existing Access Control List (ACL) of the specified file or directory.</span></span>
  syntax:
    content: 'function removeAcl(accountName: string, path: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAcl_1
  name: removeAcl(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-275">指定したファイルまたはディレクトリの既存のアクセス制御リスト (ACL) を削除します。</span><span class="sxs-lookup"><span data-stu-id="a7738-275">Removes the existing Access Control List (ACL) of the specified file or directory.</span></span>
  syntax:
    content: 'function removeAcl(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclEntries
  name: removeAclEntries(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-276">既存のファイルまたはフォルダーのアクセス制御リスト (ACL) エントリを削除します。</span><span class="sxs-lookup"><span data-stu-id="a7738-276">Removes existing Access Control List (ACL) entries for a file or folder.</span></span>
  syntax:
    content: 'function removeAclEntries(accountName: string, path: string, aclspec: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="a7738-277">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="a7738-277">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="a7738-278">Data Lake Store パス (以降では '/') のファイルまたはディレクトリが削除されている ACL を使用します。</span><span class="sxs-lookup"><span data-stu-id="a7738-278">The Data Lake Store path (starting with '/') of the file or directory with the ACL being removed.</span></span>
    - id: aclspec
      type:
      - string
      description: >
        <span data-ttu-id="a7738-279">ACL の仕様の形式での ACL の削除操作に含まれる ' [既定:] ユーザー | グループ | その他の '</span><span class="sxs-lookup"><span data-stu-id="a7738-279">The ACL spec included in ACL removal operations in the format '[default:]user|group|other'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclEntries_2
  name: removeAclEntries(string, string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-280">既存のファイルまたはフォルダーのアクセス制御リスト (ACL) エントリを削除します。</span><span class="sxs-lookup"><span data-stu-id="a7738-280">Removes existing Access Control List (ACL) entries for a file or folder.</span></span>
  syntax:
    content: 'function removeAclEntries(accountName: string, path: string, aclspec: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclEntries_1
  name: removeAclEntries(string, string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-281">既存のファイルまたはフォルダーのアクセス制御リスト (ACL) エントリを削除します。</span><span class="sxs-lookup"><span data-stu-id="a7738-281">Removes existing Access Control List (ACL) entries for a file or folder.</span></span>
  syntax:
    content: 'function removeAclEntries(accountName: string, path: string, aclspec: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclEntriesWithHttpOperationResponse
  name: removeAclEntriesWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-282">既存のファイルまたはフォルダーのアクセス制御リスト (ACL) エントリを削除します。</span><span class="sxs-lookup"><span data-stu-id="a7738-282">Removes existing Access Control List (ACL) entries for a file or folder.</span></span>
  syntax:
    content: 'function removeAclEntriesWithHttpOperationResponse(accountName: string, path: string, aclspec: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="a7738-283">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="a7738-283">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="a7738-284">Data Lake Store パス (以降では '/') のファイルまたはディレクトリが削除されている ACL を使用します。</span><span class="sxs-lookup"><span data-stu-id="a7738-284">The Data Lake Store path (starting with '/') of the file or directory with the ACL being removed.</span></span>
    - id: aclspec
      type:
      - string
      description: >
        <span data-ttu-id="a7738-285">ACL の仕様の形式での ACL の削除操作に含まれる ' [既定:] ユーザー | グループ | その他の '</span><span class="sxs-lookup"><span data-stu-id="a7738-285">The ACL spec included in ACL removal operations in the format '[default:]user|group|other'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclWithHttpOperationResponse
  name: removeAclWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-286">指定したファイルまたはディレクトリの既存のアクセス制御リスト (ACL) を削除します。</span><span class="sxs-lookup"><span data-stu-id="a7738-286">Removes the existing Access Control List (ACL) of the specified file or directory.</span></span>
  syntax:
    content: 'function removeAclWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="a7738-287">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="a7738-287">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="a7738-288">Data Lake Store パス (以降では '/') のファイルまたはディレクトリが削除されている ACL を使用します。</span><span class="sxs-lookup"><span data-stu-id="a7738-288">The Data Lake Store path (starting with '/') of the file or directory with the ACL being removed.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeDefaultAcl
  name: removeDefaultAcl(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-289">既存既定のアクセス制御リスト (ACL) の指定されたディレクトリを削除します。</span><span class="sxs-lookup"><span data-stu-id="a7738-289">Removes the existing Default Access Control List (ACL) of the specified directory.</span></span>
  syntax:
    content: 'function removeDefaultAcl(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="a7738-290">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="a7738-290">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="a7738-291">Data Lake Store パス (以降では '/') の既定の ACL を削除するディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="a7738-291">The Data Lake Store path (starting with '/') of the directory with the default ACL being removed.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeDefaultAcl_2
  name: removeDefaultAcl(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-292">既存既定のアクセス制御リスト (ACL) の指定されたディレクトリを削除します。</span><span class="sxs-lookup"><span data-stu-id="a7738-292">Removes the existing Default Access Control List (ACL) of the specified directory.</span></span>
  syntax:
    content: 'function removeDefaultAcl(accountName: string, path: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeDefaultAcl_1
  name: removeDefaultAcl(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-293">既存既定のアクセス制御リスト (ACL) の指定されたディレクトリを削除します。</span><span class="sxs-lookup"><span data-stu-id="a7738-293">Removes the existing Default Access Control List (ACL) of the specified directory.</span></span>
  syntax:
    content: 'function removeDefaultAcl(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeDefaultAclWithHttpOperationResponse
  name: removeDefaultAclWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-294">既存既定のアクセス制御リスト (ACL) の指定されたディレクトリを削除します。</span><span class="sxs-lookup"><span data-stu-id="a7738-294">Removes the existing Default Access Control List (ACL) of the specified directory.</span></span>
  syntax:
    content: 'function removeDefaultAclWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="a7738-295">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="a7738-295">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="a7738-296">Data Lake Store パス (以降では '/') の既定の ACL を削除するディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="a7738-296">The Data Lake Store path (starting with '/') of the directory with the default ACL being removed.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.rename
  name: rename(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-297">ファイルまたはディレクトリの名前を変更します。</span><span class="sxs-lookup"><span data-stu-id="a7738-297">Rename a file or directory.</span></span>
  syntax:
    content: 'function rename(accountName: string, path: string, destination: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="a7738-298">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="a7738-298">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="a7738-299">Data Lake Store パス (以降では '/') のファイルまたはディレクトリに移動/名前を変更します。</span><span class="sxs-lookup"><span data-stu-id="a7738-299">The Data Lake Store path (starting with '/') of the file or directory to move/rename.</span></span>
    - id: destination
      type:
      - string
      description: >
        <span data-ttu-id="a7738-300">ファイルまたはフォルダーを名前変更/移動へのパス</span><span class="sxs-lookup"><span data-stu-id="a7738-300">The path to move/rename the file or folder to</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.rename_2
  name: rename(string, string, string, Object, ServiceCallback<FileOperationResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-301">ファイルまたはディレクトリの名前を変更します。</span><span class="sxs-lookup"><span data-stu-id="a7738-301">Rename a file or directory.</span></span>
  syntax:
    content: 'function rename(accountName: string, path: string, destination: string, options: Object, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: destination
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.rename_1
  name: rename(string, string, string, ServiceCallback<FileOperationResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-302">ファイルまたはディレクトリの名前を変更します。</span><span class="sxs-lookup"><span data-stu-id="a7738-302">Rename a file or directory.</span></span>
  syntax:
    content: 'function rename(accountName: string, path: string, destination: string, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: destination
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.renameWithHttpOperationResponse
  name: renameWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-303">ファイルまたはディレクトリの名前を変更します。</span><span class="sxs-lookup"><span data-stu-id="a7738-303">Rename a file or directory.</span></span>
  syntax:
    content: 'function renameWithHttpOperationResponse(accountName: string, path: string, destination: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="a7738-304">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="a7738-304">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="a7738-305">Data Lake Store パス (以降では '/') のファイルまたはディレクトリに移動/名前を変更します。</span><span class="sxs-lookup"><span data-stu-id="a7738-305">The Data Lake Store path (starting with '/') of the file or directory to move/rename.</span></span>
    - id: destination
      type:
      - string
      description: >
        <span data-ttu-id="a7738-306">ファイルまたはフォルダーを名前変更/移動へのパス</span><span class="sxs-lookup"><span data-stu-id="a7738-306">The path to move/rename the file or folder to</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileOperationResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setAcl
  name: setAcl(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-307">ファイルまたはフォルダーのアクセス制御リスト (ACL) を設定します。</span><span class="sxs-lookup"><span data-stu-id="a7738-307">Sets the Access Control List (ACL) for a file or folder.</span></span>
  syntax:
    content: 'function setAcl(accountName: string, path: string, aclspec: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="a7738-308">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="a7738-308">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="a7738-309">Data Lake Store パス (以降では '/') のファイルまたはディレクトリの ACL を設定します。</span><span class="sxs-lookup"><span data-stu-id="a7738-309">The Data Lake Store path (starting with '/') of the file or directory on which to set the ACL.</span></span>
    - id: aclspec
      type:
      - string
      description: >
        <span data-ttu-id="a7738-310">形式で ACL を作成する操作に含まれる、ACL の仕様 ' [既定:] ユーザー | グループ | その他:: r |-w |-x |-'</span><span class="sxs-lookup"><span data-stu-id="a7738-310">The ACL spec included in ACL creation operations in the format '[default:]user|group|other::r|-w|-x|-'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setAcl_2
  name: setAcl(string, string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-311">ファイルまたはフォルダーのアクセス制御リスト (ACL) を設定します。</span><span class="sxs-lookup"><span data-stu-id="a7738-311">Sets the Access Control List (ACL) for a file or folder.</span></span>
  syntax:
    content: 'function setAcl(accountName: string, path: string, aclspec: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setAcl_1
  name: setAcl(string, string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-312">ファイルまたはフォルダーのアクセス制御リスト (ACL) を設定します。</span><span class="sxs-lookup"><span data-stu-id="a7738-312">Sets the Access Control List (ACL) for a file or folder.</span></span>
  syntax:
    content: 'function setAcl(accountName: string, path: string, aclspec: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setAclWithHttpOperationResponse
  name: setAclWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-313">ファイルまたはフォルダーのアクセス制御リスト (ACL) を設定します。</span><span class="sxs-lookup"><span data-stu-id="a7738-313">Sets the Access Control List (ACL) for a file or folder.</span></span>
  syntax:
    content: 'function setAclWithHttpOperationResponse(accountName: string, path: string, aclspec: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="a7738-314">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="a7738-314">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="a7738-315">Data Lake Store パス (以降では '/') のファイルまたはディレクトリの ACL を設定します。</span><span class="sxs-lookup"><span data-stu-id="a7738-315">The Data Lake Store path (starting with '/') of the file or directory on which to set the ACL.</span></span>
    - id: aclspec
      type:
      - string
      description: >
        <span data-ttu-id="a7738-316">形式で ACL を作成する操作に含まれる、ACL の仕様 ' [既定:] ユーザー | グループ | その他:: r |-w |-x |-'</span><span class="sxs-lookup"><span data-stu-id="a7738-316">The ACL spec included in ACL creation operations in the format '[default:]user|group|other::r|-w|-x|-'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setFileExpiry
  name: setFileExpiry(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-317">設定または指定したファイルに有効期限を削除します。</span><span class="sxs-lookup"><span data-stu-id="a7738-317">Sets or removes the expiration time on the specified file.</span></span> <span data-ttu-id="a7738-318">この操作は、ファイルに対してのみ実行できます。</span><span class="sxs-lookup"><span data-stu-id="a7738-318">This operation can only be executed against files.</span></span> <span data-ttu-id="a7738-319">フォルダーを指定することはできません。</span><span class="sxs-lookup"><span data-stu-id="a7738-319">Folders are not supported.</span></span>
  syntax:
    content: 'function setFileExpiry(accountName: string, path: string, expiryOption: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="a7738-320">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="a7738-320">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="a7738-321">Data Lake Store パス (以降では '/') の設定または有効期限を削除するファイル。</span><span class="sxs-lookup"><span data-stu-id="a7738-321">The Data Lake Store path (starting with '/') of the file on which to set or remove the expiration time.</span></span>
    - id: expiryOption
      type:
      - string
      description: >
        <span data-ttu-id="a7738-322">ファイルを使用する有効期限の種類を示します。1.</span><span class="sxs-lookup"><span data-stu-id="a7738-322">Indicates the type of expiration to use for the file: 1.</span></span> <span data-ttu-id="a7738-323">NeverExpire:ExpireTime は無視されます。</span><span class="sxs-lookup"><span data-stu-id="a7738-323">NeverExpire: ExpireTime is ignored.</span></span> <span data-ttu-id="a7738-324">2.</span><span class="sxs-lookup"><span data-stu-id="a7738-324">2.</span></span> <span data-ttu-id="a7738-325">RelativeToNow:ExpireTime は、ファイルの有効期限が更新されたときに、に対して相対的な有効期限の日付を表すミリ秒の整数です。</span><span class="sxs-lookup"><span data-stu-id="a7738-325">RelativeToNow: ExpireTime is an integer in milliseconds representing the expiration date relative to when file expiration is updated.</span></span> <span data-ttu-id="a7738-326">手順 3.</span><span class="sxs-lookup"><span data-stu-id="a7738-326">3.</span></span> <span data-ttu-id="a7738-327">RelativeToCreationDate:ExpireTime は、ファイルの作成の基準とした有効期限の日付を表すミリ秒の整数です。</span><span class="sxs-lookup"><span data-stu-id="a7738-327">RelativeToCreationDate: ExpireTime is an integer in milliseconds representing the expiration date relative to file creation.</span></span> <span data-ttu-id="a7738-328">4.</span><span class="sxs-lookup"><span data-stu-id="a7738-328">4.</span></span> <span data-ttu-id="a7738-329">絶対。ExpireTime 1970 年 1 月 1 を基準とした Unix タイムスタンプ (ミリ秒単位) の整数は、00時 00分: 00 です。</span><span class="sxs-lookup"><span data-stu-id="a7738-329">Absolute: ExpireTime is an integer in milliseconds, as a Unix timestamp relative to 1/1/1970 00:00:00.</span></span> <span data-ttu-id="a7738-330">指定できる値は、次のとおりです。'NeverExpire'、'RelativeToNow'、'RelativeToCreationDate'、'Absolute'</span><span class="sxs-lookup"><span data-stu-id="a7738-330">Possible values include: 'NeverExpire', 'RelativeToNow', 'RelativeToCreationDate', 'Absolute'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setFileExpiry_2
  name: setFileExpiry(string, string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-331">設定または指定したファイルに有効期限を削除します。</span><span class="sxs-lookup"><span data-stu-id="a7738-331">Sets or removes the expiration time on the specified file.</span></span> <span data-ttu-id="a7738-332">この操作は、ファイルに対してのみ実行できます。</span><span class="sxs-lookup"><span data-stu-id="a7738-332">This operation can only be executed against files.</span></span> <span data-ttu-id="a7738-333">フォルダーを指定することはできません。</span><span class="sxs-lookup"><span data-stu-id="a7738-333">Folders are not supported.</span></span>
  syntax:
    content: 'function setFileExpiry(accountName: string, path: string, expiryOption: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: expiryOption
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setFileExpiry_1
  name: setFileExpiry(string, string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-334">設定または指定したファイルに有効期限を削除します。</span><span class="sxs-lookup"><span data-stu-id="a7738-334">Sets or removes the expiration time on the specified file.</span></span> <span data-ttu-id="a7738-335">この操作は、ファイルに対してのみ実行できます。</span><span class="sxs-lookup"><span data-stu-id="a7738-335">This operation can only be executed against files.</span></span> <span data-ttu-id="a7738-336">フォルダーを指定することはできません。</span><span class="sxs-lookup"><span data-stu-id="a7738-336">Folders are not supported.</span></span>
  syntax:
    content: 'function setFileExpiry(accountName: string, path: string, expiryOption: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: expiryOption
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setFileExpiryWithHttpOperationResponse
  name: setFileExpiryWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-337">設定または指定したファイルに有効期限を削除します。</span><span class="sxs-lookup"><span data-stu-id="a7738-337">Sets or removes the expiration time on the specified file.</span></span> <span data-ttu-id="a7738-338">この操作は、ファイルに対してのみ実行できます。</span><span class="sxs-lookup"><span data-stu-id="a7738-338">This operation can only be executed against files.</span></span> <span data-ttu-id="a7738-339">フォルダーを指定することはできません。</span><span class="sxs-lookup"><span data-stu-id="a7738-339">Folders are not supported.</span></span>
  syntax:
    content: 'function setFileExpiryWithHttpOperationResponse(accountName: string, path: string, expiryOption: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="a7738-340">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="a7738-340">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="a7738-341">Data Lake Store パス (以降では '/') の設定または有効期限を削除するファイル。</span><span class="sxs-lookup"><span data-stu-id="a7738-341">The Data Lake Store path (starting with '/') of the file on which to set or remove the expiration time.</span></span>
    - id: expiryOption
      type:
      - string
      description: >
        <span data-ttu-id="a7738-342">ファイルを使用する有効期限の種類を示します。1.</span><span class="sxs-lookup"><span data-stu-id="a7738-342">Indicates the type of expiration to use for the file: 1.</span></span> <span data-ttu-id="a7738-343">NeverExpire:ExpireTime は無視されます。</span><span class="sxs-lookup"><span data-stu-id="a7738-343">NeverExpire: ExpireTime is ignored.</span></span> <span data-ttu-id="a7738-344">2.</span><span class="sxs-lookup"><span data-stu-id="a7738-344">2.</span></span> <span data-ttu-id="a7738-345">RelativeToNow:ExpireTime は、ファイルの有効期限が更新されたときに、に対して相対的な有効期限の日付を表すミリ秒の整数です。</span><span class="sxs-lookup"><span data-stu-id="a7738-345">RelativeToNow: ExpireTime is an integer in milliseconds representing the expiration date relative to when file expiration is updated.</span></span> <span data-ttu-id="a7738-346">手順 3.</span><span class="sxs-lookup"><span data-stu-id="a7738-346">3.</span></span> <span data-ttu-id="a7738-347">RelativeToCreationDate:ExpireTime は、ファイルの作成の基準とした有効期限の日付を表すミリ秒の整数です。</span><span class="sxs-lookup"><span data-stu-id="a7738-347">RelativeToCreationDate: ExpireTime is an integer in milliseconds representing the expiration date relative to file creation.</span></span> <span data-ttu-id="a7738-348">4.</span><span class="sxs-lookup"><span data-stu-id="a7738-348">4.</span></span> <span data-ttu-id="a7738-349">絶対。ExpireTime 1970 年 1 月 1 を基準とした Unix タイムスタンプ (ミリ秒単位) の整数は、00時 00分: 00 です。</span><span class="sxs-lookup"><span data-stu-id="a7738-349">Absolute: ExpireTime is an integer in milliseconds, as a Unix timestamp relative to 1/1/1970 00:00:00.</span></span> <span data-ttu-id="a7738-350">指定できる値は、次のとおりです。'NeverExpire'、'RelativeToNow'、'RelativeToCreationDate'、'Absolute'</span><span class="sxs-lookup"><span data-stu-id="a7738-350">Possible values include: 'NeverExpire', 'RelativeToNow', 'RelativeToCreationDate', 'Absolute'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setOwner
  name: setOwner(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-351">ファイルまたはディレクトリの所有者を設定します。</span><span class="sxs-lookup"><span data-stu-id="a7738-351">Sets the owner of a file or directory.</span></span>
  syntax:
    content: 'function setOwner(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="a7738-352">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="a7738-352">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="a7738-353">Data Lake Store パス (以降では '/') のファイルまたは所有者を設定する対象のディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="a7738-353">The Data Lake Store path (starting with '/') of the file or directory for which to set the owner.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setOwner_2
  name: setOwner(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-354">ファイルまたはディレクトリの所有者を設定します。</span><span class="sxs-lookup"><span data-stu-id="a7738-354">Sets the owner of a file or directory.</span></span>
  syntax:
    content: 'function setOwner(accountName: string, path: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setOwner_1
  name: setOwner(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-355">ファイルまたはディレクトリの所有者を設定します。</span><span class="sxs-lookup"><span data-stu-id="a7738-355">Sets the owner of a file or directory.</span></span>
  syntax:
    content: 'function setOwner(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setOwnerWithHttpOperationResponse
  name: setOwnerWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-356">ファイルまたはディレクトリの所有者を設定します。</span><span class="sxs-lookup"><span data-stu-id="a7738-356">Sets the owner of a file or directory.</span></span>
  syntax:
    content: 'function setOwnerWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="a7738-357">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="a7738-357">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="a7738-358">Data Lake Store パス (以降では '/') のファイルまたは所有者を設定する対象のディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="a7738-358">The Data Lake Store path (starting with '/') of the file or directory for which to set the owner.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setPermission
  name: setPermission(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-359">ファイルまたはフォルダーのアクセス許可を設定します。</span><span class="sxs-lookup"><span data-stu-id="a7738-359">Sets the permission of the file or folder.</span></span>
  syntax:
    content: 'function setPermission(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="a7738-360">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="a7738-360">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="a7738-361">Data Lake Store パス (以降では '/') のファイルまたはアクセス許可を設定する対象のディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="a7738-361">The Data Lake Store path (starting with '/') of the file or directory for which to set the permission.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setPermission_2
  name: setPermission(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-362">ファイルまたはフォルダーのアクセス許可を設定します。</span><span class="sxs-lookup"><span data-stu-id="a7738-362">Sets the permission of the file or folder.</span></span>
  syntax:
    content: 'function setPermission(accountName: string, path: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setPermission_1
  name: setPermission(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-363">ファイルまたはフォルダーのアクセス許可を設定します。</span><span class="sxs-lookup"><span data-stu-id="a7738-363">Sets the permission of the file or folder.</span></span>
  syntax:
    content: 'function setPermission(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setPermissionWithHttpOperationResponse
  name: setPermissionWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7738-364">ファイルまたはフォルダーのアクセス許可を設定します。</span><span class="sxs-lookup"><span data-stu-id="a7738-364">Sets the permission of the file or folder.</span></span>
  syntax:
    content: 'function setPermissionWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="a7738-365">ファイルシステム操作を実行する Azure Data Lake Store アカウント。</span><span class="sxs-lookup"><span data-stu-id="a7738-365">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="a7738-366">Data Lake Store パス (以降では '/') のファイルまたはアクセス許可を設定する対象のディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="a7738-366">The Data Lake Store path (starting with '/') of the file or directory for which to set the permission.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
references:
- uid: Promise<azure-arm-datalake-store.FileOperationResult>
  name: FileOperationResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: FileOperationResult
    fullName: FileOperationResult
    uid: azure-arm-datalake-store.FileOperationResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.FileOperationResult>
  name: FileOperationResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: FileOperationResult
    fullName: FileOperationResult
    uid: azure-arm-datalake-store.FileOperationResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.FileOperationResult>>
  name: FileOperationResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: FileOperationResult
    fullName: FileOperationResult
    uid: azure-arm-datalake-store.FileOperationResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-datalake-store.AclStatusResult>
  name: AclStatusResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: AclStatusResult
    fullName: AclStatusResult
    uid: azure-arm-datalake-store.AclStatusResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.AclStatusResult>
  name: AclStatusResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: AclStatusResult
    fullName: AclStatusResult
    uid: azure-arm-datalake-store.AclStatusResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.AclStatusResult>>
  name: AclStatusResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: AclStatusResult
    fullName: AclStatusResult
    uid: azure-arm-datalake-store.AclStatusResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-datalake-store.ContentSummaryResult>
  name: ContentSummaryResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ContentSummaryResult
    fullName: ContentSummaryResult
    uid: azure-arm-datalake-store.ContentSummaryResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.ContentSummaryResult>
  name: ContentSummaryResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ContentSummaryResult
    fullName: ContentSummaryResult
    uid: azure-arm-datalake-store.ContentSummaryResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.ContentSummaryResult>>
  name: ContentSummaryResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ContentSummaryResult
    fullName: ContentSummaryResult
    uid: azure-arm-datalake-store.ContentSummaryResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-datalake-store.FileStatusResult>
  name: FileStatusResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: FileStatusResult
    fullName: FileStatusResult
    uid: azure-arm-datalake-store.FileStatusResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.FileStatusResult>
  name: FileStatusResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: FileStatusResult
    fullName: FileStatusResult
    uid: azure-arm-datalake-store.FileStatusResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.FileStatusResult>>
  name: FileStatusResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: FileStatusResult
    fullName: FileStatusResult
    uid: azure-arm-datalake-store.FileStatusResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-datalake-store.FileStatusesResult>
  name: FileStatusesResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: FileStatusesResult
    fullName: FileStatusesResult
    uid: azure-arm-datalake-store.FileStatusesResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.FileStatusesResult>
  name: FileStatusesResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: FileStatusesResult
    fullName: FileStatusesResult
    uid: azure-arm-datalake-store.FileStatusesResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.FileStatusesResult>>
  name: FileStatusesResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: FileStatusesResult
    fullName: FileStatusesResult
    uid: azure-arm-datalake-store.FileStatusesResult
  - name: '>>'
    fullName: '>>'
